{"version":3,"sources":["webpack:///./src/app/layout/estimates/all-created-estimate/all-created-estimate.component.html","webpack:///./src/app/layout/estimates/all-created-estimate/all-created-estimate.component.scss","webpack:///./src/app/layout/estimates/all-created-estimate/all-created-estimate.component.ts","webpack:///./src/app/layout/estimates/create-estimate/create-estimate.component.html","webpack:///./src/app/layout/estimates/create-estimate/create-estimate.component.scss","webpack:///./src/app/layout/estimates/create-estimate/create-estimate.component.ts","webpack:///./src/app/layout/estimates/estimates-routing.module.ts","webpack:///./src/app/layout/estimates/estimates.component.html","webpack:///./src/app/layout/estimates/estimates.component.scss","webpack:///./src/app/layout/estimates/estimates.component.ts","webpack:///./src/app/layout/estimates/estimates.module.ts","webpack:///./src/app/layout/estimates/po-again-estimates/po-again-estimates.component.html","webpack:///./src/app/layout/estimates/po-again-estimates/po-again-estimates.component.scss","webpack:///./src/app/layout/estimates/po-again-estimates/po-again-estimates.component.ts","webpack:///./src/app/layout/estimates/received-estimates/received-estimates.component.html","webpack:///./src/app/layout/estimates/received-estimates/received-estimates.component.scss","webpack:///./src/app/layout/estimates/received-estimates/received-estimates.component.ts","webpack:///./src/app/layout/estimates/submit-estimate/submit-estimate.component.html","webpack:///./src/app/layout/estimates/submit-estimate/submit-estimate.component.scss","webpack:///./src/app/layout/estimates/submit-estimate/submit-estimate.component.ts","webpack:///./src/app/parameters.ts"],"names":[],"mappings":"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","file":"estimates-estimates-module.js","sourcesContent":["module.exports = \"<div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-md-12 col-sm-12 col-xl-12 col-lg-12 min-height\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <h4><i class=\\\"fa fa-book\\\"></i> Estimate Details</h4>\\r\\n              <p class=\\\"text-muted\\\"></p>\\r\\n              <hr />\\r\\n            </div></div>\\r\\n      <!-- <form [formGroup]=\\\"filterForm\\\">\\r\\n        \\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Expiry Date (From:) </label>\\r\\n              <div class=\\\"input-group datepicker-input\\\">\\r\\n                <input\\r\\n                  class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"dd/mm/yyyy\\\"\\r\\n                  name=\\\"dp\\\"\\r\\n                  formControlName=\\\"start_date\\\"\\r\\n                  ngbDatepicker\\r\\n                  #d=\\\"ngbDatepicker\\\"\\r\\n                />\\r\\n                <div class=\\\"input-group-append\\\">\\r\\n                  <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\r\\n                    <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Expiry Date (Till)</label>\\r\\n              <div class=\\\"input-group datepicker-input\\\">\\r\\n                <input\\r\\n                  class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"dd/mm/yyyy\\\"\\r\\n                  name=\\\"dp2\\\"\\r\\n                  formControlName=\\\"end_date\\\"\\r\\n                  ngbDatepicker\\r\\n                  #d1=\\\"ngbDatepicker\\\"\\r\\n                />\\r\\n                <div class=\\\"input-group-append\\\">\\r\\n                  <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d1.toggle()\\\" type=\\\"button\\\">\\r\\n                    <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Select Product</label>\\r\\n              <select formControlName=\\\"site_name\\\" class=\\\"form-control\\\">\\r\\n                  <option value=\\\"\\\">All</option>\\r\\n                <option *ngFor=\\\"let s of sites\\\" value=\\\"{{ s.branch_name }}\\\">\\r\\n                  {{ s.branch_name }}\\r\\n                </option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          \\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <label class=\\\"required\\\">Product</label>\\r\\n            <ng-select [items]=\\\"items_option\\\" placeholder=\\\"Type and search items\\\" bindLabel=\\\"itemname\\\" bindValue=\\\"itemname\\\"\\r\\n              formControlName=\\\"item_name\\\">\\r\\n            </ng-select>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"col-md-4 wrapper-right\\\">\\r\\n            <button (click)=\\\"fetchReport()\\\" class=\\\"btn btn-primary\\\" >\\r\\n              <i class=\\\"fa fa-get-pocket\\\" aria-hidden=\\\"true\\\"></i> Fetch\\r\\n            </button>&nbsp;\\r\\n            <button (click)=\\\"resetFilters()\\\" class=\\\"btn btn-warning\\\"><i class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\"></i> Reset </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form> -->\\r\\n<!--       <hr />\\r\\n -->      \\r\\n      <table class=\\\"table table-hover table-striped table-bordered table-condensed\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th class=\\\"cell-align\\\">S No</th>\\r\\n<!--       <th class=\\\"cell-align\\\">Estimate ID</th>\\r\\n -->      <th class=\\\"cell-align\\\">Product Name</th>\\r\\n      <th class=\\\"cell-align\\\">Quantity</th>\\r\\n      <th class=\\\"cell-align\\\">Created On</th>\\r\\n      <th class=\\\"cell-align\\\">Expiry Date</th>\\r\\n      <th align=\\\"center\\\">Actions</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngIf=\\\"loading\\\">\\r\\n      <td colspan=\\\"10\\\">\\r\\n        <div class=\\\"showbox\\\">\\r\\n          <div class=\\\"loader\\\">\\r\\n            <svg class=\\\"circular\\\" viewBox=\\\"25 25 50 50\\\">\\r\\n              <circle class=\\\"path\\\" cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"2\\\" stroke-miterlimit=\\\"10\\\" />\\r\\n            </svg>\\r\\n          </div>\\r\\n        </div>\\r\\n      </td>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let t of estimates; let i = index\\\">\\r\\n\\r\\n      <!-- <td *ngIf=\\\"t.editing\\\">\\r\\n        <input type=\\\"text\\\">\\r\\n      </td> -->\\r\\n\\r\\n      <td class=\\\"cell-align\\\">{{ i + 1}}</td>\\r\\n      \\r\\n<!--       <td  class=\\\"cell-align\\\">{{ t._id}}</td>\\r\\n -->      \\r\\n      <td class=\\\"cell-align\\\" *ngIf=\\\"!isEdit ||  t._id!=editId\\\">\\r\\n        {{t.product}}\\r\\n      </td>\\r\\n      <td class=\\\"cell-align\\\" *ngIf=\\\"isEdit && t._id==editId\\\">\\r\\n        <!-- <ng-select [multiple]=\\\"true\\\" [items]=\\\"items_option\\\" placeholder=\\\"Type and search items\\\" bindLabel=\\\"itemname\\\" bindValue=\\\"itemname\\\"\\r\\n            [(ngModel)]=\\\"t.product\\\">\\r\\n          </ng-select> -->\\r\\n          {{t.product}}\\r\\n      </td>\\r\\n      \\r\\n      <td class=\\\"cell-align\\\" *ngIf=\\\"!isEdit ||  t._id!=editId\\\"> \\r\\n        {{t.productQty}}\\r\\n      </td>\\r\\n      <td class=\\\"cell-align\\\" *ngIf=\\\"isEdit && t._id==editId\\\">\\r\\n       <!--  <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"width: 50px !important; text-align: center !important;\\\"\\r\\n         [(ngModel)]=\\\"t.productQty\\\" /> -->\\r\\n         {{t.productQty}}\\r\\n      </td>\\r\\n\\r\\n      <td class=\\\"cell-align\\\">\\r\\n        {{t.creationDate | date:'longDate'}}\\r\\n      </td>\\r\\n      <td class=\\\"cell-align\\\" *ngIf=\\\"!isEdit ||  t._id!=editId\\\">\\r\\n        {{t.expiryDate | date:'longDate'}}\\r\\n      </td>\\r\\n      <td class=\\\"cell-align\\\" *ngIf=\\\"isEdit && t._id==editId\\\">\\r\\n          <div class=\\\"input-group datepicker-input\\\">\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            placeholder=\\\"dd/mm/yyyy\\\"\\r\\n            name=\\\"dp3\\\"\\r\\n            style=\\\"width: 80px !important; text-align: center !important;\\\"\\r\\n            [(ngModel)]=\\\"t.ngbExpiry\\\"\\r\\n            ngbDatepicker\\r\\n            #d3=\\\"ngbDatepicker\\\" [minDate]=\\\"minDate\\\"  required\\r\\n          />\\r\\n          <div class=\\\"input-group-append\\\">\\r\\n              <button class=\\\"btn btn-outline-secondary calendar\\\" \\r\\n               (click)=\\\"d3.toggle()\\\" type=\\\"button\\\">\\r\\n                <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n      </td>\\r\\n      <td>\\r\\n        <button class=\\\"btn btn-primary\\\" *ngIf=\\\"!isEdit ||  t._id!=editId\\\" (click)=\\\"edit(t)\\\">Edit</button>&nbsp;&nbsp;\\r\\n        <button  class=\\\"btn btn-danger\\\"  *ngIf=\\\"!isEdit ||  t._id!=editId\\\" (click)=\\\"delete(t)\\\">Delete</button>\\r\\n        <button class=\\\"btn btn-primary\\\" *ngIf=\\\"isEdit && t._id==editId\\\" (click)=\\\"save(t)\\\" >Save</button>&nbsp;&nbsp;\\r\\n        <button  class=\\\"btn btn-danger\\\"  *ngIf=\\\"isEdit && t._id==editId\\\" (click)=\\\"isEdit=false;\\\">Cancel</button>\\r\\n      </td>\\r\\n    </tr>\\r\\n    <tr *ngIf=\\\"loaded && estimates.length === 0\\\">\\r\\n        <td align=\\\"center\\\" colspan=\\\"7\\\">No data available</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table></div></div></div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9lc3RpbWF0ZXMvYWxsLWNyZWF0ZWQtZXN0aW1hdGUvYWxsLWNyZWF0ZWQtZXN0aW1hdGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { EstimateService } from 'src/app/shared/services/estimates.service';\r\nimport { Response } from '@angular/http/src/static_response';\r\nimport { NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { NgbDateStruct, NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MetaService } from 'src/app/shared/services/meta.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-all-created-estimate',\r\n  templateUrl: './all-created-estimate.component.html',\r\n  styleUrls: ['./all-created-estimate.component.scss']\r\n})\r\nexport class AllCreatedEstimateComponent implements OnInit {\r\n  estimates:any;\r\n  isEdit:boolean = false;\r\n  public items_option: any;\r\n  minDate;\r\n  editId;\r\n  loading=true;\r\n  loaded=false;\r\n  filterForm: FormGroup;\r\n  constructor(private estimateService:EstimateService,private parserFormatter: NgbDateParserFormatter,\r\n    private formBuilder: FormBuilder,     public toastr: ToastrService,\r\n    public meta: MetaService,     private calendar: NgbCalendar,\r\n\r\n  ) {\r\n    this.filterForm = this.formBuilder.group({\r\n      site_name: [''],\r\n      item_name: [''],\r\n      start_date: [''],\r\n      end_date: ['']\r\n  });\r\n\r\n  const current = new Date();\r\n  this.minDate = {\r\n    year: current.getFullYear(),\r\n    month: current.getMonth() + 1,\r\n    day: current.getDate()\r\n  };\r\n\r\n   }\r\n\r\n   edit(t){\r\n     this.editId=t._id;\r\n     this.isEdit = true;\r\n   }\r\n\r\n   delete(t){\r\n    this.estimateService.delete(t._id).subscribe(res=>{\r\n      this.toastr.success('Estimate Deleted successfully.');\r\n      this.isEdit=false;\r\n      this.getEstimates();\r\n    })\r\n   }\r\n\r\n   save(t){\r\n    const estimate = {\r\n      product: t.product,\r\n      productQty: t.productQty,\r\n      expiryDate: new Date(t.ngbExpiry.year, t.ngbExpiry.month - 1, t.ngbExpiry.day,23,59,59)\r\n    }\r\n    this.estimateService.update(t._id,estimate).subscribe(res=>{\r\n      this.toastr.success('Estimate Updated successfully.');\r\n      this.isEdit=false;\r\n      this.getEstimates();\r\n    })\r\n   }\r\n\r\n\r\n  ngOnInit() {\r\n    this.getEstimates();\r\n    this.getItems();\r\n  }\r\n\r\ngetEstimates(){\r\n  this.estimateService.getCreatedEstimates().subscribe(res=>{\r\n    var estimates = res['result']\r\n    estimates.forEach(t => {\r\n      t.ngbExpiry = {\r\n        year: new Date(t.expiryDate).getFullYear(),\r\n        month: new Date(t.expiryDate).getMonth() + 1,\r\n        day: new Date(t.expiryDate).getDate()\r\n      }\r\n    });\r\n    this.estimates=estimates;\r\n    this.loading=false;\r\n    this.loaded=true;\r\n  },\r\n  error=>{\r\n    this.loading=false;\r\n    this.loaded=true;\r\n    this.estimates = [];\r\n  })\r\n}\r\n\r\n  getItems() {\r\n    this.meta.getItemsList().subscribe(trackInfo => {\r\n      this.items_option = trackInfo['result'];\r\n      console.log('ItemsList >>>>>', this.items_option);\r\n    });\r\n}\r\n\r\n}\r\n","module.exports = \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <strong>Create Estimate</strong>\\r\\n  </div>\\r\\n  <form [formGroup]=\\\"createEstimateForm\\\">\\r\\n\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <label class=\\\"required\\\">Select Product</label>\\r\\n          <ng-select [multiple]=\\\"true\\\" [items]=\\\"items_option\\\" placeholder=\\\"Type and search items\\\" bindLabel=\\\"itemname\\\" bindValue=\\\"itemname\\\"\\r\\n            formControlName=\\\"product\\\">\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\" *ngIf=\\\"createEstimateForm.value.product?.length\\\">\\r\\n          <br/>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <tr>                   \\r\\n                <th>Product</th>                   \\r\\n                <th>Qty</th>                   \\r\\n           </tr>\\r\\n              \\r\\n              <tr *ngFor=\\\"let p of createEstimateForm.value.product;let i = index;\\\"> \\r\\n                <td>\\r\\n                  <input type=\\\"text\\\"  value=\\\"{{p}}\\\"  class=\\\"form-control price\\\" disabled>\\r\\n\\r\\n                </td>\\r\\n                <td>\\r\\n                  <input type=\\\"number\\\" min=\\\"0\\\" [(ngModel)]=\\\"qtys[i]\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"  class=\\\"form-control discount\\\">\\r\\n                </td>\\r\\n               \\r\\n              </tr>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Estimate Creation Date</label>\\r\\n            <div  class=\\\"input-group datepicker-input\\\">\\r\\n              <input disabled\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"dd/mm/yyyy\\\"\\r\\n                name=\\\"dp1\\\"\\r\\n                formControlName=\\\"creationDate\\\"\\r\\n                ngbDatepicker\\r\\n                #d1=\\\"ngbDatepicker\\\"\\r\\n                 required\\r\\n              />\\r\\n              <!-- <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d1.toggle()\\\" type=\\\"button\\\">\\r\\n                  <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                </button>\\r\\n              </div> -->\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Estimate Expiry Date</label>\\r\\n            <div class=\\\"input-group datepicker-input\\\">\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"dd/mm/yyyy\\\"\\r\\n                name=\\\"dp2\\\"\\r\\n                formControlName=\\\"expiryDate\\\"\\r\\n                ngbDatepicker\\r\\n                #d2=\\\"ngbDatepicker\\\" \\r\\n                [minDate]=\\\"minDate\\\" \\r\\n                required\\r\\n              />\\r\\n              <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d2.toggle()\\\" type=\\\"button\\\">\\r\\n                  <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <label class=\\\"required\\\">Select Vendor</label>\\r\\n          <ng-select [multiple]=\\\"true\\\" [items]=\\\"vendor_master_list\\\" placeholder=\\\"Type and search items\\\" bindLabel=\\\"vendorname\\\" bindValue=\\\"vendorname\\\"\\r\\n            formControlName=\\\"vendor\\\">\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Remarks: (If Any)</label>\\r\\n            <textarea class=\\\"form-control\\\" formControlName=\\\"remark\\\" ></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!createEstimateForm.valid\\\" class=\\\"btn btn-success\\\">Create</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9lc3RpbWF0ZXMvY3JlYXRlLWVzdGltYXRlL2NyZWF0ZS1lc3RpbWF0ZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { NgbDateStruct, NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MetaService } from 'src/app/shared/services/meta.service';\r\nimport { MaintenanceService } from 'src/app/shared/services/maintenance.service';\r\nimport { EstimateService } from 'src/app/shared/services/estimates.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Component({\r\n  selector: 'app-create-estimate',\r\n  templateUrl: './create-estimate.component.html',\r\n  styleUrls: ['./create-estimate.component.scss']\r\n})\r\nexport class CreateEstimateComponent implements OnInit {\r\n  public createEstimateForm: FormGroup;\r\n  public items_option: any;\r\n  minDate;\r\n  qtys = [];\r\n  public vendor_master_list:any;\r\n  constructor(private formBuilder: FormBuilder,\r\n    private calendar: NgbCalendar,\r\n    public meta: MetaService,\r\n    public maintenanceService: MaintenanceService,\r\n    private estimateService: EstimateService,\r\n    public toastr: ToastrService,\r\n  ) { \r\n    const current = new Date();\r\n    this.minDate = {\r\n      year: current.getFullYear(),\r\n      month: current.getMonth() + 1,\r\n      day: current.getDate()\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createEstimateForm = this.formBuilder.group({\r\n      product: ['',Validators.required],\r\n      productQty: [''],\r\n      creationDate: ['',Validators.required],\r\n      expiryDate: ['',Validators.required],\r\n      vendor: ['',Validators.required],\r\n      remark: [''],\r\n    });\r\n\r\n    this.createEstimateForm.controls['creationDate'].setValue(this.calendar.getToday());\r\n    this.getItems();\r\n    this.getList();\r\n  }\r\n\r\n  getItems() {\r\n    this.meta.getItemsList().subscribe(trackInfo => {\r\n      this.items_option = trackInfo['result'];\r\n      console.log('ItemsList >>>>>', this.items_option);\r\n    });\r\n}\r\n\r\nsubmit(){\r\n  console.log(this.qtys.length)\r\n  if(this.createEstimateForm.valid && this.qtys.length){\r\n    const estimate = {\r\n      product: this.createEstimateForm.value.product,\r\n      productQty: this.qtys,\r\n      creationDate: new Date(this.createEstimateForm.value.creationDate.year, this.createEstimateForm.value.creationDate.month - 1, this.createEstimateForm.value.creationDate.day),\r\n      expiryDate: new Date(this.createEstimateForm.value.expiryDate.year, this.createEstimateForm.value.expiryDate.month - 1, this.createEstimateForm.value.expiryDate.day,23,59,59),\r\n      vendors: this.createEstimateForm.value.vendor,\r\n      remark: this.createEstimateForm.value.remark,\r\n      status: 'CREATED'\r\n    }\r\n    this.estimateService.addEstimate(estimate).subscribe(response=>{\r\n      this.toastr.success('Estimate Created successfully.');\r\n      this.reset();\r\n    })\r\n  }\r\n}\r\n\r\nreset(){\r\n  this.createEstimateForm.reset();\r\n  this.createEstimateForm.controls['creationDate'].setValue(this.calendar.getToday());\r\n}\r\n\r\n/* filterVendorNameData(): void {\r\n  if (this.text_filter !== '') {\r\n    this.filteredData = this.vendor_master_list.filter(obj =>\r\n      this.filterKeys.some(propertyName =>\r\n        obj[propertyName].toString().toLowerCase().includes(this.text_filter.toLowerCase())));\r\n  } else {\r\n    this.filteredData = this.vendor_master_list;\r\n  }\r\n} */\r\n\r\n\r\n\r\ngetList() {\r\n  this.maintenanceService.getVendorMasterList().subscribe((res: any) => {\r\n    console.log('>>>>res', res);\r\n    var vList:any = [];\r\n    res.result.forEach(vendor => {\r\n      vList.push(vendor.name);\r\n    });\r\n    this.vendor_master_list = vList;\r\n    console.log('Vendorlist >>>>>', this.vendor_master_list);\r\n  }, err => {\r\n    console.log('err   >>>', err);\r\n  });\r\n}\r\n\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EstimatesComponent } from 'src/app/layout/estimates/estimates.component';\r\nimport { CreateEstimateComponent } from 'src/app/layout/estimates/create-estimate/create-estimate.component';\r\nimport { AllCreatedEstimateComponent } from 'src/app/layout/estimates/all-created-estimate/all-created-estimate.component';\r\nimport { ReceivedEstimatesComponent } from 'src/app/layout/estimates/received-estimates/received-estimates.component';\r\nimport { PoAgainEstimatesComponent } from 'src/app/layout/estimates/po-again-estimates/po-again-estimates.component';\r\nimport { SubmitEstimateComponent } from 'src/app/layout/estimates/submit-estimate/submit-estimate.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EstimatesComponent,\r\n    children: [\r\n      {path: '', redirectTo: 'create-estimate', pathMatch: 'prefix' },\r\n      {path: 'create-estimate', component: CreateEstimateComponent},\r\n      {path: 'all-created-estimates', component: AllCreatedEstimateComponent},\r\n      {path: 'received-estimates', component: ReceivedEstimatesComponent},\r\n      {path: 'po-again-estimates', component: PoAgainEstimatesComponent},\r\n      {path: 'submit-estimate', component: SubmitEstimateComponent},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class EstimatesRoutingModule { }\r\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9lc3RpbWF0ZXMvZXN0aW1hdGVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-estimates',\r\n  templateUrl: './estimates.component.html',\r\n  styleUrls: ['./estimates.component.scss']\r\n})\r\nexport class EstimatesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PoAgainEstimatesComponent } from 'src/app/layout/estimates/po-again-estimates/po-again-estimates.component';\r\nimport { ReceivedEstimatesComponent } from 'src/app/layout/estimates/received-estimates/received-estimates.component';\r\nimport { AllCreatedEstimateComponent } from 'src/app/layout/estimates/all-created-estimate/all-created-estimate.component';\r\nimport { CreateEstimateComponent } from 'src/app/layout/estimates/create-estimate/create-estimate.component';\r\nimport { EstimatesRoutingModule } from 'src/app/layout/estimates/estimates-routing.module';\r\nimport { EstimatesComponent } from 'src/app/layout/estimates/estimates.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule, NgbTimeAdapter } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Ng2AutoCompleteModule } from 'ng2-auto-complete';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { SubmitEstimateComponent } from 'src/app/layout/estimates/submit-estimate/submit-estimate.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CreateEstimateComponent, AllCreatedEstimateComponent, ReceivedEstimatesComponent,\r\n     PoAgainEstimatesComponent, EstimatesComponent,SubmitEstimateComponent],\r\n  imports: [\r\n    CommonModule,\r\n    EstimatesRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    Ng2AutoCompleteModule,\r\n  ]\r\n})\r\nexport class EstimatesModule { }\r\n","module.exports = \"<p>\\r\\n  po-again-estimates works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9lc3RpbWF0ZXMvcG8tYWdhaW4tZXN0aW1hdGVzL3BvLWFnYWluLWVzdGltYXRlcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-po-again-estimates',\r\n  templateUrl: './po-again-estimates.component.html',\r\n  styleUrls: ['./po-again-estimates.component.scss']\r\n})\r\nexport class PoAgainEstimatesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col col-md-12 col-sm-12 col-xl-12 col-lg-12 min-height\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <h4><i class=\\\"fa fa-book\\\"></i> Received Estimates From Vendor</h4>\\r\\n                <p class=\\\"text-muted\\\"></p>\\r\\n                <hr />\\r\\n              </div></div>\\r\\n        <!-- <form [formGroup]=\\\"filterForm\\\">\\r\\n          \\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Expiry Date (From:) </label>\\r\\n                <div class=\\\"input-group datepicker-input\\\">\\r\\n                  <input\\r\\n                    class=\\\"form-control\\\"\\r\\n                    placeholder=\\\"dd/mm/yyyy\\\"\\r\\n                    name=\\\"dp\\\"\\r\\n                    formControlName=\\\"start_date\\\"\\r\\n                    ngbDatepicker\\r\\n                    #d=\\\"ngbDatepicker\\\"\\r\\n                  />\\r\\n                  <div class=\\\"input-group-append\\\">\\r\\n                    <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\r\\n                      <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Expiry Date (Till)</label>\\r\\n                <div class=\\\"input-group datepicker-input\\\">\\r\\n                  <input\\r\\n                    class=\\\"form-control\\\"\\r\\n                    placeholder=\\\"dd/mm/yyyy\\\"\\r\\n                    name=\\\"dp2\\\"\\r\\n                    formControlName=\\\"end_date\\\"\\r\\n                    ngbDatepicker\\r\\n                    #d1=\\\"ngbDatepicker\\\"\\r\\n                  />\\r\\n                  <div class=\\\"input-group-append\\\">\\r\\n                    <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d1.toggle()\\\" type=\\\"button\\\">\\r\\n                      <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Select Product</label>\\r\\n                <select formControlName=\\\"site_name\\\" class=\\\"form-control\\\">\\r\\n                    <option value=\\\"\\\">All</option>\\r\\n                  <option *ngFor=\\\"let s of sites\\\" value=\\\"{{ s.branch_name }}\\\">\\r\\n                    {{ s.branch_name }}\\r\\n                  </option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n  \\r\\n            \\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <label class=\\\"required\\\">Product</label>\\r\\n              <ng-select [items]=\\\"items_option\\\" placeholder=\\\"Type and search items\\\" bindLabel=\\\"itemname\\\" bindValue=\\\"itemname\\\"\\r\\n                formControlName=\\\"item_name\\\">\\r\\n              </ng-select>\\r\\n            </div>\\r\\n  \\r\\n  \\r\\n            <div class=\\\"col-md-4 wrapper-right\\\">\\r\\n              <button (click)=\\\"fetchReport()\\\" class=\\\"btn btn-primary\\\" >\\r\\n                <i class=\\\"fa fa-get-pocket\\\" aria-hidden=\\\"true\\\"></i> Fetch\\r\\n              </button>&nbsp;\\r\\n              <button (click)=\\\"resetFilters()\\\" class=\\\"btn btn-warning\\\"><i class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\"></i> Reset </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form> -->\\r\\n  <!--       <hr />\\r\\n   -->      \\r\\n        <table class=\\\"table table-hover table-striped table-bordered table-condensed\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th class=\\\"cell-align\\\">S No</th>\\r\\n<!--         <th class=\\\"cell-align\\\">Estimate ID</th>\\r\\n -->        <th class=\\\"cell-align\\\">Product Name</th>\\r\\n        <th class=\\\"cell-align\\\">Vendor Name</th>\\r\\n        <th class=\\\"cell-align\\\">Estimate Rate</th>\\r\\n<!--         <th class=\\\"cell-align\\\">Remark</th>\\r\\n -->        <th class=\\\"cell-align\\\">Estimate Date</th>\\r\\n        <th class=\\\"cell-align\\\">Received Date</th>\\r\\n        <th align=\\\"center\\\">Actions</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngIf=\\\"loading\\\">\\r\\n        <td colspan=\\\"10\\\">\\r\\n          <div class=\\\"showbox\\\">\\r\\n            <div class=\\\"loader\\\">\\r\\n              <svg class=\\\"circular\\\" viewBox=\\\"25 25 50 50\\\">\\r\\n                <circle class=\\\"path\\\" cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"2\\\" stroke-miterlimit=\\\"10\\\" />\\r\\n              </svg>\\r\\n            </div>\\r\\n          </div>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let t of estimates; let i = index\\\">\\r\\n  \\r\\n        <!-- <td *ngIf=\\\"t.editing\\\">\\r\\n          <input type=\\\"text\\\">\\r\\n        </td> -->\\r\\n  \\r\\n        <td class=\\\"cell-align\\\">{{ i+1 }}</td>\\r\\n        \\r\\n<!--         <td  class=\\\"cell-align\\\">{{ t.estimateId}}</td>\\r\\n -->        \\r\\n        <td class=\\\"cell-align\\\">\\r\\n          {{t.product}}\\r\\n        </td>\\r\\n        <td class=\\\"cell-align\\\">\\r\\n            {{t.vendor}}\\r\\n          </td>\\r\\n\\r\\n          <td class=\\\"cell-align\\\">\\r\\n              {{t.totalPrice | currency : 'INR' : true : '1.2-2'}}\\r\\n            </td>\\r\\n        \\r\\n        <!-- <td class=\\\"cell-align\\\">\\r\\n          {{t.remark}}\\r\\n        </td> -->\\r\\n        <td class=\\\"cell-align\\\">\\r\\n          {{t.estimateDate | date:'longDate'}}\\r\\n        </td>\\r\\n        <td class=\\\"cell-align\\\">\\r\\n          {{t.receivedDate | date:'longDate'}}\\r\\n        </td>\\r\\n        <td>\\r\\n          <button class=\\\"btn btn-primary\\\" *ngIf=\\\"!estimateInstances.length\\\" (click)=\\\"getEstimateDetails(t._id)\\\">View Details</button>&nbsp;&nbsp;\\r\\n          <button class=\\\"btn btn-primary\\\" *ngIf=\\\"estimateInstances.length\\\" (click)=\\\"hideDetails()\\\">Hide Details</button>&nbsp;&nbsp;\\r\\n\\r\\n          <!--           <button  class=\\\"btn btn-danger\\\">Reject</button>\\r\\n -->        </td>\\r\\n      </tr>\\r\\n      <tr *ngIf=\\\"loaded && estimates.length === 0\\\">\\r\\n          <td align=\\\"center\\\" colspan=\\\"9\\\">No data available</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table></div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"estimateInstances.length\\\">\\r\\n      <div class=\\\"col col-md-12 col-sm-12 col-xl-12 col-lg-12 min-height\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <table class=\\\"table table-bordered\\\">\\r\\n                <tr>   \\r\\n                    <th>Product</th>                   \\r\\n                    <th>Qty</th>  \\r\\n                  <th>Amount(<i class=\\\"fa fa-inr\\\" aria-hidden=\\\"true\\\"></i>)</th>\\r\\n             </tr>\\r\\n                \\r\\n                <tr *ngFor=\\\"let p of estimateInstances;let i = index;\\\">\\r\\n                    <td>\\r\\n                        <input type=\\\"text\\\" disabled [(ngModel)]=\\\"estimateInstances[i].product\\\"\\r\\n                         [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                          class=\\\"form-control price\\\">\\r\\n  \\r\\n                      </td>\\r\\n                      <td>\\r\\n                          <input type=\\\"number\\\" min=\\\"0\\\" disabled \\r\\n                          [(ngModel)]=\\\"estimateInstances[i].productQty\\\"\\r\\n                          [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                          class=\\\"form-control price\\\">\\r\\n    \\r\\n                        </td>\\r\\n                  <td>\\r\\n                    <input type=\\\"number\\\" min=\\\"0\\\"\\r\\n                    [(ngModel)]=\\\"estimateInstances[i].total\\\"\\r\\n                    [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                     class=\\\"form-control total\\\" disabled>\\r\\n\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </div>\\r\\n      </div>\\r\\n      <div class=\\\"col col-md-12 col-sm-12 col-xl-12 col-lg-12 min-height\\\">\\r\\n        <button (click)=\\\"purchaseOrder()\\\" class=\\\"btn btn-primary\\\">PO</button>&nbsp;&nbsp;\\r\\n        <button  (click)=\\\"reject()\\\" class=\\\"btn btn-danger\\\">Reject</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9lc3RpbWF0ZXMvcmVjZWl2ZWQtZXN0aW1hdGVzL3JlY2VpdmVkLWVzdGltYXRlcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { EstimateService } from 'src/app/shared/services/estimates.service';\r\nimport { NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Router , ActivatedRoute} from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-received-estimates',\r\n  templateUrl: './received-estimates.component.html',\r\n  styleUrls: ['./received-estimates.component.scss']\r\n})\r\nexport class ReceivedEstimatesComponent implements OnInit {\r\n\r\n  estimates:any;\r\n  loading=true;\r\n  loaded=false;\r\n  detailId;\r\n  estimateInstances = [];\r\n  filterForm: FormGroup;\r\n  constructor(private estimateService:EstimateService,\r\n    private parserFormatter: NgbDateParserFormatter,\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    public toastr: ToastrService,\r\n  ) {\r\n    this.filterForm = this.formBuilder.group({\r\n      site_name: [''],\r\n      item_name: [''],\r\n      start_date: [''],\r\n      end_date: ['']\r\n  });\r\n   }\r\n\r\n   hideDetails(){\r\n     this.estimateInstances = [];\r\n     this.detailId = null;\r\n   }\r\n\r\n   getEstimateDetails(id){\r\n    this.estimateService.getEstimatesProdSubmisions(id).subscribe(res=>{\r\n      this.estimateInstances = res['result'];\r\n      this.detailId = id;\r\n    })\r\n   }\r\n\r\n   purchaseOrder(){\r\n      this.router.navigateByUrl('/inventory/add-order/'+this.detailId);\r\n      //inventory/add-order\r\n   }\r\n\r\n   reject(){\r\n      this.estimateService.rejectEstimateSubmission(this.detailId).subscribe(res=>{\r\n        this.toastr.success('Estimate Rejected successfully.');\r\n      })\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.estimateService.getEstimatesSubmisions().subscribe(res=>{\r\n      var estimates = res['result']\r\n      this.estimates=estimates;\r\n      this.loading=false;\r\n      this.loaded=true;\r\n    },\r\n    error=>{\r\n      this.loading=false;\r\n      this.loaded=true;\r\n      this.estimates = [];\r\n    })\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"card\\\" *ngIf=\\\"estimate && !estimate.isDeleted\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <strong>Submit Estimate Response</strong>\\r\\n  </div>\\r\\n  <form [formGroup]=\\\"submitEstimateForm\\\">\\r\\n\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n              <label class=\\\"required\\\"> Estimate ID</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"estimateId\\\" disabled />\\r\\n    \\r\\n            </div>\\r\\n        <!-- <div class=\\\"col-md-6\\\">\\r\\n          <label class=\\\"required\\\"> Product</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"product\\\" disabled />\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Product Qty</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"productQty\\\" disabled/>\\r\\n          </div>\\r\\n        </div> -->\\r\\n\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <label class=\\\"required\\\"> Vendor</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [value]=\\\"vendor\\\" disabled/>\\r\\n\\r\\n        </div>\\r\\n          <!-- <div class=\\\"col-md-6\\\">\\r\\n              <label class=\\\"required\\\">Stock Status</label>\\r\\n              <ng-select [items]=\\\"stockOptions\\\" placeholder=\\\"Type and search items\\\" bindLabel=\\\"vendorname\\\" bindValue=\\\"vendorname\\\"\\r\\n                formControlName=\\\"stockStatus\\\">\\r\\n              </ng-select>\\r\\n              \\r\\n            </div> -->\\r\\n       \\r\\n        \\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <br/>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <table class=\\\"table table-bordered\\\">\\r\\n                  <tr>   \\r\\n                      <th>Product</th>                   \\r\\n                      <th>Qty</th>  \\r\\n                      <th>Availability</th>                                  \\r\\n                    <th>Unit</th>                   \\r\\n                    <th>Price(<i class=\\\"fa fa-inr\\\" aria-hidden=\\\"true\\\"></i>)</th>\\r\\n                    <th>Dis(%)</th>\\r\\n                    <th>CGST(%)</th>\\r\\n                    <th>SGST(%)</th>\\r\\n                    <th>IGST(%)</th>\\r\\n                    <th>Amount(<i class=\\\"fa fa-inr\\\" aria-hidden=\\\"true\\\"></i>)</th>\\r\\n               </tr>\\r\\n                  \\r\\n                  <tr *ngFor=\\\"let p of submitEstimateForm.value.product;let i = index;\\\">\\r\\n                      <td>\\r\\n                          <input type=\\\"text\\\" disabled [(ngModel)]=\\\"estimateInstances[i].product\\\"\\r\\n                           [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                            class=\\\"form-control price\\\">\\r\\n    \\r\\n                        </td>\\r\\n                        <td>\\r\\n                            <input type=\\\"number\\\" min=\\\"0\\\" disabled style=\\\"width:80px;\\\" \\r\\n                            [(ngModel)]=\\\"estimateInstances[i].productQty\\\"\\r\\n                            [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                            class=\\\"form-control price\\\">\\r\\n      \\r\\n                          </td>\\r\\n                          <td>\\r\\n                              <ng-select [items]=\\\"stockOptions\\\" style=\\\"width:120px;\\\"\\r\\n                              placeholder=\\\"Type and search items\\\"\\r\\n                              [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                              [(ngModel)]=\\\"estimateInstances[i].stockStatus\\\"\\r\\n                               bindLabel=\\\"vendorname\\\" bindValue=\\\"vendorname\\\"\\r\\n                              >\\r\\n                            </ng-select>\\r\\n\\r\\n                          </td>\\r\\n                    <td>\\r\\n                      <div class=\\\"input-group\\\">\\r\\n                          <ng-select [items]=\\\"unit_option\\\"\\r\\n                          placeholder=\\\"Please select Unit\\\"\\r\\n                          [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                          [disabled]=\\\"estimateInstances[i].stockStatus!='Available'\\\"\\r\\n                          [(ngModel)]=\\\"estimateInstances[i].unit\\\"\\r\\n                          >\\r\\n                        </ng-select>\\r\\n                        <!-- <select class=\\\"form-control\\\"\\r\\n                         [attr.disabled]=\\\"estimateInstances[i].stockStatus!='Available' ? '' : null\\\"\\r\\n                         [(ngModel)]=\\\"estimateInstances[i].unit\\\"\\r\\n                         style=\\\"width:80px;\\\">\\r\\n                          <option *ngFor=\\\"let option of unit_option\\\" [value]=\\\"option\\\"> {{option}}</option>\\r\\n                        </select> -->\\r\\n                      </div>\\r\\n                    </td>\\r\\n                    \\r\\n                    <td>\\r\\n                      <input type=\\\"number\\\" min=\\\"0\\\" style=\\\"width:80px;\\\" \\r\\n                      (change)=\\\"evaluate(i)\\\"\\r\\n                      [(ngModel)]=\\\"estimateInstances[i].unitRate\\\"\\r\\n                      [disabled]=\\\"estimateInstances[i].stockStatus!='Available'\\\"\\r\\n                      [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control price\\\">\\r\\n\\r\\n                    </td>\\r\\n                    <td> \\r\\n                      <input type=\\\"number\\\" min=\\\"0\\\" style=\\\"width:50px;\\\"\\r\\n                      (change)=\\\"evaluate(i)\\\"\\r\\n                      [(ngModel)]=\\\"estimateInstances[i].discount\\\"\\r\\n                      [disabled]=\\\"estimateInstances[i].stockStatus!='Available'\\\"\\r\\n                      [ngModelOptions]=\\\"{standalone: true}\\\"   class=\\\"form-control discount\\\">\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <input type=\\\"number\\\" min=\\\"0\\\" style=\\\"width:50px;\\\"\\r\\n                      (change)=\\\"evaluate(i)\\\"\\r\\n                      [disabled]=\\\"estimateInstances[i].stockStatus!='Available'\\\"\\r\\n                      [(ngModel)]=\\\"estimateInstances[i].cgst\\\"\\r\\n                      [ngModelOptions]=\\\"{standalone: true}\\\" \\r\\n                      class=\\\"form-control discount\\\">\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <input type=\\\"number\\\" min=\\\"0\\\" style=\\\"width:50px;\\\" \\r\\n                      (change)=\\\"evaluate(i)\\\"\\r\\n                      [disabled]=\\\"estimateInstances[i].stockStatus!='Available'\\\"\\r\\n                      [(ngModel)]=\\\"estimateInstances[i].sgst\\\"\\r\\n                      [ngModelOptions]=\\\"{standalone: true}\\\" \\r\\n                        class=\\\"form-control discount\\\">\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <input type=\\\"number\\\" min=\\\"0\\\" \\r\\n                      (change)=\\\"evaluate(i)\\\"\\r\\n                      style=\\\"width:50px;\\\" \\r\\n                      [disabled]=\\\"estimateInstances[i].stockStatus!='Available'\\\"\\r\\n                      [(ngModel)]=\\\"estimateInstances[i].igst\\\"\\r\\n                      [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                      class=\\\"form-control discount\\\">\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <input type=\\\"number\\\" min=\\\"0\\\"\\r\\n                      [(ngModel)]=\\\"estimateInstances[i].total\\\"\\r\\n                      [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                      style=\\\"width:80px;\\\" class=\\\"form-control total\\\" disabled>\\r\\n\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </table>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Remarks: (If Any)</label>\\r\\n            <textarea class=\\\"form-control\\\" formControlName=\\\"remark\\\" ></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Other Details</label>\\r\\n              <textarea class=\\\"form-control\\\" formControlName=\\\"otherDetails\\\" ></textarea>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!submitEstimateForm.valid || !isEstimationValid()\\\" class=\\\"btn btn-success\\\">Save</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n<div *ngIf=\\\"!estimate || estimate.isDeleted\\\">Estimate Response is no longer Required, Please close the window</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9lc3RpbWF0ZXMvc3VibWl0LWVzdGltYXRlL3N1Ym1pdC1lc3RpbWF0ZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { NgbDateStruct, NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MetaService } from 'src/app/shared/services/meta.service';\r\nimport { MaintenanceService } from 'src/app/shared/services/maintenance.service';\r\nimport { EstimateService } from 'src/app/shared/services/estimates.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { itemUnits } from 'src/app/parameters';\r\n\r\n\r\n@Component({\r\n  selector: 'submit-create-estimate',\r\n  templateUrl: './submit-estimate.component.html',\r\n  styleUrls: ['./submit-estimate.component.scss']\r\n})\r\nexport class SubmitEstimateComponent implements OnInit {\r\n  public submitEstimateForm: FormGroup;\r\n  public items_option: any;\r\n  public vendor_master_list:any;\r\n  public estimate:any;\r\n  public estimateInstances = [];\r\n  public vendor;\r\n  public unit_option = itemUnits;\r\n  stockOptions=['Available','Not-Available']\r\n  constructor(private formBuilder: FormBuilder,\r\n    private calendar: NgbCalendar,\r\n    public meta: MetaService,\r\n    public maintenanceService: MaintenanceService,\r\n    private estimateService: EstimateService,\r\n    public toastr: ToastrService,\r\n    private activatedRoute: ActivatedRoute\r\n  ) { \r\n    \r\n  }\r\n\r\n  evaluate(i){\r\n    var ei = this.estimateInstances[i];\r\n    var price = ei.unitRate;\r\n    var qty = ei.productQty;\r\n      if(price){\r\n        var discount = ei.discount\r\n        var cgst = ei.cgst\r\n        var sgst = ei.sgst\r\n        var igst = ei.igst\r\n        var tax = cgst + sgst + igst;\r\n        var total = price - (price * (discount/100)) + ((price * (tax/100)))\r\n        this.estimateInstances[i].total = total*qty;\r\n      } else{\r\n        this.estimateInstances[i].total = 0;\r\n      }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.submitEstimateForm = this.formBuilder.group({\r\n      product: ['',Validators.required],\r\n      productQty: ['',Validators.required],\r\n      estimateId: ['',Validators.required],\r\n      vendor: ['',Validators.required],\r\n      remark: [''],\r\n      otherDetails: [''],\r\n    });\r\n\r\n    \r\n\r\n    this.activatedRoute.queryParams.subscribe(params => {\r\n      let estimateId = params['estimateId'];\r\n      this.vendor = params['vendor']\r\n      this.estimateService.getSubmissionOfVendor(estimateId,this.vendor).subscribe(res=>{\r\n        if(res['result'].length==0){\r\n          console.log(estimateId);\r\n          this.estimateService.getEstimateById(estimateId).subscribe(estimate=>{\r\n            this.estimate = estimate['result'];\r\n            this.getList();\r\n            console.log(estimate)\r\n          })\r\n        }\r\n      })\r\n      \r\n    });\r\n\r\n  }\r\n\r\n  getItems() {\r\n    this.meta.getItemsList().subscribe(trackInfo => {\r\n      this.items_option = trackInfo['result'];\r\n      console.log('ItemsList >>>>>', this.items_option);\r\n    });\r\n}\r\n\r\nsubmit(){\r\n  if(this.submitEstimateForm.valid && this.isEstimationValid()){\r\n    const estimate = {\r\n      product: this.submitEstimateForm.value.product,\r\n      productQty: this.submitEstimateForm.value.productQty,\r\n      estimateId:this.submitEstimateForm.value.estimateId,\r\n      vendor:this.submitEstimateForm.value.vendor,\r\n      remark:this.submitEstimateForm.value.remark,\r\n      otherDetails:this.submitEstimateForm.value.otherDetails,\r\n      estimateDate:this.estimate.creationDate,\r\n      total:this.total(),\r\n      totalPrice:this.total(),\r\n      receivedDate:new Date()\r\n    }\r\n    let req = {\r\n      estimate : estimate,\r\n      instances : this.estimateInstances\r\n    }\r\n    this.estimateService.submitEstimate(req).subscribe(response=>{\r\n      this.toastr.success('Response Saved successfully.');\r\n      close();\r\n    })\r\n  }\r\n}\r\n\r\nreset(){\r\n  this.submitEstimateForm.reset();\r\n  this.submitEstimateForm.controls['creationDate'].setValue(this.calendar.getToday());\r\n}\r\n\r\ngetList() {\r\n  this.vendor_master_list = this.estimate.vendors;\r\n  let estimateVal  = {\r\n      product: this.estimate.product,\r\n      productQty: this.estimate.productQty,\r\n      estimateId: this.estimate._id,\r\n      vendor:this.vendor\r\n  }\r\n  this.submitEstimateForm.patchValue(estimateVal);\r\n  for(var i =0 ; i < this.estimate.product.length;i++){\r\n    let ei = {};\r\n    ei['estimateId']=this.estimate._id\r\n    ei['product']=this.estimate.product[i];\r\n    ei['productQty']=this.estimate.productQty[i];\r\n    ei['discount']=0;\r\n    ei['total']=0;\r\n    ei['cgst']=0;\r\n    ei['sgst']=0;\r\n    ei['igst']=0;\r\n    this.estimateInstances.push(ei);\r\n  }\r\n}\r\n\r\ntotal(){\r\n  var total = 0;\r\n  for(var i =0 ; i < this.estimateInstances.length; i++) {\r\n    total = total + this.estimateInstances[i].total;\r\n  }\r\n  return total;\r\n}\r\n\r\nisEstimationValid(){\r\n  var out = true;\r\n  var statuses = [];\r\n  for(var i =0 ; i < this.estimateInstances.length; i++) {\r\n    var status = false;\r\n    var ei = this.estimateInstances[i];\r\n    console.log(ei)\r\n    if(!ei.stockStatus){\r\n      status = false;\r\n    }\r\n    else if(ei.stockStatus=='Available'){\r\n      status = false;\r\n      if(ei.unitRate && ei.total){\r\n        status = true;\r\n      }\r\n    } else{\r\n      status = true;\r\n    }\r\n    statuses.push(status)\r\n    \r\n  }\r\n  for(var j =0 ; j< statuses.length;j++){\r\n    if(!statuses[j]){\r\n       out = false;\r\n       break;\r\n    }\r\n  }\r\n  return out;\r\n}\r\n\r\n\r\n\r\n}\r\n\r\n async function close(){\r\n  await sleep(1000)\r\n  window.location.reload();\r\n    \r\n}\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n","import { environment } from '../environments/environment';\r\n\r\nexport const baseURL = environment.api_endpoint;\r\nexport const itemUnits = [\r\n  'Nos','Kgs','Ltr','Set','Roll'\r\n\r\n]\r\n// get ApiURL\r\nexport function GetApiurl(path: string) {\r\n  return baseURL + path;\r\n\r\n}"],"sourceRoot":""}