{"version":3,"sources":["webpack:///./src/app/layout/maintenance/add-engine-typemaster/add-engine-typemaster.component.html","webpack:///./src/app/layout/maintenance/add-engine-typemaster/add-engine-typemaster.component.scss","webpack:///./src/app/layout/maintenance/add-engine-typemaster/add-engine-typemaster.component.ts","webpack:///./src/app/layout/maintenance/add-job-work/add-job-work.component.html","webpack:///./src/app/layout/maintenance/add-job-work/add-job-work.component.scss","webpack:///./src/app/layout/maintenance/add-job-work/add-job-work.component.ts","webpack:///./src/app/layout/maintenance/add-job-workmaster/add-job-workmaster.component.html","webpack:///./src/app/layout/maintenance/add-job-workmaster/add-job-workmaster.component.scss","webpack:///./src/app/layout/maintenance/add-job-workmaster/add-job-workmaster.component.ts","webpack:///./src/app/layout/maintenance/dashboard/dashboard.component.html","webpack:///./src/app/layout/maintenance/dashboard/dashboard.component.scss","webpack:///./src/app/layout/maintenance/dashboard/dashboard.component.ts","webpack:///./src/app/layout/maintenance/edit-engine-typemaster/edit-engine-typemaster.component.html","webpack:///./src/app/layout/maintenance/edit-engine-typemaster/edit-engine-typemaster.component.scss","webpack:///./src/app/layout/maintenance/edit-engine-typemaster/edit-engine-typemaster.component.ts","webpack:///./src/app/layout/maintenance/edit-job-work/edit-job-work.component.html","webpack:///./src/app/layout/maintenance/edit-job-work/edit-job-work.component.scss","webpack:///./src/app/layout/maintenance/edit-job-work/edit-job-work.component.ts","webpack:///./src/app/layout/maintenance/edit-job-workmaster/edit-job-workmaster.component.html","webpack:///./src/app/layout/maintenance/edit-job-workmaster/edit-job-workmaster.component.scss","webpack:///./src/app/layout/maintenance/edit-job-workmaster/edit-job-workmaster.component.ts","webpack:///./src/app/layout/maintenance/enginetypemaster-reslover.ts","webpack:///./src/app/layout/maintenance/job-card/job-card.component.html","webpack:///./src/app/layout/maintenance/job-card/job-card.component.scss","webpack:///./src/app/layout/maintenance/job-card/job-card.component.ts","webpack:///./src/app/layout/maintenance/job-list/job-list.component.html","webpack:///./src/app/layout/maintenance/job-list/job-list.component.scss","webpack:///./src/app/layout/maintenance/job-list/job-list.component.ts","webpack:///./src/app/layout/maintenance/jobwork-reslover.ts","webpack:///./src/app/layout/maintenance/jobworkmaster-reslover.ts","webpack:///./src/app/layout/maintenance/list-engine-typemaster/list-engine-typemaster.component.html","webpack:///./src/app/layout/maintenance/list-engine-typemaster/list-engine-typemaster.component.scss","webpack:///./src/app/layout/maintenance/list-engine-typemaster/list-engine-typemaster.component.ts","webpack:///./src/app/layout/maintenance/list-job-work/list-job-work.component.html","webpack:///./src/app/layout/maintenance/list-job-work/list-job-work.component.scss","webpack:///./src/app/layout/maintenance/list-job-work/list-job-work.component.ts","webpack:///./src/app/layout/maintenance/list-job-workmaster/list-job-workmaster.component.html","webpack:///./src/app/layout/maintenance/list-job-workmaster/list-job-workmaster.component.scss","webpack:///./src/app/layout/maintenance/list-job-workmaster/list-job-workmaster.component.ts","webpack:///./src/app/layout/maintenance/maintenance-master/maintenance-master.component.html","webpack:///./src/app/layout/maintenance/maintenance-master/maintenance-master.component.scss","webpack:///./src/app/layout/maintenance/maintenance-master/maintenance-master.component.ts","webpack:///./src/app/layout/maintenance/maintenance-routing.module.ts","webpack:///./src/app/layout/maintenance/maintenance.module.ts","webpack:///./src/app/layout/maintenance/maintenance.service.ts","webpack:///./src/app/layout/maintenance/truck-history/truck-history.component.html","webpack:///./src/app/layout/maintenance/truck-history/truck-history.component.scss","webpack:///./src/app/layout/maintenance/truck-history/truck-history.component.ts","webpack:///./src/app/layout/maintenance/vendor-master-edit/vendor-master-edit.component.html","webpack:///./src/app/layout/maintenance/vendor-master-edit/vendor-master-edit.component.scss","webpack:///./src/app/layout/maintenance/vendor-master-edit/vendor-master-edit.component.ts","webpack:///./src/app/layout/maintenance/vendor-master/vendor-master.component.html","webpack:///./src/app/layout/maintenance/vendor-master/vendor-master.component.scss","webpack:///./src/app/layout/maintenance/vendor-master/vendor-master.component.ts"],"names":[],"mappings":"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","file":"maintenance-maintenance-module.js","sourcesContent":["module.exports = \"<div class=\\\"container\\\">\\n  <form [formGroup]=\\\"etmForm\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Add Engine Type Master</div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-3\\\">\\n            <label class=\\\"required\\\">Engine Type Name</label>\\n            <input type=\\\"text\\\" formControlName=\\\"enginetype\\\" class=\\\"form-control manual-entry\\\"\\n              placeholder=\\\"Name\\\">\\n          </div>\\n    </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header\\\">\\n                Job Work Details\\n                <button class=\\\"btn btn-primary float-right\\\" (click)=\\\"addEtmitems()\\\" [disabled]=\\\"!etmForm.valid\\\"\\n                  type=\\\"button\\\">\\n                  Add Job Work Name Details\\n                </button>\\n              </div>\\n              <!-- /.box-header -->\\n              <div class=\\\"card-body\\\" *ngIf=\\\"etmForm.controls.multidest.controls.length > 0\\\">\\n                <table class=\\\"table table-bordered\\\" formArrayName=\\\"multidest\\\">\\n                  <tr>\\n                    <th>Job Work Name</th>\\n                    <th>Km Tolerance</th>\\n                    <th>Average</th>\\n                    <th>Action</th>\\n                  </tr>\\n                  \\n                  <tr *ngFor=\\\"let school of etmForm.controls.multidest.controls; let i=index\\\" formGroupName=\\\"{{i}}\\\">\\n                    <td>\\n                      <div class=\\\"input-group\\\">\\n                        <select class=\\\"form-control manual-entry\\\" formControlName=\\\"jobworkname\\\">\\n                          <option value=\\\"\\\">Select Job Work Name</option>\\n                          <option *ngFor=\\\"let t of jobworkname_option\\\" [value]=\\\"t.jobworkname\\\"> {{t.jobworkname}}</option>\\n                        </select>\\n                      </div>\\n                    </td>\\n                    <td>\\n                      <input type=\\\"Number\\\" formControlName=\\\"kmtolerance\\\" class=\\\"form-control  manual-entry\\\">\\n                    </td>\\n\\n                    <td>\\n                      <button class=\\\"btn btn-danger float-right\\\" [disabled]=\\\"etmForm.controls?.multidest.controls.length == 1\\\" (click)=\\\"removeItems(i)\\\" type=\\\"button\\\">\\n                        <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\n                      </button>\\n                    </td>\\n                  </tr>\\n                </table>\\n              </div>\\n              <div class=\\\"card-body\\\" *ngIf=\\\"etmForm.controls?.multidest.controls.length == 0\\\">\\n                <p>Please select vendor</p>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"card-footer\\\">\\n        <button class=\\\"btn btn-success float-right\\\" (click)=\\\"save()\\\" [disabled]=\\\"!etmForm.valid || process == 'saving'\\\" type=\\\"button\\\">\\n          Save <i *ngIf=\\\"process == 'saving'\\\" class=\\\"fa fa-spinner fa-spin\\\"></i>\\n        </button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","module.exports = \".auto-entry {\\n  border: 2px solid #fcbd47 !important; }\\n\\n.manual-entry {\\n  border: 2px solid #51cc51 !important; }\\n\\n::ng-deep .ng-select.manual-entry {\\n  border: 2px solid #51cc51 !important; }\\n\\n::ng-deep .ng-select.auto-entry {\\n  border: 2px solid #fcbd47 !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L21haW50ZW5hbmNlL2FkZC1lbmdpbmUtdHlwZW1hc3Rlci9EOlxcdGVzdGluZ19mb2xkZXJcXHRoaXJ1XFxmcm9udGVuZFxcdGRfZnJvbnRlbmQvc3JjXFxhcHBcXGxheW91dFxcbWFpbnRlbmFuY2VcXGFkZC1lbmdpbmUtdHlwZW1hc3RlclxcYWRkLWVuZ2luZS10eXBlbWFzdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksb0NBQTZDLEVBQUE7O0FBR2pEO0VBQ0ksb0NBQTRDLEVBQUE7O0FBR2hEO0VBQ0ksb0NBQTRDLEVBQUE7O0FBR2hEO0VBQ0ksb0NBQTZDLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvbWFpbnRlbmFuY2UvYWRkLWVuZ2luZS10eXBlbWFzdGVyL2FkZC1lbmdpbmUtdHlwZW1hc3Rlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hdXRvLWVudHJ5e1xyXG4gICAgYm9yZGVyOjJweCBzb2xpZCByZ2IoMjUyLCAxODksIDcxKSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ubWFudWFsLWVudHJ5e1xyXG4gICAgYm9yZGVyOjJweCBzb2xpZCByZ2IoODEsIDIwNCwgODEpICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAubmctc2VsZWN0Lm1hbnVhbC1lbnRyeXtcclxuICAgIGJvcmRlcjoycHggc29saWQgcmdiKDgxLCAyMDQsIDgxKSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG46Om5nLWRlZXAgLm5nLXNlbGVjdC5hdXRvLWVudHJ5e1xyXG4gICAgYm9yZGVyOjJweCBzb2xpZCByZ2IoMjUyLCAxODksIDcxKSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { MetaService } from 'src/app/shared/services/meta.service';\nimport { Router } from '@angular/router';\nimport { MaintenanceService } from '../maintenance.service';\n\n@Component({\n  selector: 'app-add-engine-typemaster',\n  templateUrl: './add-engine-typemaster.component.html',\n  styleUrls: ['./add-engine-typemaster.component.scss']\n})\nexport class AddEngineTypemasterComponent implements OnInit {\n  public etmForm: any;\n  public process: string;\n  public multidest; any;\n  public jobworkname_option: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private metaService: MetaService,\n    private ms: MaintenanceService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.buildForm();\n    this.etmForm.controls.multidest.valueChanges.subscribe(changes => {\n      this.updateValues();\n    });\n    this.getOptions();\n  }\n  public buildForm(): void {\n    this.etmForm = this.fb.group(\n      {\n        'enginetype': ['', [Validators.required]],\n        'multidest': this.fb.array([\n        ]),\n      }\n    );\n    this.addEtmitems();\n  }\n  private initItems() {\n    return this.fb.group({\n      'jobworkname': ['', [Validators.required]],\n      'kmtolerance': [0, [Validators.required]]\n    });\n  }\n  addEtmitems() {\n    const control = <FormArray>this.etmForm.controls['multidest'];\n    control.push(this.initItems());\n  }\n  removeItems(i: number) {\n    const control = <FormArray>this.etmForm.controls['multidest'];\n    control.removeAt(i);\n  }\n  public removed(value: any): void {\n    const product_id = value['id'];\n    const multidest = this.etmForm.controls['multidest'].value;\n    var index = multidest.map(function (items) { return items.product_id; }).indexOf(product_id);\n    this.removeItems(index);\n  }\n  public save() {\n\n    console.log('Save', this.etmForm.value);\n\n    this.process = 'saving';\n    this.ms.crateEtm(this.etmForm.value).subscribe(mrInfo => {\n      this.process = 'done';\n      this.router.navigate(['/maintenance/engine-typemaster']);\n    }, error => { this.process = 'done'; console.log(error);\n  });\n  }\n  private getOptions() {\n    this.metaService.getJobWorkNameList().subscribe(trackInfo => {\n      this.jobworkname_option = trackInfo['result'];\n      // console.log('Job Work Description >>>>>', this.jobworkname_option);\n    });\n  }\n  public updateValues() {\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <form [formGroup]=\\\"jwForm\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Add Job Work</div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-3\\\">\\n            <label class=\\\"required\\\">Site</label>\\n            <ng-select [items]=\\\"siteOptions\\\" placeholder=\\\"Type and search site\\\" bindLabel=\\\"branch_name\\\" bindValue=\\\"branch_name\\\"\\n              formControlName=\\\"site\\\">\\n            </ng-select>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <label class=\\\"required\\\">Job type</label>\\n            <select class=\\\"form-control\\\" formControlName=\\\"job_type\\\" (change)=\\\"generatejobNumber()\\\">\\n              <option value=\\\"\\\">Select Job type</option>\\n              <option value=\\\"Job Work\\\">Job Work</option>\\n              <option value=\\\"Job Card\\\">Job Card</option>\\n            </select>\\n          </div>\\n          <div class=\\\"col-md-2\\\">\\n            <label>Job No.</label>\\n            <input disabled type=\\\"text\\\" formControlName=\\\"job_number\\\" class=\\\"form-control\\\" placeholder=\\\"Job No.\\\">\\n          </div>\\n\\n          <div class=\\\"col-md-2\\\">\\n            <label class=\\\"required\\\">Job date</label>\\n            <div class=\\\"input-group datepicker-input\\\">\\n              <input\\n                class=\\\"form-control\\\"\\n                placeholder=\\\"dd-mm-yyyy\\\"\\n                name=\\\"dp2\\\"\\n                formControlName=\\\"job_date\\\"\\n                ngbDatepicker\\n                #d2=\\\"ngbDatepicker\\\" \\n              />\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d2.toggle()\\\" type=\\\"button\\\">\\n                  <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-2\\\">\\n            <label class=\\\"required\\\">Truck No.</label>\\n            <ng-select [items]=\\\"trucks_option\\\" placeholder=\\\"Type and search items\\\" bindLabel=\\\"truckno\\\" bindValue=\\\"truckno\\\"\\n              formControlName=\\\"truck_no\\\">\\n            </ng-select>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <label class=\\\"required\\\">Km Reading</label>\\n            <input type=\\\"number\\\" formControlName=\\\"km_reading\\\" class=\\\"form-control\\\" placeholder=\\\"Km Reading\\\">\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <label class=\\\"required\\\">Vendor</label>\\n            <ng-select [items]=\\\"vendor_option\\\" placeholder=\\\"Type and search vendor\\\" bindLabel=\\\"name\\\" bindValue=\\\"name\\\"\\n              formControlName=\\\"vendor\\\">\\n            </ng-select>\\n          </div>\\n\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Engine Type</label>\\n              <input type=\\\"text\\\" *ngIf=\\\"!etField\\\" disabled formControlName=\\\"enginetype\\\" class=\\\"form-control\\\" placeholder=\\\"Engine Type\\\">\\n              <input type=\\\"text\\\" *ngIf=\\\"etField\\\" formControlName=\\\"enginetype\\\" class=\\\"form-control\\\" placeholder=\\\"Engine Type\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-2\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Mannual Entry </label>\\n              <div class=\\\"checkbox\\\">\\n                  <label>\\n                      <input type=\\\"checkbox\\\" formControlName=\\\"mannualenginetype\\\" >\\n                      Enter Engine Type .?\\n                    </label>\\n              </div>\\n                </div>\\n          </div>\\n\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header\\\">\\n                Job work items\\n                <button class=\\\"btn btn-primary float-right\\\" (click)=\\\"addJwitems()\\\" [disabled]=\\\"!jwForm.valid\\\"\\n                  type=\\\"button\\\">\\n                  Add Job\\n                </button>\\n              </div>\\n              <!-- /.box-header -->\\n              <div class=\\\"card-body\\\" *ngIf=\\\"jwForm.controls.job_items.controls.length > 0\\\">\\n                <table class=\\\"table table-bordered\\\" formArrayName=\\\"job_items\\\">\\n                  <tr>\\n                    <th>Work To Be Done</th>\\n                    <th>Last Done On</th>\\n                    <th>Remarks</th>\\n                    <th>Next Due Km</th>\\n                    <th>Action</th>\\n                  </tr>\\n                  <tr *ngFor=\\\"let school of jwForm.controls.job_items.controls; let i=index\\\" formGroupName=\\\"{{i}}\\\">\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                          <select class=\\\"form-control\\\" formControlName=\\\"worktobedone\\\">\\n                            <option value=\\\"\\\">Select Job Description</option>\\n                            <option *ngFor=\\\"let j of jobworkname_option\\\" [value]=\\\"j.jobworkname\\\"> {{j.jobworkname}}</option>\\n                          </select>\\n                        </div>\\n  \\n                      </td>\\n                    <td>\\n                        <div class=\\\"input-group\\\">\\n                          <select class=\\\"form-control\\\">\\n                            <input type=\\\"text\\\" #ld=\\\"bsDatepicker\\\" [bsConfig]=\\\"{ containerClass: 'theme-blue', 'dateInputFormat': 'DD-MM-YYYY', 'showWeekNumbers': false, 'minDate': currentDate }\\\" bsDatepicker formControlName=\\\"lastdoneon\\\"\\n                              class=\\\"form-control\\\">\\n                            <div class=\\\"input-group-prepend\\\" (click)=\\\"ld.toggle()\\\">\\n                              <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></span>\\n                            </div>\\n                          </select>\\n                          </div>\\n                      </td>                    \\n                    <td>\\n                      <input type=\\\"text\\\" formControlName=\\\"remarks\\\"\\n                        class=\\\"form-control remarks\\\">\\n                    </td>\\n                    <td>\\n                      <input type=\\\"number\\\" min=\\\"0\\\" formControlName=\\\"nextduekm\\\"\\n                        class=\\\"form-control nextduekm\\\">\\n                    </td>\\n                    <td>\\n                      <button class=\\\"btn btn-danger float-right\\\" [disabled]=\\\"jwForm.controls?.job_items.controls.length == 1\\\" (click)=\\\"removeItems(i)\\\" type=\\\"button\\\">\\n                        <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\n                      </button>\\n                    </td>\\n                  </tr>\\n                </table>\\n              </div>\\n              <div class=\\\"card-body\\\" *ngIf=\\\"jwForm.controls?.job_items.controls.length == 0\\\">\\n                <p>Please select </p>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        </div>\\n      </div>\\n      <div class=\\\"mt-3\\\">\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-3\\\">\\n            <label>Bill Amount</label>\\n            <input type=\\\"number\\\" formControlName=\\\"bill_amount\\\" class=\\\"form-control\\\" placeholder=\\\"Bill Amount\\\">\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <label>Approved Amount</label>\\n            <input type=\\\"number\\\" formControlName=\\\"app_amount\\\" class=\\\"form-control\\\" placeholder=\\\"Approved Amount\\\">\\n          </div>\\n\\n          <div class=\\\"col-lg-6 col-md-6\\\">\\n            <label class=\\\"\\\">Job Remarks</label>\\n            <input type=\\\"text\\\" formControlName=\\\"job_remarks\\\" class=\\\"form-control\\\" placeholder=\\\"Please enter Job Remarks\\\">\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"card-footer\\\">\\n        <button class=\\\"btn btn-success float-right\\\" (click)=\\\"save()\\\" [disabled]=\\\"!jwForm.valid || process == 'saving'\\\" type=\\\"button\\\">\\n          Save <i *ngIf=\\\"process == 'saving'\\\" class=\\\"fa fa-spinner fa-spin\\\"></i>\\n        </button>\\n      </div>\\n  </form>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9tYWludGVuYW5jZS9hZGQtam9iLXdvcmsvYWRkLWpvYi13b3JrLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { MaintenanceService } from '../../maintenance/maintenance.service';\nimport { MetaService } from 'src/app/shared/services/meta.service';\ndeclare var moment: any;\n\n@Component({\n  selector: 'app-add-job-work',\n  templateUrl: './add-job-work.component.html',\n  styleUrls: ['./add-job-work.component.scss']\n})\nexport class AddJobWorkComponent implements OnInit {\n  public jwForm: any;\n  public process: string;\n  public job_items: any;\n  public siteOptions: any;\n  public vendor_option: any;\n  public trucks_option: any;\n  public bsConfig: Partial<BsDatepickerConfig>;\n  public jobworkname_option: any;\n  public etField = false;\n  minDate;\n  site_name: any;\n  usertype: any;\n  loading = false;\n  public currentDate = new Date();\n  constructor(\n    private fb: FormBuilder,\n    private ms: MaintenanceService,\n    private metaService: MetaService,\n    private router: Router\n  ) {\n    this.usertype = this.metaService.getSiteFromStorage().role;\n    this.site_name = this.metaService.getSiteFromStorage().site;\n    const current = new Date();\n    this.minDate = {\n      year: current.getFullYear(),\n      month: current.getMonth() + 1,\n      day: current.getDate()\n    };\n\n  }\n\n  ngOnInit() {\n    this.bsConfig = Object.assign({},\n      { containerClass: 'theme-blue', 'rangeInputFormat': 'MMMM Do YYYY', minDate: new Date(), 'showWeekNumbers': false });\n    this.buildForm();\n\n    this.jwForm.get('truck_no').valueChanges.subscribe(val => {\n      this.metaService.getEnginetype(val).subscribe(res => {\n        this.jwForm.controls['enginetype'].setValue(null);\n        this.jwForm.patchValue({'enginetype' : res['enginetype']});\n       });\n    });\n\n    this.jwForm.get('mannualenginetype').valueChanges.subscribe(val => {\n      this.etField = val;\n    });\n\n    this.jwForm.controls.job_items.valueChanges.subscribe(changes => {\n      this.updateValues();\n    });\n\n    this.jwForm.get('km_reading').valueChanges.subscribe(val => {\n      this.updateValues();\n    });\n\n    this.getOptions();\n    this.getSites();\n  }\n  public buildForm(): void {\n    this.jwForm = this.fb.group(\n      {\n        'site': ['', [Validators.required]],\n        'job_type': ['', [Validators.required]],\n        'job_number': ['', [Validators.required]],\n        'job_date': [{year: new Date().getFullYear(), month: new Date().getMonth() + 1, day: new Date().getDate()}],\n        'truck_no': ['', [Validators.required]],\n        'km_reading': [0, [Validators.required]],\n        'enginetype': ['', [Validators.required]],\n        'mannualenginetype': [''],\n        'vendor': ['', [Validators.required]],\n        'job_items': this.fb.array([\n        ]),\n        'bill_amount': ['0'],\n        'app_amount': ['0'],\n        'job_remarks': [''],\n      }\n    );\n    this.addJwitems();\n  }\n  private initItems() {\n    return this.fb.group({\n      'worktobedone': ['', [Validators.required]],\n      'lastdoneon': [''],\n      'remarks': [''],\n      'nextduekm': [0],\n    });\n  }\n  \n  addJwitems() {\n    const control = <FormArray>this.jwForm.controls['job_items'];\n    control.push(this.initItems());\n  }\n  removeItems(i: number) {\n    const control = <FormArray>this.jwForm.controls['job_items'];\n    control.removeAt(i);\n  }\n  public removed(value: any): void {\n    const product_id = value['id'];\n    const job_items = this.jwForm.controls['job_items'].value;\n    var index = job_items.map(function (items) { return items.product_id; }).indexOf(product_id);\n    this.removeItems(index);\n  }\n  public save() {\n\n    let job_date;\n    if (this.jwForm.controls['job_date'].value) {\n      const dt = this.jwForm.controls['job_date'].value.year + '-' +\n        this.jwForm.controls['job_date'].value.month + '-' +\n        this.jwForm.controls['job_date'].value.day;\n      job_date = moment(dt, 'YYYY-MM-DD').format();\n      console.log(job_date);\n    } else {\n      job_date = moment().format();\n    }\n\n    this.process = 'saving';\n    let savedata = this.jwForm.value;\n    savedata.job_date = job_date;\n\n    console.log ('Job Work >> Save', this.jwForm.value);\n\n    this.ms.crateJobwork(this.jwForm.value).subscribe(miInfo => {\n      this.process = 'done';\n      let data = {\n        truckno: savedata.truck_no,\n        enginetype: savedata.enginetype\n      };\n      this.metaService.updateTruckEnginetype(data).subscribe(res => {\n        this.router.navigate(['/maintenance/job-work']);\n\n    }, error => { this.process = 'done'; console.log(error);\n    });\n  });\n\n\n  }\n\n  getSites() {\n    this.loading = true;\n    this.metaService.getSites().subscribe((res: any) => {\n        this.loading = false;\n        this.siteOptions = res;\n        if (this.usertype === 'ADMIN') {\n          this.jwForm.controls['site'].setValue(this.siteOptions[0].branch_name);\n        } else {\n          this.jwForm.controls['site'].setValue(this.site_name);\n        }\n      },\n      err => {\n        this.loading = false;\n      }\n    );\n  }\n  private getOptions() {\n    this.ms.getVendorMasterList().subscribe(siteInfo => {\n      this.vendor_option = siteInfo['result'];\n      // console.log('>>>>Vendor List', siteInfo['result']);\n    });\n\n    this.metaService.getCompanyTruckList().subscribe(trackInfo => {\n      this.trucks_option = trackInfo['result'];\n      // console.log('Trucks List >>>>>', this.trucks_option);\n    });\n\n    this.metaService.getJobWorkNameList().subscribe(trackInfo => {\n      this.jobworkname_option = trackInfo['result'];\n      // console.log('Job Work Description >>>>>', this.jobworkname_option);\n    });\n\n  }\n\n  public updateValues() {\n\n    const km_reading = this.jwForm.controls['km_reading'].value;\n    \n    const control = <FormArray>this.jwForm.controls['job_items'];\n    \n    for (var intial_val = 0; intial_val < control.length; intial_val++) {\n      let values = control.controls[intial_val].value;\n\n\n      const jobworkname = values['worktobedone'];\n\n      let data = {\n        enginetype: this.jwForm.controls['enginetype'].value,\n        worktobedone: jobworkname\n      };\n      var km_tolerance = 0;\n      var net_nextduekm =  0;\n\n      if(data.enginetype && data.worktobedone){\n          this.metaService.getworktobedonetolerance(data).subscribe(res => {\n           km_tolerance = Number(res['kmtolerance']);\n\n           if (km_tolerance > 0) {\n            console.log('km_tolerance OKAY' , km_tolerance);\n            console.log('km_reading OKAY', km_reading);\n            net_nextduekm = (Number(res['kmtolerance']) + km_reading);\n\n            console.log(`net_nextduekm OKAY ${data.worktobedone}`, net_nextduekm);\n\n            // this.jwForm.controls.job_items.patchValue([{'nextduekm': (Number(res['kmtolerance'])+km_reading )}]);\n\n          }\n\n        });\n\n        // net_nextduekm = (km_tolerance + km_reading );\n\n        console.log('km_tolerance 2 ', km_tolerance);\n        console.log('net_nextduekm 2', net_nextduekm);\n\n        // control.controls[intial_val].patchValue({\n        //   nextduekm: net_nextduekm\n        // }, { emitEvent: false });\n\n      }\n\n      control.controls[intial_val].patchValue({\n        nextduekm: net_nextduekm\n      }, { emitEvent: false });\n\n\n    }\n  }\n\n  public generatejobNumber() {\n    const job_type = this.jwForm.controls.job_type.value;\n    const site = this.jwForm.controls.site.value;\n    if (site && job_type) {\n      const matchCond = { site: site, job_type: job_type };\n      console.log('mathCond >>' , matchCond );\n      this.ms.getJobNumberDetails(matchCond).subscribe(jwInfo => {\n        this.jwForm.controls.job_number.setValue(jwInfo['count'] + 1);\n      }, error => { console.log(error);\n      });\n    }\n}\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <form [formGroup]=\\\"itemsForm\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Add Job Work Master</div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-8\\\">\\n            <label class=\\\"required\\\">Job Work Name</label>\\n            <input type=\\\"text\\\" formControlName=\\\"jobworkname\\\" class=\\\"form-control manual-entry\\\"\\n              placeholder=\\\"Job Work Name\\\">\\n          </div>\\n        </div>\\n      <div class=\\\"card-footer\\\">\\n        <button class=\\\"btn btn-success float-right\\\" (click)=\\\"saveitems()\\\" [disabled]=\\\"!itemsForm.valid || process == 'saving'\\\" type=\\\"button\\\">\\n          Save <i *ngIf=\\\"process == 'saving'\\\" class=\\\"fa fa-spinner fa-spin\\\"></i>\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n  </form>\\n</div>\"","module.exports = \".auto-entry {\\n  border: 2px solid #fcbd47 !important; }\\n\\n.manual-entry {\\n  border: 2px solid #51cc51 !important; }\\n\\n::ng-deep .ng-select.manual-entry {\\n  border: 2px solid #51cc51 !important; }\\n\\n::ng-deep .ng-select.auto-entry {\\n  border: 2px solid #fcbd47 !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L21haW50ZW5hbmNlL2FkZC1qb2Itd29ya21hc3Rlci9EOlxcdGVzdGluZ19mb2xkZXJcXHRoaXJ1XFxmcm9udGVuZFxcdGRfZnJvbnRlbmQvc3JjXFxhcHBcXGxheW91dFxcbWFpbnRlbmFuY2VcXGFkZC1qb2Itd29ya21hc3RlclxcYWRkLWpvYi13b3JrbWFzdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksb0NBQTZDLEVBQUE7O0FBR2pEO0VBQ0ksb0NBQTRDLEVBQUE7O0FBR2hEO0VBQ0ksb0NBQTRDLEVBQUE7O0FBR2hEO0VBQ0ksb0NBQTZDLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvbWFpbnRlbmFuY2UvYWRkLWpvYi13b3JrbWFzdGVyL2FkZC1qb2Itd29ya21hc3Rlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hdXRvLWVudHJ5e1xyXG4gICAgYm9yZGVyOjJweCBzb2xpZCByZ2IoMjUyLCAxODksIDcxKSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ubWFudWFsLWVudHJ5e1xyXG4gICAgYm9yZGVyOjJweCBzb2xpZCByZ2IoODEsIDIwNCwgODEpICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAubmctc2VsZWN0Lm1hbnVhbC1lbnRyeXtcclxuICAgIGJvcmRlcjoycHggc29saWQgcmdiKDgxLCAyMDQsIDgxKSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG46Om5nLWRlZXAgLm5nLXNlbGVjdC5hdXRvLWVudHJ5e1xyXG4gICAgYm9yZGVyOjJweCBzb2xpZCByZ2IoMjUyLCAxODksIDcxKSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { MaintenanceService } from '../maintenance.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-job-workmaster',\n  templateUrl: './add-job-workmaster.component.html',\n  styleUrls: ['./add-job-workmaster.component.scss']\n})\nexport class AddJobWorkmasterComponent implements OnInit {\n  public itemsForm: FormGroup;\n  public process: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private ms: MaintenanceService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.buildForm();\n    this.getOptions();\n  }\n\n\n  public buildForm(): void {\n    this.itemsForm = this.fb.group(\n      {\n        'jobworkname': ['']\n      }\n    );\n  }\n\n\n  public saveitems() {\n    this.process = 'saving';\n    console.log(this.itemsForm.value);\n    this.ms.crateJobworkmaster(this.itemsForm.value).subscribe(ordersInfo => {\n      this.process = 'done';\n      this.router.navigate(['/maintenance/job-workmaster']);\n    }, error => { this.process = 'done'; console.log(error);\n   });\n  }\n\n  private getOptions() {\n}\n\n}\n","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    <strong>Job Work Reminders Dashboard</strong>\\n  </div>\\n  <div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\" *ngIf=\\\"activeTab === 'docOverview'\\\">\\n            <p>\\n              <button [disabled]=\\\"loading\\\" class=\\\"btn btn-success\\\" (click)=\\\"showDetails()\\\">\\n                <i class=\\\"fa fa-info-circle\\\" aria-hidden=\\\"true\\\"></i>\\n                Details\\n              </button>\\n            </p>\\n            <table class=\\\"table tableFixHead mytable\\\">\\n              <thead>\\n                <tr>\\n                  <th>Job Work</th>\\n                  <th>Expired</th>\\n                  <th>500-kms</th>\\n                  <th>1000-kms</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngIf=\\\"loading\\\">\\n                  <td colspan=\\\"4\\\">\\n                    <div class=\\\"showbox\\\">\\n                      <div class=\\\"loader\\\">\\n                        <svg class=\\\"circular\\\" viewBox=\\\"25 25 50 50\\\">\\n                          <circle class=\\\"path\\\" cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"2\\\" stroke-miterlimit=\\\"10\\\" />\\n                        </svg>\\n                      </div>\\n                    </div>\\n                  </td>\\n                </tr>\\n                <tr *ngFor=\\\"let d of data\\\">\\n                  <td>{{ d.Name }}</td>\\n                  <td>{{ d.Expired }}</td>\\n                  <td>{{ d['500_kms'] }}</td>\\n                  <td>{{ d['1000_kms'] }}</td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n          <div class=\\\"card-body\\\" *ngIf=\\\"activeTab === 'details'\\\">\\n            <p>\\n              <button class=\\\"btn btn-danger\\\" (click)=\\\"showOverview()\\\">\\n                <i class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></i>\\n                Back\\n              </button>\\n            </p>\\n\\n            <!-- Second Screen 0-20 Days -->\\n            <form [formGroup]=\\\"editForm\\\" novalidate> \\n              <table class=\\\"table tableFixHead mytable\\\">\\n                <thead>\\n                    <tr>\\n                      <th> Job Work Trucks ( 0 to 1000 Kms ) </th>\\n                    </tr>\\n                </thead>\\n                <thead>\\n                  <tr>\\n                    <th>Truck No</th>\\n                    <th>Job Work</th>\\n                    <th>Due Km</th>\\n                    <th>Current Km</th>\\n                    <th>Km Left</th>\\n                    <th>Status</th>\\n                    <th>Remarks</th>\\n                    <th>Actions</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngIf=\\\"loading\\\">\\n                    <td colspan=\\\"4\\\">\\n                      <div class=\\\"showbox\\\">\\n                        <div class=\\\"loader\\\">\\n                          <svg class=\\\"circular\\\" viewBox=\\\"25 25 50 50\\\">\\n                            <circle class=\\\"path\\\" cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"2\\\" stroke-miterlimit=\\\"10\\\" />\\n                          </svg>\\n                        </div>\\n                      </div>\\n                    </td>\\n                  </tr>\\n                  <tr *ngFor=\\\"let detail of details; let i = index\\\">\\n                    <td>{{ detail.truck_no }}</td>\\n                    <td>{{ detail.worktobedone }}</td>\\n                    <td>{{ detail.duekm }}</td>\\n                    <td>{{ detail.currkm }}</td>\\n                    <td>{{ detail.kmleft }}</td>\\n                    <td *ngIf=\\\"!detail.editing\\\">{{ detail.status ? detail.status : '--' }}</td>\\n                    <td *ngIf=\\\"detail.editing\\\">\\n                      <select class=\\\"form-control\\\" formControlName=\\\"status\\\">\\n                        <option value=\\\"\\\">Select</option>\\n                        <option value=\\\"At RTO\\\">At RTO</option>\\n                        <option value=\\\"Transist\\\">Transist</option>\\n                        <option value=\\\"At Workshop\\\">At Workshop</option>\\n                        <option value=\\\"Expired\\\">Expired</option>\\n                        <option value=\\\"Done\\\">Done</option>\\n                        <option value=\\\"Seen\\\">Seen</option>\\n                      </select>\\n                    </td>\\n\\n                    <td *ngIf=\\\"!detail.editing\\\">{{ detail.remarks ? detail.remarks : '--' }}</td>\\n\\n                    <td *ngIf=\\\"detail.editing\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"remarks\\\" />\\n                    </td>\\n\\n                    <td>\\n                      <button [disabled]=\\\"loading\\\" *ngIf=\\\"!detail.editing\\\" class=\\\"btn btn-primary\\\" (click)=\\\"edit(detail, i)\\\">\\n                        <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i>\\n                        Edit</button\\n                      >&nbsp;\\n                      <button [disabled]=\\\"loading\\\" *ngIf=\\\"detail.editing\\\" class=\\\"btn btn-warning\\\" (click)=\\\"update(detail)\\\">\\n                        <i class=\\\"fa fa-floppy-o\\\" aria-hidden=\\\"true\\\"></i>\\n                        Update</button\\n                      >&nbsp;\\n                      <button [disabled]=\\\"loading\\\" *ngIf=\\\"detail.editing\\\" class=\\\"btn btn-danger\\\" (click)=\\\"cancel(detail)\\\">\\n                        <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n                        Cancel\\n                      </button>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </form>\\n\\n            <!-- Second Screen Expired -->\\n            <form [formGroup]=\\\"editForm\\\" novalidate> \\n              <table class=\\\"table tableFixHead mytable\\\">\\n                <thead>\\n                    <tr>\\n                      <th> Expired Job Works</th>\\n                    </tr>\\n                </thead>\\n                <thead>\\n                  <tr>\\n                    <th>Truck No</th>\\n                    <th>Job Work</th>\\n                    <th>Due Km</th>\\n                    <th>Current Km</th>\\n                    <th>Excess Km</th>\\n                    <th>Status</th>\\n                    <th>Remarks</th>\\n                    <th>Actions</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngIf=\\\"loading\\\">\\n                    <td colspan=\\\"4\\\">\\n                      <div class=\\\"showbox\\\">\\n                        <div class=\\\"loader\\\">\\n                          <svg class=\\\"circular\\\" viewBox=\\\"25 25 50 50\\\">\\n                            <circle class=\\\"path\\\" cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"2\\\" stroke-miterlimit=\\\"10\\\" />\\n                          </svg>\\n                        </div>\\n                      </div>\\n                    </td>\\n                  </tr>\\n                  <tr *ngFor=\\\"let edetail of expiredDetails; let i = index\\\">\\n                    <td>{{ edetail.truck_no }}</td>\\n                    <td>{{ edetail.worktobedone }}</td>\\n                    <td>{{ edetail.duekm }}</td>\\n                    <td>{{ edetail.currkm }}</td>\\n                    <td>{{ edetail.excesskm }}</td>\\n                    <td *ngIf=\\\"!edetail.editing\\\">{{ edetail.status ? edetail.status : '--' }}</td>\\n    \\n                    <td *ngIf=\\\"edetail.editing\\\">\\n                      <select class=\\\"form-control\\\" formControlName=\\\"status\\\">\\n                        <option value=\\\"\\\">Select</option>\\n                        <option value=\\\"At Workshop\\\">At Workshop</option>\\n                        <option value=\\\"Transist\\\">Transist</option>\\n                        <option value=\\\"Expired\\\">Expired</option>\\n                        <option value=\\\"Done\\\">Done</option>\\n                        <option value=\\\"Seen\\\">Seen</option>\\n                      </select>\\n                    </td>\\n    \\n                    <td *ngIf=\\\"!edetail.editing\\\">{{ edetail.remarks ? edetail.remarks : '--' }}</td>\\n    \\n                    <td *ngIf=\\\"edetail.editing\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"remarks\\\" />\\n                    </td>\\n    \\n                    <td>\\n                      <button [disabled]=\\\"loading\\\" *ngIf=\\\"!edetail.editing\\\" class=\\\"btn btn-primary\\\" (click)=\\\"edit(edetail, i)\\\">\\n                        <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i>\\n                        Edit</button\\n                      >&nbsp;\\n                      <button [disabled]=\\\"loading\\\" *ngIf=\\\"edetail.editing\\\" class=\\\"btn btn-warning\\\" (click)=\\\"update(edetail)\\\">\\n                        <i class=\\\"fa fa-floppy-o\\\" aria-hidden=\\\"true\\\"></i>\\n                        Update</button\\n                      >&nbsp;\\n                      <button [disabled]=\\\"loading\\\" *ngIf=\\\"edetail.editing\\\" class=\\\"btn btn-danger\\\" (click)=\\\"cancel(edetail)\\\">\\n                        <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n                        Cancel\\n                      </button>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </form>\\n            \\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9tYWludGVuYW5jZS9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MaintenanceService } from '../../maintenance/maintenance.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  data = [];\n  details = [];\n  loading = false;\n  activeTab = 'docOverview';\n  editForm: FormGroup;\n  expiredDetails = [];\n  constructor(\n    public reminders: MaintenanceService,\n    public toastr: ToastrService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n\n    this.editForm = this.fb.group({\n      status: [''],\n      remarks: ['']\n    });\n\n    this.getOverAllData();\n    this.getDetails();\n    this.getExpiredAllTrucksDetails();\n  }\n\n  getOverAllData() {\n    this.loading = true;\n    this.reminders.getOverAllData().subscribe((resp: any) => {\n      this.data = resp;\n      this.loading = false;\n    }, err => {\n      this.loading = false;\n      this.toastr.error('Something went wrong when getting the data.');\n    });\n  }\n\n  getDetails() {\n    this.loading = true;\n    this.reminders.getDetails().subscribe((resp: any) => {\n\n      resp.forEach(element => {\n        element.editing = false;\n      });\n\n      this.details = resp;\n      this.loading = false;\n    }, err => {\n      this.loading = false;\n      this.toastr.error('Something went wrong when getting the data.');\n    });\n  }\n\n\n  getExpiredAllTrucksDetails() {\n    this.loading = true;\n    this.reminders.getExpiredAllTrucksDetails().subscribe((resp: any) => {\n\n      resp.forEach(element => {\n        element.editing = false;\n      });\n\n      this.expiredDetails = resp;\n      this.loading = false;\n    }, err => {\n      this.loading = false;\n      this.toastr.error('Something went wrong when getting the data.');\n    });\n  }\n\n  showDetails() {\n    this.activeTab = 'details';\n  }\n\n  showOverview() {\n    this.activeTab = 'docOverview';\n  }\n\n  edit(data, index) {\n    data.editing = true;\n    this.editForm.controls['status'].setValue(data.status);\n    this.editForm.controls['remarks'].setValue(data.remarks);\n  }\n\n  cancel(data) {\n    data.editing = false;\n  }\n\n  update(data) {\n\n    const obj = {\n      'id': data.document_id,\n      'status' : this.editForm.value.status,\n      'remarks' : this.editForm.value.remarks\n    };\n\n    console.log('>>>>obj', obj);\n\n    this.loading = true;\n    this.reminders.updateAttachements(obj).subscribe((resp: any) => {\n      this.loading = false;\n\n      data.remarks = this.editForm.value.remarks;\n      data.status = this.editForm.value.status;\n      data.editing = false;\n      this.toastr.success('Dashboard documents updated successfully.');\n    }, err => {\n      this.loading = false;\n      this.toastr.error('Something went wrong when getting the data.');\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <form [formGroup]=\\\"etmForm\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Edit Engine Type Master</div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-3\\\">\\n            <label class=\\\"required\\\">Engine Type Name</label>\\n            <input type=\\\"text\\\" formControlName=\\\"enginetype\\\" class=\\\"form-control  manual-entry\\\"\\n              placeholder=\\\"Name\\\">\\n          </div>\\n    </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header\\\">\\n                Job Work Details\\n                <button class=\\\"btn btn-primary float-right\\\" (click)=\\\"addEtmitems()\\\" [disabled]=\\\"!etmForm.valid\\\"\\n                  type=\\\"button\\\">\\n                  Add Job Work Name Details\\n                </button>\\n              </div>\\n              <!-- /.box-header -->\\n              <div class=\\\"card-body\\\" *ngIf=\\\"etmForm.controls.multidest.controls.length > 0\\\">\\n                <table class=\\\"table table-bordered\\\" formArrayName=\\\"multidest\\\">\\n                  <tr>\\n                    <th>Job Work Name</th>\\n                    <th>Km Tolerance</th>\\n                    <th>Action</th>\\n                  </tr>\\n                  \\n                  <tr *ngFor=\\\"let school of etmForm.controls.multidest.controls; let i=index\\\" formGroupName=\\\"{{i}}\\\">\\n                    <td>\\n                      <div class=\\\"input-group\\\">\\n                        <select class=\\\"form-control  manual-entry\\\" formControlName=\\\"jobworkname\\\">\\n                          <option value=\\\"\\\">Select Job Work Name</option>\\n                          <option *ngFor=\\\"let t of jobworkname_option\\\" [value]=\\\"t.jobworkname\\\"> {{t.jobworkname}}</option>\\n                        </select>\\n                      </div>\\n                    </td>\\n                    <td>\\n                      <input type=\\\"Number\\\" formControlName=\\\"kmtolerance\\\" class=\\\"form-control  manual-entry\\\">\\n                    </td>\\n\\n                    <td>\\n                      <button class=\\\"btn btn-danger float-right\\\" [disabled]=\\\"etmForm.controls?.multidest.controls.length == 1\\\" (click)=\\\"removeItems(i)\\\" type=\\\"button\\\">\\n                        <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\n                      </button>\\n                    </td>\\n                  </tr>\\n                </table>\\n              </div>\\n              <div class=\\\"card-body\\\" *ngIf=\\\"etmForm.controls?.multidest.controls.length == 0\\\">\\n                <p>Please select vendor</p>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      \\n      <div class=\\\"card-footer\\\">\\n        <button class=\\\"btn btn-success float-right\\\" (click)=\\\"save()\\\" [disabled]=\\\"!etmForm.valid || process == 'saving'\\\" type=\\\"button\\\">\\n          Save <i *ngIf=\\\"process == 'saving'\\\" class=\\\"fa fa-spinner fa-spin\\\"></i>\\n        </button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","module.exports = \".auto-entry {\\n  border: 2px solid #fcbd47 !important; }\\n\\n.manual-entry {\\n  border: 2px solid #51cc51 !important; }\\n\\n::ng-deep .ng-select.manual-entry {\\n  border: 2px solid #51cc51 !important; }\\n\\n::ng-deep .ng-select.auto-entry {\\n  border: 2px solid #fcbd47 !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L21haW50ZW5hbmNlL2VkaXQtZW5naW5lLXR5cGVtYXN0ZXIvRDpcXHRlc3RpbmdfZm9sZGVyXFx0aGlydVxcZnJvbnRlbmRcXHRkX2Zyb250ZW5kL3NyY1xcYXBwXFxsYXlvdXRcXG1haW50ZW5hbmNlXFxlZGl0LWVuZ2luZS10eXBlbWFzdGVyXFxlZGl0LWVuZ2luZS10eXBlbWFzdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksb0NBQTZDLEVBQUE7O0FBR2pEO0VBQ0ksb0NBQTRDLEVBQUE7O0FBR2hEO0VBQ0ksb0NBQTRDLEVBQUE7O0FBR2hEO0VBQ0ksb0NBQTZDLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvbWFpbnRlbmFuY2UvZWRpdC1lbmdpbmUtdHlwZW1hc3Rlci9lZGl0LWVuZ2luZS10eXBlbWFzdGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmF1dG8tZW50cnl7XHJcbiAgICBib3JkZXI6MnB4IHNvbGlkIHJnYigyNTIsIDE4OSwgNzEpICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tYW51YWwtZW50cnl7XHJcbiAgICBib3JkZXI6MnB4IHNvbGlkIHJnYig4MSwgMjA0LCA4MSkgIWltcG9ydGFudDtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5uZy1zZWxlY3QubWFudWFsLWVudHJ5e1xyXG4gICAgYm9yZGVyOjJweCBzb2xpZCByZ2IoODEsIDIwNCwgODEpICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAubmctc2VsZWN0LmF1dG8tZW50cnl7XHJcbiAgICBib3JkZXI6MnB4IHNvbGlkIHJnYigyNTIsIDE4OSwgNzEpICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { MetaService } from 'src/app/shared/services/meta.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MaintenanceService } from '../maintenance.service';\n\n@Component({\n  selector: 'app-edit-engine-typemaster',\n  templateUrl: './edit-engine-typemaster.component.html',\n  styleUrls: ['./edit-engine-typemaster.component.scss']\n})\nexport class EditEngineTypemasterComponent implements OnInit {\n  public etmForm: any;\n  public process: string;\n  public multidest; any;\n  public jobworkname_option: any;\n  public etmDetails: any;\n\n\n  constructor(\n    private fb: FormBuilder,\n    private metaService: MetaService,\n    private ms: MaintenanceService,\n    private router: Router,\n    private aroute: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n\n    this.etmDetails = this.aroute.snapshot.data['etm_details'];\n    this.buildForm();\n    this.getOptions();\n  }\n  public buildForm(): void {\n\n    this.etmForm = this.fb.group(\n      {\n        'enginetype': [this.etmDetails.enginetype, [Validators.required]],\n        'multidest': this.fb.array([\n\n        ]),\n      }\n    );\n    // this.addMaterialreceiptItems()\n    this.etmDetails.multidest.forEach(element => {\n      const control = <FormArray>this.etmForm.controls['multidest'];\n      control.push(this.initItemsData(element));\n    });\n  }\n  private initItemsData(data) {\n    return this.fb.group({\n      'jobworkname': [data.jobworkname],\n      'kmtolerance': [data.kmtolerance, [Validators.required]]\n    });\n  }\n  private initItems() {\n    return this.fb.group({\n      'jobworkname': ['', [Validators.required]],\n      'kmtolerance': [0, [Validators.required]]\n    });\n  }\n  addEtmitems() {\n    const control = <FormArray>this.etmForm.controls['multidest'];\n    control.push(this.initItems());\n  }\n  removeItems(i: number) {\n    const control = <FormArray>this.etmForm.controls['multidest'];\n    control.removeAt(i);\n  }\n  public removed(value: any): void {\n    let product_id = value['id'];\n    let multidest = this.etmForm.controls['multidest'].value;\n    var index = multidest.map(function (items) { return items.product_id; }).indexOf(product_id);\n    this.removeItems(index);\n  }\n  public save() {\n    this.process = 'saving';\n    this.ms.updatEtm(this.etmDetails['_id'], this.etmForm.value).subscribe(mrInfo => {\n      this.process = 'done';\n      this.router.navigate(['/maintenance/engine-typemaster']);\n    }, error => { this.process = 'done'; console.log(error);\n  });\n  }\n  private getOptions() {\n    this.metaService.getJobWorkNameList().subscribe(trackInfo => {\n      this.jobworkname_option = trackInfo['result'];\n      // console.log('Job Work Description >>>>>', this.jobworkname_option);\n    });\n  }\n\n}\n\n","module.exports = \"<div class=\\\"container\\\">\\n  <form [formGroup]=\\\"jwForm\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Edit Job Work</div>\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-3\\\">\\n            <label class=\\\"required\\\">Site</label>\\n            <ng-select [items]=\\\"siteOptions\\\" placeholder=\\\"Type and search site\\\" bindLabel=\\\"branch_name\\\" bindValue=\\\"branch_name\\\"\\n              formControlName=\\\"site\\\">\\n            </ng-select>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <label class=\\\"required\\\">Job type</label>\\n            <select class=\\\"form-control\\\" formControlName=\\\"job_type\\\" (change)=\\\"generatejobNumber()\\\">\\n              <option value=\\\"\\\">Select Job type</option>\\n              <option value=\\\"Job Work\\\">Job Work</option>\\n              <option value=\\\"Job Card\\\">Job Card</option>\\n            </select>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <label>Job No.</label>\\n            <input disabled type=\\\"text\\\" formControlName=\\\"job_number\\\" class=\\\"form-control\\\" placeholder=\\\"Job No.\\\">\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <label class=\\\"required\\\">Job date</label>\\n            <div class=\\\"input-group datepicker-input\\\">\\n              <input\\n                class=\\\"form-control\\\"\\n                placeholder=\\\"dd-mm-yyyy\\\"\\n                name=\\\"dp2\\\"\\n                formControlName=\\\"job_date\\\"\\n                ngbDatepicker\\n                #d2=\\\"ngbDatepicker\\\" \\n              />\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d2.toggle()\\\" type=\\\"button\\\">\\n                  <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <label class=\\\"required\\\">Truck No.</label>\\n            <ng-select [items]=\\\"trucks_option\\\" placeholder=\\\"Type and search items\\\" bindLabel=\\\"truckno\\\" bindValue=\\\"truckno\\\"\\n              formControlName=\\\"truck_no\\\">\\n            </ng-select>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <label>Km Reading</label>\\n            <input type=\\\"number\\\" formControlName=\\\"km_reading\\\" class=\\\"form-control\\\" placeholder=\\\"Km Reading\\\">\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <label class=\\\"required\\\">Vendor</label>\\n            <ng-select [items]=\\\"vendor_option\\\" placeholder=\\\"Type and search vendor\\\" bindLabel=\\\"name\\\" bindValue=\\\"name\\\"\\n              formControlName=\\\"vendor\\\">\\n            </ng-select>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <label>Engine Type</label>\\n            <input type=\\\"text\\\" disabled formControlName=\\\"enginetype\\\" class=\\\"form-control\\\" placeholder=\\\"Engine Type\\\">\\n          </div>\\n          \\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header\\\">\\n                Job Work items\\n                <button class=\\\"btn btn-primary float-right\\\" (click)=\\\"addJwItems()\\\" [disabled]=\\\"!jwForm.valid\\\"\\n                  type=\\\"button\\\">\\n                  Add Item\\n                </button>\\n              </div>\\n              <!-- /.box-header -->\\n              <div class=\\\"card-body\\\" *ngIf=\\\"jwForm.controls.job_items.controls.length > 0\\\">\\n                <table class=\\\"table table-bordered\\\" formArrayName=\\\"job_items\\\">\\n                  <tr>\\n                    <th>Work To Be Done</th>\\n                    <th>Last Done On</th>\\n                    <th>Remarks</th>\\n                    <th>Next Due Km</th>\\n                    <th>Action</th>\\n                  </tr>\\n                  <tr *ngFor=\\\"let school of jwForm.controls.job_items.controls; let i=index\\\" formGroupName=\\\"{{i}}\\\">\\n                    <td>\\n                      <div class=\\\"input-group\\\">\\n                        <select class=\\\"form-control\\\" formControlName=\\\"worktobedone\\\">\\n                          <option value=\\\"\\\">Select Job Description</option>\\n                          <option *ngFor=\\\"let j of jobworkname_option\\\" [value]=\\\"j.jobworkname\\\"> {{j.jobworkname}}</option>\\n                        </select>\\n                      </div>\\n\\n                    </td>\\n                  <td>\\n                      <div class=\\\"input-group\\\">\\n                        <select class=\\\"form-control\\\">\\n                          <input type=\\\"text\\\" #ld=\\\"bsDatepicker\\\" [bsConfig]=\\\"{ containerClass: 'theme-blue', 'dateInputFormat': 'DD-MM-YYYY', 'showWeekNumbers': false, 'minDate': currentDate }\\\" bsDatepicker formControlName=\\\"lastdoneon\\\"\\n                            class=\\\"form-control\\\">\\n                          <div class=\\\"input-group-prepend\\\" (click)=\\\"ld.toggle()\\\">\\n                            <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i></span>\\n                          </div>\\n                        </select>\\n                        </div>\\n                    </td>                    \\n                  <td>\\n                    <input type=\\\"text\\\" formControlName=\\\"remarks\\\"\\n                      class=\\\"form-control remarks\\\">\\n                  </td>\\n                  <td>\\n                    <input type=\\\"number\\\" min=\\\"0\\\" formControlName=\\\"nextduekm\\\"\\n                      class=\\\"form-control nextduekm\\\">\\n                  </td>\\n                  <td>\\n                      <button class=\\\"btn btn-danger float-right\\\" [disabled]=\\\"jwForm.controls?.job_items.controls.length == 1\\\" (click)=\\\"removeItems(i)\\\" type=\\\"button\\\">\\n                        <i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i>\\n                      </button>\\n                    </td>\\n                  </tr>\\n                </table>\\n              </div>\\n              <div class=\\\"card-body\\\" *ngIf=\\\"jwForm.controls?.job_items.controls.length == 0\\\">\\n                <p>Please select vendor</p>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n      <div class=\\\"mt-6\\\">\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-3\\\">\\n            <label>Bill Amount</label>\\n            <input type=\\\"number\\\" formControlName=\\\"bill_amount\\\" class=\\\"form-control\\\" placeholder=\\\"Bill Amount\\\">\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <label>Approved Amount</label>\\n            <input type=\\\"number\\\" formControlName=\\\"app_amount\\\" class=\\\"form-control\\\" placeholder=\\\"Approved Amount\\\">\\n          </div>\\n\\n          <div class=\\\"col-lg-6 col-md-6\\\">\\n            <label class=\\\"\\\">Job Remarks</label>\\n            <input type=\\\"text\\\" formControlName=\\\"job_remarks\\\" class=\\\"form-control\\\" placeholder=\\\"Please enter Job Remarks\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"card-footer\\\">\\n        <button class=\\\"btn btn-success float-right\\\" (click)=\\\"saveJw()\\\" [disabled]=\\\"!jwForm.valid || process == 'saving'\\\" type=\\\"button\\\">\\n          Save <i *ngIf=\\\"process == 'saving'\\\" class=\\\"fa fa-spinner fa-spin\\\"></i>\\n        </button>\\n      </div>\\n    </div>\\n  \\n  </form>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9tYWludGVuYW5jZS9lZGl0LWpvYi13b3JrL2VkaXQtam9iLXdvcmsuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MaintenanceService } from '../../maintenance/maintenance.service';\nimport { MetaService } from 'src/app/shared/services/meta.service';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\ndeclare var moment: any;\n\n@Component({\n  selector: 'app-edit-job-work',\n  templateUrl: './edit-job-work.component.html',\n  styleUrls: ['./edit-job-work.component.scss']\n})\nexport class EditJobWorkComponent implements OnInit {\n  public jwForm: any;\n  public process: string;\n  public job_items: any;\n  public siteOptions: any;\n  public vendor_option: any;\n  public trucks_option: any;\n  public jobworkname_option: any;\n  public etField = false;\n  public bsConfig: Partial<BsDatepickerConfig>;\n  minDate;\n  site_name: any;\n  usertype: any;\n  loading = false;\n  public currentDate = new Date();\n  public jwDetails: any;\n  constructor(\n    private fb: FormBuilder,\n    private ms: MaintenanceService,\n    private metaService: MetaService,\n    private aroute: ActivatedRoute,\n    private router: Router\n  ) {\n    this.usertype = this.metaService.getSiteFromStorage().role;\n    this.site_name = this.metaService.getSiteFromStorage().site;\n    const current = new Date();\n    this.minDate = {\n      year: current.getFullYear(),\n      month: current.getMonth() + 1,\n      day: current.getDate()\n    };\n\n   }\n\n  ngOnInit() {\n    this.jwDetails = this.aroute.snapshot.data['jw_details'];\n    this.bsConfig = Object.assign({},\n      { containerClass: 'theme-blue', 'rangeInputFormat': 'MMMM Do YYYY', minDate: new Date(), 'showWeekNumbers': false });\n    this.buildForm();\n    // this.jwForm.controls.job_items.valueChanges.subscribe(changes => {\n    //   this.updateValues();\n    // });\n    this.getOptions();\n    // this.getSites();\n  }\n  public buildForm(): void {\n\n    this.jwForm = this.fb.group(\n      {\n        'site': [this.jwDetails.site, [Validators.required]],\n        'job_type': [this.jwDetails.job_type, [Validators.required]],\n        'job_number': [this.jwDetails.job_number, [Validators.required]],\n        'job_date': [{year: new Date(this.jwDetails.job_date).getFullYear(), month: new Date(this.jwDetails.job_date).getMonth() + 1, day: new Date(this.jwDetails.job_date).getDate()}],\n        'truck_no': [this.jwDetails.truck_no, [Validators.required]],\n        'km_reading': [this.jwDetails.km_reading],\n        'enginetype': [this.jwDetails.enginetype, [Validators.required]],\n        'vendor': [this.jwDetails.vendor, [Validators.required]],\n        'job_items': this.fb.array([\n        ]),\n        'bill_amount': [this.jwDetails.bill_amount],\n        'app_amount': [this.jwDetails.app_amount],\n        'job_remarks': [this.jwDetails.job_remarks]\n      }\n    );\n    // this.addMaterialreceiptItems()\n    this.jwDetails.job_items.forEach(element => {\n      const control = <FormArray>this.jwForm.controls['job_items'];\n      control.push(this.initItemsData(element));\n    });\n  }\n  private initItemsData(data) {\n    return this.fb.group({\n      'worktobedone': [data.worktobedone],\n      'lastdoneon': [data.lastdoneon],\n      'remarks': [data.remarks],\n      'nextduekm': [data.nextduekm]\n    });\n  }\n  private initItems() {\n    return this.fb.group({\n      'worktobedone': [''],\n      'lastdoneon': [''],\n      'remarks': [''],\n      'nextduekm': [0]\n    });\n  }\n  addJwItems() {\n    const control = <FormArray>this.jwForm.controls['job_items'];\n    control.push(this.initItems());\n  }\n  removeItems(i: number) {\n    const control = <FormArray>this.jwForm.controls['job_items'];\n    control.removeAt(i);\n  }\n  public removed(value: any): void {\n    let product_id = value['id'];\n    let job_items = this.jwForm.controls['job_items'].value;\n    var index = job_items.map(function (items) { return items.product_id; }).indexOf(product_id);\n    this.removeItems(index);\n  }\n  public saveJw() {\n    let job_date;\n    if (this.jwForm.controls['job_date'].value) {\n      const dt = this.jwForm.controls['job_date'].value.year + '-' +\n        this.jwForm.controls['job_date'].value.month + '-' +\n        this.jwForm.controls['job_date'].value.day;\n      job_date = moment(dt, 'YYYY-MM-DD').format();\n      console.log(job_date);\n    } else {\n      job_date = moment().format();\n    }\n\n    this.process = 'saving';\n    let data = this.jwForm.value;\n    data.job_date = job_date;\n\n    console.log('Edit Job Work Saving', this.jwDetails);\n\n    this.ms.updatJobwork(this.jwDetails['_id'], this.jwForm.value).subscribe(miInfo => {\n      this.process = 'done';\n      this.router.navigate(['/maintenance/job-work']);\n    }, error => { this.process = 'done'; console.log(error);\n  });\n  }\n  getSites() {\n    this.loading = true;\n    this.metaService.getSites().subscribe((res: any) => {\n        this.loading = false;\n        this.siteOptions = res;\n        if (this.usertype === 'ADMIN') {\n          this.jwForm.controls['site'].setValue(this.siteOptions[0].branch_name);\n        } else {\n          this.jwForm.controls['site'].setValue(this.site_name);\n        }\n      },\n      err => {\n        this.loading = false;\n      }\n    );\n  }\n  private getOptions() {\n    this.ms.getVendorMasterList().subscribe(siteInfo => {\n      this.vendor_option = siteInfo['result'];\n      // console.log('>>>>Vendor List', siteInfo['result']);\n    });\n\n    this.metaService.getCompanyTruckList().subscribe(trackInfo => {\n      this.trucks_option = trackInfo['result'];\n      // console.log('Trucks List >>>>>', this.trucks_option);\n    });\n\n    this.metaService.getJobWorkNameList().subscribe(trackInfo => {\n      this.jobworkname_option = trackInfo['result'];\n      // console.log('Job Work Description >>>>>', this.jobworkname_option);\n    });\n\n  }\n  public updateValues() {\n  }\n  public generatejobNumber() {\n    const job_type = this.jwForm.controls.job_type.value;\n    const site = this.jwForm.controls.site.value;\n    if (site && job_type) {\n      const matchCond = { site: site, job_type: job_type };\n      console.log('mathCond >>' , matchCond );\n      this.ms.getJobNumberDetails(matchCond).subscribe(jwInfo => {\n        this.jwForm.controls.job_number.setValue(jwInfo['count'] + 1);\n      }, error => { console.log(error);\n      });\n    }\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <form [formGroup]=\\\"itemsForm\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Edit Job Work Master</div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-8\\\">\\n            <label class=\\\"required\\\">Job Work Name</label>\\n            <input type=\\\"text\\\" formControlName=\\\"jobworkname\\\" class=\\\"form-control manual-entry\\\"\\n              placeholder=\\\"Job work Name\\\">\\n          </div>\\n\\n        </div>\\n       </div>\\n      </div>\\n      <div class=\\\"card-footer\\\">\\n        <button class=\\\"btn btn-success float-right\\\" (click)=\\\"saveitems()\\\" [disabled]=\\\"!itemsForm.valid || process == 'saving'\\\" type=\\\"button\\\">\\n          Save <i *ngIf=\\\"process == 'saving'\\\" class=\\\"fa fa-spinner fa-spin\\\"></i>\\n        </button>\\n      </div>\\n  </form>\\n</div>\"","module.exports = \".auto-entry {\\n  border: 2px solid #fcbd47 !important; }\\n\\n.manual-entry {\\n  border: 2px solid #51cc51 !important; }\\n\\n::ng-deep .ng-select.manual-entry {\\n  border: 2px solid #51cc51 !important; }\\n\\n::ng-deep .ng-select.auto-entry {\\n  border: 2px solid #fcbd47 !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L21haW50ZW5hbmNlL2VkaXQtam9iLXdvcmttYXN0ZXIvRDpcXHRlc3RpbmdfZm9sZGVyXFx0aGlydVxcZnJvbnRlbmRcXHRkX2Zyb250ZW5kL3NyY1xcYXBwXFxsYXlvdXRcXG1haW50ZW5hbmNlXFxlZGl0LWpvYi13b3JrbWFzdGVyXFxlZGl0LWpvYi13b3JrbWFzdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksb0NBQTZDLEVBQUE7O0FBR2pEO0VBQ0ksb0NBQTRDLEVBQUE7O0FBR2hEO0VBQ0ksb0NBQTRDLEVBQUE7O0FBR2hEO0VBQ0ksb0NBQTZDLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvbWFpbnRlbmFuY2UvZWRpdC1qb2Itd29ya21hc3Rlci9lZGl0LWpvYi13b3JrbWFzdGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmF1dG8tZW50cnl7XHJcbiAgICBib3JkZXI6MnB4IHNvbGlkIHJnYigyNTIsIDE4OSwgNzEpICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tYW51YWwtZW50cnl7XHJcbiAgICBib3JkZXI6MnB4IHNvbGlkIHJnYig4MSwgMjA0LCA4MSkgIWltcG9ydGFudDtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5uZy1zZWxlY3QubWFudWFsLWVudHJ5e1xyXG4gICAgYm9yZGVyOjJweCBzb2xpZCByZ2IoODEsIDIwNCwgODEpICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAubmctc2VsZWN0LmF1dG8tZW50cnl7XHJcbiAgICBib3JkZXI6MnB4IHNvbGlkIHJnYigyNTIsIDE4OSwgNzEpICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { MaintenanceService } from '../maintenance.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-job-workmaster',\n  templateUrl: './edit-job-workmaster.component.html',\n  styleUrls: ['./edit-job-workmaster.component.scss']\n})\nexport class EditJobWorkmasterComponent implements OnInit {\n  public itemsForm: FormGroup;\n  public process: string;\n  public jwmDetails: any;\n\n\n  constructor(\n    private fb: FormBuilder,\n    private ms: MaintenanceService,\n    private router: Router,\n    private aroute: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.jwmDetails = this.aroute.snapshot.data['jwm_details'];\n\n    console.log(this.jwmDetails);\n\n    this.buildForm();\n    this.getOptions();\n  }\n  public buildForm(): void {\n    this.itemsForm = this.fb.group(\n      {\n        'jobworkname': [this.jwmDetails.jobworkname]\n      }\n    );\n  }\n\n  public saveitems() {\n    this.process = 'saving';\n    this.ms.updatJobworkmaster(this.jwmDetails['_id'], this.itemsForm.value).subscribe(mrInfo => {\n      this.process = 'done';\n      this.router.navigate(['/maintenance/job-workmaster']);\n    }, error => { this.process = 'done'; console.log(error);\n  });\n  }\n  private getOptions() {\n}\n\n}\n\n","import { Injectable } from '@angular/core';\r\nimport { MaintenanceService } from './maintenance.service';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class EnginetypemasterReslover implements Resolve<any> {\r\n    constructor(private ms: MaintenanceService) { }\r\n\r\n    resolve(route: ActivatedRouteSnapshot) {\r\n        return this.ms.getEtm(route.paramMap.get('id'));\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <strong>Job Card</strong>\\r\\n  </div>\\r\\n  <form [formGroup]=\\\"addForm\\\">\\r\\n\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <label>Date</label>\\r\\n          <div class=\\\"form-inline\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              \\r\\n              <input\\r\\n                  class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"dd/mm/yyyy\\\"\\r\\n                  name=\\\"dp\\\"\\r\\n                  formControlName=\\\"date\\\"\\r\\n                  ngbDatepicker\\r\\n                  #d1=\\\"ngbDatepicker\\\"\\r\\n                />\\r\\n                <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d1.toggle()\\\" type=\\\"button\\\">\\r\\n                  <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Job No</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"jobno\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Sr No</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"srno\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Truck No</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"truckno\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>KM Reading</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"km_reading\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Vendor Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"vendor_name\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Bill Amount</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"bill_amount\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>App Amount</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"app_amount\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <table class=\\\"table\\\">\\r\\n      <tbody>\\r\\n        <tr>\\r\\n          <td>\\r\\n            <label>Work To Be Done</label>\\r\\n            <!-- <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"work_be_done\\\"> -->\\r\\n            <div class=\\\"input-group datepicker-input\\\">\\r\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"work_be_done\\\"/>\\r\\n            </div>\\r\\n          </td>\\r\\n\\r\\n          <td>\\r\\n            <label>Last Done on</label>\\r\\n            <!-- <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"last_done_on\\\"> -->\\r\\n            <div class=\\\"input-group datepicker-input\\\">\\r\\n              <input class=\\\"form-control\\\" placeholder=\\\"dd/mm/yyyy\\\" name=\\\"dp\\\" formControlName=\\\"last_done_on\\\" ngbDatepicker #d3=\\\"ngbDatepicker\\\" />\\r\\n              <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d3.toggle()\\\" type=\\\"button\\\">\\r\\n                  <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </td>\\r\\n\\r\\n          <td>\\r\\n            <label>Remarks</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"remarks\\\">\\r\\n          </td>\\r\\n\\r\\n          <td>\\r\\n            <label>Qty</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"qty\\\">\\r\\n          </td>\\r\\n\\r\\n          <td>\\r\\n            <label>Scrap Qty</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"scrap_qty\\\">\\r\\n          </td>\\r\\n\\r\\n          <td>\\r\\n            <label>Next Due KM</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"next_due_km\\\">\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success\\\">Save</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9tYWludGVuYW5jZS9qb2ItY2FyZC9qb2ItY2FyZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { MaintenanceService } from 'src/app/shared/services/maintenance.service';\r\nimport { NgbModal, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { routerTransition } from 'src/app/router.animations';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-job-card',\r\n  templateUrl: './job-card.component.html',\r\n  styleUrls: ['./job-card.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class JobCardComponent implements OnInit {\r\n\r\n  addForm: FormGroup;\r\n  items: FormArray;\r\n\r\n  constructor(\r\n    public maintenanceService: MaintenanceService,\r\n    private formBuilder: FormBuilder,\r\n    public toastr: ToastrService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.addForm = this.formBuilder.group({\r\n      date: [''],\r\n      jobno: [''],\r\n      srno: [''],\r\n      truckno: [''],\r\n      km_reading: [''],\r\n      vendor_name: [''],\r\n      bill_amount: [''],\r\n      app_amount: [''],\r\n      job_details: [''],\r\n      work_be_done: [''],\r\n      last_done_on: [''],\r\n      remarks: [''],\r\n      qty: [''],\r\n      scrap_qty: [''],\r\n      next_due_km: [''],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    const getFromData = this.addForm.value;\r\n\r\n    console.log('FromData >>>>', getFromData);\r\n\r\n    const tdate = getFromData.date;\r\n    const wdate = getFromData.work_be_done;\r\n    const ldate = getFromData.last_done_on;\r\n\r\n    const mDate = tdate.year + '-' + tdate.month + '-' + tdate.day;\r\n    const workDate = wdate.year + '-' + wdate.month + '-' + wdate.day;\r\n    const lastDate = ldate.year + '-' + ldate.month + '-' + ldate.day;\r\n\r\n    const mainObj = {\r\n      'date': mDate,\r\n      'jobno': getFromData.jobno,\r\n      'srno': getFromData.srno,\r\n      'truckno': getFromData.truckno,\r\n      'km_reading': getFromData.km_reading,\r\n      'vendor_name': getFromData.vendor_name,\r\n      'bill_amount': getFromData.bill_amount,\r\n      'app_amount': getFromData.app_amount,\r\n      'job_details': [{\r\n        'work_be_done': workDate,\r\n        'last_done_on': lastDate,\r\n        'remarks': getFromData.remarks,\r\n        'qty': getFromData.qty,\r\n        'scrap_qty': getFromData.scrap_qty,\r\n        'next_due_km': getFromData.next_due_km,\r\n      }]\r\n    };\r\n    this.maintenanceService.addJobCard(mainObj).subscribe(res => {\r\n\r\n      this.addForm.reset();\r\n      this.toastr.success('Job Card Added successfully.');\r\n    }, err => {\r\n      console.log('err   >>>', err);\r\n      this.toastr.error('Something went wrong when adding!');\r\n    });\r\n  }\r\n}\r\n","module.exports = \"<h4><i class=\\\"fa fa-file-text-o\\\"></i> Srno #{{ srno }} Details</h4>\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"listActive\\\">\\r\\n  <div class=\\\"col-md-3\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"newJobCard()\\\">Create New Job Card</button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-md-3\\\">\\r\\n    <table class=\\\"table table-bordered\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>Job No.</th>\\r\\n          <th>Action</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let j of jobNoList; let i = index\\\">\\r\\n          <td>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"getJobCard(j.jobno)\\\">{{ j.jobno ? j.jobno : '--' }}</button>\\r\\n          </td>\\r\\n          <td>\\r\\n            <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"delete(i, j.jobno)\\\" >-</button>\\r\\n            <!-- (click)=\\\"delete(i)\\\" -->\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Create New Job Card -->\\r\\n<div class=\\\"card\\\" *ngIf=\\\"CardActive\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <strong>Job Card</strong>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"Back()\\\" style=\\\"float:right;\\\">Back</button>\\r\\n  </div>\\r\\n  <form [formGroup]=\\\"addForm\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <label>Date</label>\\r\\n          <div class=\\\"form-inline\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input class=\\\"form-control\\\" placeholder=\\\"dd/mm/yyyy\\\" name=\\\"dp\\\" formControlName=\\\"date\\\" ngbDatepicker #d1=\\\"ngbDatepicker\\\" />\\r\\n              <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d1.toggle()\\\" type=\\\"button\\\">\\r\\n                <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <!-- <button type=\\\"button\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success\\\" *ngIf=\\\"saveActive\\\">Save</button>\\r\\n      <button type=\\\"button\\\" (click)=\\\"update()\\\" class=\\\"btn btn-success\\\" *ngIf=\\\"updateActive\\\">Update</button> -->\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Job No</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"jobno\\\" value=\\\"{{ max_jobno }}\\\" *ngIf=\\\"saveActive\\\" readonly/> \\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"jobno\\\" *ngIf=\\\"updateActive\\\" readonly/> \\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Sr No</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"srno\\\" value=\\\"{{ srno }}\\\" readonly/>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Truck No</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"truckno\\\" value=\\\"{{ truckno }}\\\" readonly/>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>KM Reading</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"km_reading\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Vendor Name</label>\\r\\n            <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"vendor_name\\\" /> -->\\r\\n            <input class=\\\"form-control\\\" ng2-auto-complete formControlName=\\\"vendor_name\\\" \\r\\n             [source]=\\\"vendorName.bind(this)\\\" list-formatter=\\\"name\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Remarks</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"remarks\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Bill Amount</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"bill_amount\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>App Amount</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"app_amount\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Upload Bill</label>\\r\\n            <br />\\r\\n            <input\\r\\n              type=\\\"file\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              formControlName=\\\"upload_bill\\\"\\r\\n              class=\\\"inputfile\\\"\\r\\n              name=\\\"file1\\\"\\r\\n              id=\\\"file1\\\"\\r\\n              (change)=\\\"onSelectBill($event)\\\"\\r\\n            />\\r\\n            <label class=\\\"btn btn-success\\\" for=\\\"file1\\\"><i class=\\\"fa fa-file\\\" aria-hidden=\\\"true\\\"></i> Select file</label>\\r\\n            {{ file ? file.name : '' }}\\r\\n            <br>\\r\\n            <a *ngIf=\\\"job_data && job_data.bill\\\" href=\\\"{{ job_data && job_data.bill ? job_data.bill : '' }}\\\">Download</a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card-header\\\">\\r\\n      <strong>Job Detail</strong>\\r\\n    </div>\\r\\n    <div class=\\\"table-scroll\\\">\\r\\n      <div\\r\\n        class=\\\"table-scroll-inner\\\"\\r\\n        formArrayName=\\\"addMultipleJobDetails\\\">\\r\\n        \\r\\n        <div >\\r\\n          <!-- class=\\\"table tableFixHead mytable\\\" -->\\r\\n          <table class=\\\"table \\\">\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let d of detailData.controls; let i = index\\\" [formGroup]=\\\"d\\\">\\r\\n                <td>\\r\\n                  <label>Work To Be Done</label>\\r\\n                  <!-- <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"work_be_done\\\"> -->\\r\\n                  <!-- <div class=\\\"input-group datepicker-input\\\"> -->\\r\\n                    <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"work_be_done\\\" /> -->\\r\\n                    <input class=\\\"form-control\\\" width=\\\"100%\\\" ng2-auto-complete formControlName=\\\"work_be_done\\\" (change)=\\\"getLastDate(i)\\\" [source]=\\\"wdName.bind(this)\\\" list-formatter=\\\"name\\\" />\\r\\n                  <!-- </div> -->\\r\\n                </td>\\r\\n\\r\\n                <td>\\r\\n                  <label>Last Done on</label>\\r\\n                  <!-- <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"last_done_on\\\"> -->\\r\\n                  <div class=\\\"input-group datepicker-input\\\">\\r\\n                    <input\\r\\n                      class=\\\"form-control\\\"\\r\\n                      placeholder=\\\"dd/mm/yyyy\\\"\\r\\n                      name=\\\"dp3\\\"\\r\\n                      formControlName=\\\"last_done_on\\\"\\r\\n                      ngbDatepicker\\r\\n                      #d3=\\\"ngbDatepicker\\\"\\r\\n                      readonly                      \\r\\n                    />\\r\\n                    <!-- <div class=\\\"input-group-append\\\">\\r\\n                      <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d3.toggle()\\\" type=\\\"button\\\" readonly>\\r\\n                        <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\" readonly></i>\\r\\n                      </button>\\r\\n                    </div> -->\\r\\n                  </div>\\r\\n                </td>\\r\\n\\r\\n                <td>\\r\\n                  <label>Remarks</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"remarks\\\" />\\r\\n                </td>\\r\\n\\r\\n                <td>\\r\\n                  <label>Qty</label>\\r\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" (change)=\\\"setTotalAmount(i)\\\" formControlName=\\\"qty\\\" />\\r\\n                </td>\\r\\n\\r\\n                <td>\\r\\n                  <label>Scrap Qty</label>\\r\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"scrap_qty\\\" />\\r\\n                </td>\\r\\n\\r\\n                <td>\\r\\n                  <label>Next Due KM</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"next_due_km\\\" />\\r\\n                </td>\\r\\n\\r\\n                <td>\\r\\n                  <label>Rate</label>\\r\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" (change)=\\\"setTotalAmount(i)\\\" formControlName=\\\"rate\\\" />\\r\\n                </td>\\r\\n\\r\\n                <td>\\r\\n                  <label>GST</label>\\r\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" (change)=\\\"setTotalAmount(i)\\\" formControlName=\\\"gst\\\" />\\r\\n                </td>\\r\\n\\r\\n                <td>\\r\\n                  <label>Amount</label>\\r\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" (change)=\\\"GetTotalAmount(i)\\\" formControlName=\\\"amount\\\" />\\r\\n                </td>\\r\\n\\r\\n                <td style=\\\"width: 100px;\\\">\\r\\n                  <label> Action </label> <br />\\r\\n                  <!-- <button (click)=\\\"addDetail()\\\">Add</button> -->\\r\\n                  <button class=\\\"btn btn-success\\\" type=\\\"button\\\" (click)=\\\"addDetail()\\\">+</button>&nbsp;\\r\\n                  <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"removeItem(i)\\\">-</button>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td [colSpan]=\\\"8\\\"></td>\\r\\n                <td><b>Total : {{ mainTotal }} </b></td>\\r\\n              </tr>\\r\\n\\r\\n              \\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success\\\" *ngIf=\\\"saveActive\\\">Save</button>\\r\\n      <button type=\\\"button\\\" (click)=\\\"update()\\\" class=\\\"btn btn-success\\\" *ngIf=\\\"updateActive\\\">Update</button>\\r\\n      \\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","module.exports = \".inputfile {\\n  width: 0.1px;\\n  height: 0.1px;\\n  opacity: 0;\\n  overflow: hidden;\\n  position: absolute;\\n  z-index: -1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L21haW50ZW5hbmNlL2pvYi1saXN0L0Q6XFx0ZXN0aW5nX2ZvbGRlclxcdGhpcnVcXGZyb250ZW5kXFx0ZF9mcm9udGVuZC9zcmNcXGFwcFxcbGF5b3V0XFxtYWludGVuYW5jZVxcam9iLWxpc3RcXGpvYi1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0MsWUFBWTtFQUNaLGFBQWE7RUFDYixVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixXQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvbWFpbnRlbmFuY2Uvam9iLWxpc3Qvam9iLWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW5wdXRmaWxlIHtcclxuXHR3aWR0aDogMC4xcHg7XHJcblx0aGVpZ2h0OiAwLjFweDtcclxuXHRvcGFjaXR5OiAwO1xyXG5cdG92ZXJmbG93OiBoaWRkZW47XHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdHotaW5kZXg6IC0xO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MaintenanceService } from 'src/app/shared/services/maintenance.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { FormGroup, FormBuilder, FormArray, Validators, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgbModal, NgbDateStruct, NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\r\nimport { routerTransition } from 'src/app/router.animations';\r\ndeclare var moment: any\r\nimport { Observable } from 'rxjs';\r\nimport * as momentTZ from 'moment-timezone';\r\n// import { NgbDateStruct, NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-job-list',\r\n  templateUrl: './job-list.component.html',\r\n  styleUrls: ['./job-list.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\n\r\nexport class JobListComponent implements OnInit {\r\n\r\n  srno:  number;\r\n  truckno:  number;\r\n  max_jobno:  number;\r\n  jobNoList: any = [];\r\n  jobDetails: any = [];\r\n  jobNoData: any = {};\r\n  addForm: FormGroup;\r\n  addMultipleJobDetails: FormArray;\r\n  date: NgbDateStruct;\r\n  mainTotal = 0;\r\n\r\n  listActive = true;\r\n  CardActive = false;\r\n  saveActive = true;\r\n  updateActive = false;\r\n  file;\r\n\r\n  job_data;\r\n\r\n  constructor(\r\n    private maintenance: MaintenanceService,\r\n    private toastr: ToastrService,\r\n    public activedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private calendar: NgbCalendar,\r\n\r\n  ) {\r\n    this.activedRoute.params.subscribe(params => {\r\n      this.srno = params.srno;\r\n      this.truckno = params.truckno;\r\n    });\r\n\r\n    this.addForm = this.formBuilder.group({\r\n      date: [''],\r\n      jobno: [''],\r\n      srno: [''],\r\n      truckno: [''],\r\n      km_reading: [''],\r\n      vendor_name: [''],\r\n      remarks: [''],\r\n      bill_amount: [''],\r\n      app_amount: [''],\r\n      job_details: [''],\r\n      upload_bill: [''],\r\n      addMultipleJobDetails: this.formBuilder.array([])\r\n    });\r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.fetchData();\r\n    this.getMaxJobNo();\r\n\r\n\r\n  }\r\n\r\n  get detailData(): FormArray { return this.addForm.get('addMultipleJobDetails') as FormArray; }\r\n\r\n  // get multipleEditControls() {\r\n  //   return this.addForm.get('addMultipleJobDetails')['controls'];\r\n  // }\r\n\r\n\r\n  createItem(): FormGroup {\r\n    return this.formBuilder.group({\r\n      work_be_done: [''],\r\n      last_done_on: [''],\r\n      remarks: [''],\r\n      qty: [''],\r\n      scrap_qty: [''],\r\n      next_due_km: [''],\r\n      rate: [''],\r\n      gst: [''],\r\n      amount: [''],\r\n    });\r\n  }\r\n\r\n  existingData(data) {\r\n\r\n    return new FormGroup({\r\n      work_be_done: new FormControl(data.work_be_done),\r\n      last_done_on: new FormControl(data.last_done_on),\r\n      remarks: new FormControl(data.remarks),\r\n      qty: new FormControl(data.qty),\r\n      scrap_qty: new FormControl(data.scrap_qty),\r\n      next_due_km: new FormControl(data.next_due_km),\r\n      rate: new FormControl(data.rate),\r\n      gst: new FormControl(data.gst),\r\n      amount: new FormControl(data.amount),\r\n    });\r\n  }\r\n\r\n  addDetail(): void {\r\n    this.addMultipleJobDetails = this.addForm.get('addMultipleJobDetails') as FormArray;\r\n    this.addMultipleJobDetails.push(this.createItem());\r\n  }\r\n\r\n  // Remove multiple form\r\n  removeItem(index) {\r\n    if (index === 0) {\r\n      this.toastr.error('Cannot remove this form.');\r\n    } else {\r\n      this.addMultipleJobDetails.removeAt(index);\r\n    }\r\n  }\r\n\r\n  fetchData() {\r\n    this.mainTotal = 0;\r\n    const detail = this.addForm.get('addMultipleJobDetails') as FormArray;\r\n    while (detail.length !== 0) {\r\n      detail.removeAt(0);\r\n    }\r\n    // if no job detail then push empty item\r\n    detail.push(this.createItem());\r\n    this.maintenance.getJobNoList(this.srno).subscribe((res: any) => {\r\n      console.log('res >>>>>>>', res.result);\r\n      this.jobNoList = res.result;\r\n    });\r\n\r\n  }\r\n\r\n  newJobCard() {\r\n    this.mainTotal = 0;\r\n    this.addForm.reset();\r\n    this.date = this.calendar.getToday();\r\n\r\n    console.log('this.date  >>>>>>', this.date );\r\n    // const bDateObj = {\r\n    //   day: parseInt(bDate[0]),\r\n    //   month: parseInt(bDate[1]),\r\n    //   year: parseInt(bDate[2])\r\n    // };\r\n    this.addForm.controls['date'].setValue(this.date);\r\n    this.file = '';\r\n    const detail = this.addForm.get('addMultipleJobDetails') as FormArray;\r\n    while (detail.length !== 0) {\r\n      detail.removeAt(0);\r\n    }\r\n    // if no job detail then push empty item\r\n    detail.push(this.createItem());\r\n\r\n    this.CardActive = true;\r\n    this.listActive = false;\r\n    this.saveActive = true;\r\n    this.updateActive = false;\r\n  }\r\n\r\n  Back() {\r\n    this.CardActive = false;\r\n    this.listActive = true;\r\n    this.getMaxJobNo();\r\n    this.mainTotal = 0;\r\n\r\n    const detail = this.addForm.get('addMultipleJobDetails') as FormArray;\r\n    while (detail.length !== 0) {\r\n      detail.removeAt(0);\r\n    }\r\n    // if no job detail then push empty item\r\n    detail.push(this.createItem());\r\n  }\r\n\r\n  getJobCard(jobno) {\r\n    this.CardActive = true;\r\n    this.listActive = false;\r\n    this.saveActive = false;\r\n    this.updateActive = true;\r\n\r\n    this.maintenance.getJobNoJobDetails(jobno).subscribe((res: any) => {\r\n      this.job_data = res;\r\n\r\n      const control = <FormArray>this.addForm.controls['addMultipleJobDetails'];\r\n\r\n      for (let i = control.length - 1; i >= 0; i--) {\r\n        control.removeAt(i);\r\n      }\r\n\r\n      const fDate = moment(res.date).format('DD/MM/YYYY');\r\n      const bDate = fDate.split('/');\r\n\r\n      const bDateObj = {\r\n        day: parseInt(bDate[0]),\r\n        month: parseInt(bDate[1]),\r\n        year: parseInt(bDate[2])\r\n      };\r\n      this.max_jobno = res.jobno;\r\n      this.addForm.controls['date'].setValue(bDateObj);\r\n      this.addForm.controls['jobno'].setValue(this.max_jobno);\r\n      this.addForm.controls['srno'].setValue(this.srno);\r\n      this.addForm.controls['truckno'].setValue(this.truckno);\r\n      this.addForm.controls['km_reading'].setValue(res.km_reading);\r\n      this.addForm.controls['vendor_name'].setValue(res.vendor_name);\r\n      this.addForm.controls['remarks'].setValue(res.remarks);\r\n      this.addForm.controls['bill_amount'].setValue(res.bill_amount);\r\n      this.addForm.controls['app_amount'].setValue(res.app_amount);\r\n\r\n      const detail = this.addForm.get('addMultipleJobDetails') as FormArray;\r\n\r\n      // if no job detail then push empty item\r\n      let i = 0;\r\n      if (res.job_details.length === 0) {\r\n        detail.push(this.createItem());\r\n      } else {\r\n        res.job_details.forEach(element => {\r\n            // set date\r\n            element.last_done_on = momentTZ(element.last_done_on).tz('Asia/Calcutta').format('DD/MM/YYYY');\r\n            const splitedDate = element.last_done_on.split('/');\r\n            const dateObj = {\r\n              day: parseInt(splitedDate[0], 10),\r\n              month: parseInt(splitedDate[1], 10),\r\n              year: parseInt(splitedDate[2], 10)\r\n            };\r\n            element.last_done_on = dateObj;\r\n            i = i + 1;\r\n          detail.push(this.existingData(element));\r\n        });\r\n      }\r\n\r\n      this.jobNoData = res;\r\n      // this.jobNoList = res.result;\r\n      this.GetTotalAmount((i - 1));\r\n    });\r\n  }\r\n\r\n  getMaxJobNo() {\r\n\r\n    this.maintenance.getMaxJobNo().subscribe((res: any) => {\r\n      console.log('res >>>>>>>', res);\r\n      // this.jobNoList = res.result;\r\n      this.max_jobno = res.jobno;\r\n    });\r\n  }\r\n\r\n  onSelectBill(event) {\r\n    this.file = event.target.files[0];\r\n  }\r\n\r\n  submit() {\r\n\r\n    const getFromData = this.addForm.value;\r\n    const tdate = getFromData.date;\r\n    const mDate = tdate.year + '-' + tdate.month + '-' + tdate.day;\r\n    // console.log('addMultipleJobDetails >>>', getFromData.addMultipleJobDetails);\r\n\r\n    const vendorname = getFromData.vendor_name.name;\r\n    getFromData.vendor_name = vendorname ? vendorname : getFromData.vendor_name;\r\n\r\n    getFromData.addMultipleJobDetails.forEach(element => {\r\n\r\n      // const wdate = element.work_be_done;\r\n      // if (wdate) {\r\n      //   const workDate = wdate.year + '-' + wdate.month + '-' + wdate.day;\r\n      //   element.work_be_done = workDate;\r\n      // }\r\n\r\n      // const ldate = element.last_done_on;\r\n      // if (ldate) {\r\n      //   const lastDate = ldate.year + '-' + ldate.month + '-' + ldate.day;\r\n      //   element.last_done_on = lastDate;\r\n      // }\r\n      const wdname = element.work_be_done.name;\r\n      element.work_be_done = wdname ? wdname : element.work_be_done;\r\n\r\n\r\n      this.jobDetails.push(element);\r\n    });\r\n\r\n    const d = new FormData();\r\n    d.append('file', this.file);\r\n    let bill = '';\r\n    if (getFromData.upload_bill) {\r\n      this.maintenance.uploadBill(d).subscribe((res: any) => {\r\n        console.log('>>res', res);\r\n        bill = res.url;\r\n        this.toastr.success('Bill uploaded.');\r\n\r\n        const mainObj = {\r\n          'date': mDate,\r\n          'jobno': this.max_jobno,\r\n          'srno': Number(this.srno),\r\n          'truckno': this.truckno,\r\n          'km_reading': getFromData.km_reading,\r\n          'vendor_name': getFromData.vendor_name,\r\n          'remarks': getFromData.remarks,\r\n          'bill_amount': getFromData.bill_amount,\r\n          'app_amount': getFromData.app_amount,\r\n          'job_details': this.jobDetails,\r\n          'bill': bill\r\n        };\r\n\r\n        this.maintenance.addJobCard(mainObj).subscribe(res => {\r\n\r\n          this.addForm.reset();\r\n          this.file = '';\r\n          this.toastr.success('Job Card Added successfully.');\r\n\r\n          this.fetchData();\r\n          this.getMaxJobNo();\r\n          this.CardActive = false;\r\n          this.listActive = true;\r\n        }, err => {\r\n          console.log('err   >>>', err);\r\n          this.toastr.error('Something went wrong when adding!');\r\n        });\r\n\r\n      }, err => {\r\n        console.log('err   >>>', err);\r\n        this.toastr.error('Something went wrong when adding!');\r\n      });\r\n    } else {\r\n      const mainObj = {\r\n        'date': mDate,\r\n        'jobno': this.max_jobno,\r\n        'srno': Number(this.srno),\r\n        'truckno': this.truckno,\r\n        'km_reading': getFromData.km_reading,\r\n        'vendor_name': getFromData.vendor_name,\r\n        'remarks': getFromData.remarks,\r\n        'bill_amount': getFromData.bill_amount,\r\n        'app_amount': getFromData.app_amount,\r\n        'job_details': this.jobDetails,\r\n        'bill': bill\r\n      };\r\n\r\n      this.maintenance.addJobCard(mainObj).subscribe(res => {\r\n\r\n        this.addForm.reset();\r\n        this.file = '';\r\n        this.toastr.success('Job Card Added successfully.');\r\n\r\n        this.fetchData();\r\n        this.getMaxJobNo();\r\n        this.CardActive = false;\r\n        this.listActive = true;\r\n      }, err => {\r\n        console.log('err   >>>', err);\r\n        this.toastr.error('Something went wrong when adding!');\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  // Search query for work to be done List\r\n  wdName = (keyword: any): Observable<any[]> => {\r\n    if (keyword) {\r\n      return  this.maintenance.getWorkDoneList(keyword)\r\n        .map((res: any) => {\r\n          return res;\r\n        });\r\n    } else {\r\n      return Observable.of([]);\r\n    }\r\n  }\r\n\r\n\r\n  // Search query for work to be done List\r\n  vendorName = (keyword: any): Observable<any[]> => {\r\n    if (keyword) {\r\n      return  this.maintenance.getVendorNameList(keyword)\r\n        .map((res: any) => {\r\n          return res;\r\n        });\r\n    } else {\r\n      return Observable.of([]);\r\n    }\r\n  }\r\n\r\n  getLastDate(idx) {\r\n    const getFromData = this.addForm.value;\r\n    const truckno = this.truckno;\r\n    let work_be_done;\r\n    if (getFromData.addMultipleJobDetails[idx].work_be_done.name) {\r\n      work_be_done =  getFromData.addMultipleJobDetails[idx].work_be_done.name;\r\n    }\r\n\r\n    console.log('truckno  >>>', truckno);\r\n    console.log('work_be_done  >>>', work_be_done);\r\n\r\n    this.maintenance.getLastDoneOn(truckno, work_be_done).subscribe((res: any) => {\r\n      console.log('res  >>>', res.result.last_done_on);\r\n      if (res.result.last_done_on) {\r\n        const dt = momentTZ(res.result.last_done_on.last_done_on).tz('Asia/Calcutta');\r\n        const dateObj = {\r\n          day: parseInt(dt.format('DD')),\r\n          month: parseInt(dt.format('MM')),\r\n          year: parseInt(dt.format('YYYY'))\r\n        };\r\n\r\n        this.addForm.controls['addMultipleJobDetails']['controls'][idx].controls['last_done_on'].setValue(dateObj);\r\n      }\r\n    }, err => {\r\n      this.toastr.error('Something went wrong.' , 'Error');\r\n    });\r\n  }\r\n\r\n  update() {\r\n\r\n    this.jobDetails = [];\r\n    const getFromData = this.addForm.value;\r\n    const tdate = getFromData.date;\r\n    const mDate = tdate.year + '-' + tdate.month + '-' + tdate.day;\r\n    // console.log('addMultipleJobDetails >>>', getFromData.addMultipleJobDetails);\r\n\r\n\r\n    const vendorname = getFromData.vendor_name.name;\r\n    getFromData.vendor_name = vendorname ? vendorname : getFromData.vendor_name;\r\n\r\n\r\n    getFromData.addMultipleJobDetails.forEach(element => {\r\n\r\n      // console.log('element  >>>>', element);\r\n      // const ldate = element.last_done_on;\r\n      // if (ldate) {\r\n      //   const lastDate = ldate.year + '-' + ldate.month + '-' + ldate.day;\r\n      //   element.last_done_on = lastDate;\r\n      // }\r\n      delete element.last_done_on;\r\n      const wdname = element.work_be_done.name;\r\n      element.work_be_done = wdname ? wdname : element.work_be_done;\r\n      this.jobDetails.push(element);\r\n\r\n    });\r\n\r\n    // console.log(this.jobDetails);\r\n\r\n    const d = new FormData();\r\n    d.append('file', this.file);\r\n    let bill = '';\r\n    if (getFromData.upload_bill) {\r\n      this.maintenance.uploadBill(d).subscribe((res: any) => {\r\n        bill = res.url;\r\n        this.toastr.success('Job Card Updated successfully.');\r\n\r\n        const mainObj = {\r\n          'date': mDate,\r\n          'jobno': this.max_jobno,\r\n          'srno': Number(this.srno),\r\n          'truckno': this.truckno,\r\n          'km_reading': getFromData.km_reading,\r\n          'vendor_name': getFromData.vendor_name,\r\n          'remarks': getFromData.remarks,\r\n          'bill_amount': getFromData.bill_amount,\r\n          'app_amount': getFromData.app_amount,\r\n          'job_details': this.jobDetails,\r\n          'bill': bill\r\n        };\r\n\r\n        console.log('mainObj  >>>>>', mainObj);\r\n\r\n        this.maintenance.updateJobCard(mainObj).subscribe(res => {\r\n\r\n          this.addForm.reset();\r\n          this.file = '';\r\n          this.toastr.success('Job Card Updated Successfully.');\r\n          this.CardActive = false;\r\n          this.listActive = true;\r\n          this.getMaxJobNo();\r\n\r\n          const detail = this.addForm.get('addMultipleJobDetails') as FormArray;\r\n          while (detail.length !== 0) {\r\n            detail.removeAt(0);\r\n          }\r\n\r\n        }, err => {\r\n          console.log('err   >>>', err);\r\n          this.toastr.error('Something went wrong when adding!');\r\n        });\r\n      }, err => {\r\n        console.log('err   >>>', err);\r\n        this.toastr.error('Something went wrong when adding!');\r\n      });\r\n    } else {\r\n      const mainObj = {\r\n        'date': mDate,\r\n        'jobno': this.max_jobno,\r\n        'srno': Number(this.srno),\r\n        'truckno': this.truckno,\r\n        'km_reading': getFromData.km_reading,\r\n        'vendor_name': getFromData.vendor_name,\r\n        'remarks': getFromData.remarks,\r\n        'bill_amount': getFromData.bill_amount,\r\n        'app_amount': getFromData.app_amount,\r\n        'job_details': this.jobDetails\r\n      };\r\n\r\n      console.log('mainObj  >>>>>', mainObj);\r\n\r\n      this.maintenance.updateJobCard(mainObj).subscribe(res => {\r\n\r\n        this.addForm.reset();\r\n        this.file = '';\r\n        this.toastr.success('Job Card Updated Successfully.');\r\n        this.CardActive = false;\r\n        this.listActive = true;\r\n        this.getMaxJobNo();\r\n\r\n        const detail = this.addForm.get('addMultipleJobDetails') as FormArray;\r\n        while (detail.length !== 0) {\r\n          detail.removeAt(0);\r\n        }\r\n\r\n      }, err => {\r\n        console.log('err   >>>', err);\r\n        this.toastr.error('Something went wrong when adding!');\r\n      });\r\n    }\r\n  }\r\n\r\n  delete(idx, jobno) {\r\n    console.log('idx  >>>>>', idx);\r\n    console.log('jobno  >>>>>', jobno);\r\n\r\n    const conf = confirm('Are you sure you want to delete this record ?');\r\n\r\n    if (conf === true) {\r\n      this.maintenance.deleteJobCard(jobno).subscribe(res => {\r\n        this.jobNoList.splice(idx, 1);\r\n        this.toastr.success('Job Card deleted successfully.');\r\n        this.getMaxJobNo();\r\n      }, err => {\r\n        this.toastr.error('Something went wrong.');\r\n      });\r\n    }\r\n  }\r\n\r\n  setTotalAmount(idx) {\r\n    const getFromData = this.addForm.value;\r\n    if ( getFromData.addMultipleJobDetails[idx].qty && getFromData.addMultipleJobDetails[idx].rate ) {\r\n      const newQty =  getFromData.addMultipleJobDetails[idx].qty;\r\n      const newRate =  getFromData.addMultipleJobDetails[idx].rate;\r\n      const newGST =  getFromData.addMultipleJobDetails[idx].gst;\r\n\r\n      // console.log('newQty  >>>', newQty);\r\n      // console.log('newRate  >>>', newRate);\r\n      // console.log('totalAmount  >>>', newGST);\r\n\r\n      const totalAmount = newQty * newRate;\r\n      const gstAmount = (totalAmount * newGST) / 100;\r\n      // console.log('totalAmount  >>>', totalAmount);\r\n      // console.log('gstAmount  >>>', gstAmount);\r\n      const finalAmount = totalAmount + gstAmount;\r\n\r\n      this.addForm.controls['addMultipleJobDetails']['controls'][idx].controls['amount'].setValue(finalAmount);\r\n      this.GetTotalAmount(idx);\r\n    }\r\n  }\r\n\r\n  GetTotalAmount(idx) {\r\n    const getFromData = this.addForm.value;\r\n    if ( getFromData.addMultipleJobDetails[idx].amount ) {\r\n      let t = 0;\r\n      // const i = 0;\r\n      while (idx >= 0) {\r\n        t = t + getFromData.addMultipleJobDetails[idx].amount;\r\n        idx = idx - 1;\r\n      }\r\n\r\n      this.mainTotal = t;\r\n\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MaintenanceService } from './maintenance.service';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class JobworkReslover implements Resolve<any> {\r\n    constructor(private ms: MaintenanceService) { }\r\n\r\n    resolve(route: ActivatedRouteSnapshot) {\r\n        return this.ms.getJobwork(route.paramMap.get('id'));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MaintenanceService } from './maintenance.service';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class JobworkmasterReslover implements Resolve<any> {\r\n    constructor(private ms: MaintenanceService) { }\r\n\r\n    resolve(route: ActivatedRouteSnapshot) {\r\n        return this.ms.getJobworkmaster(route.paramMap.get('id'));\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\n  <app-smart-table [commonFilter]=\\\"commonFilter\\\" [addButtonInfo]=\\\"addButtonInfo\\\" [screenName]=\\\"'Engine Type Master'\\\" [columns]=\\\"columns\\\" [fetchUrl]=\\\"fetchUrl\\\" [limit]=\\\"5\\\"\\n    [refreshRedTable]=\\\"refreshRedTable\\\" (event)=\\\"linkClicked($event)\\\">\\n  </app-smart-table>\\n</div>\\n<div class=\\\"modal fade\\\" role=\\\"dialog\\\" id=\\\"deleteModal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Delete</h4>\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n              <p>Are you sure you want to delete?</p>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n              <button type=\\\"button\\\" data-dismiss=\\\"modal\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n              <button type=\\\"button\\\" [disabled]=\\\"process =='processing'\\\" (click)=\\\"deleteRecord()\\\" class=\\\"actions-button btn btn-danger\\\">\\n                <span *ngIf=\\\"process !='processing'\\\">Delete</span>\\n                <span *ngIf=\\\"process == 'processing'\\\">Deleting<i class=\\\"fa fa-spinner fa-spin\\\"></i></span>\\n              </button>\\n          </div>\\n      </div>\\n\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9tYWludGVuYW5jZS9saXN0LWVuZ2luZS10eXBlbWFzdGVyL2xpc3QtZW5naW5lLXR5cGVtYXN0ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GetApiurl } from '../../../parameters';\nimport { MaintenanceService } from '../maintenance.service';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-list-engine-typemaster',\n  templateUrl: './list-engine-typemaster.component.html',\n  styleUrls: ['./list-engine-typemaster.component.scss']\n})\nexport class ListEngineTypemasterComponent implements OnInit {\n  public addButtonInfo: Object = { text: 'Add Engine Type Master', url: '/maintenance/add-engine-typemaster' };\n  public fetchUrl: string = GetApiurl('maintenance/engine-typemaster');\n  columns: Array<any> = [\n  ];\n  refreshRedTable: any;\n  dataRow: any;\n  process: string;\n\n  public modal_title: string;\n  public commonFilter: Object = {filterString: '', columnName: 'searchString', placeholder: 'Search by Engine Type'};\n  constructor(\n    private router: Router,\n    private ms: MaintenanceService\n  ) {\n    this.columns = [\n      { title: 'Engine Type', name: 'enginetype', sort: false },\n      { title: 'Actions', links: ['Edit', 'Delete'] }\n    ];\n  }\n\n  ngOnInit() {\n  }\n  linkClicked(event: any): any {\n    const data = event.data;\n\n    // console.log('list material', data);\n\n    this.dataRow = data;\n    if (event.data.action === 'Edit') {\n      this.router.navigate([`/maintenance/engine-typemaster/${this.dataRow['row']['_id']}/edit`]);\n    }\n    if (data.action === 'Delete') {\n      $('#deleteModal').modal('show');\n    }\n  }\n  public deleteRecord() {\n    this.process = 'processing';\n    this.deleteProject(this.dataRow['row']['_id']);\n  }\n  public deleteProject(index: number) {\n    this.ms.deleteEtm(index).subscribe(\n      ng2TableData => {\n        this.process = 'done';\n        $('#deleteModal').modal('hide');\n        this.refreshRedTable = { mode: 'delete', id: index };\n      }, // filter(row => row.id != index),\n      error => { console.log(error); }\n    );\n  }\n\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <app-smart-table [commonFilter]=\\\"commonFilter\\\" [addButtonInfo]=\\\"addButtonInfo\\\" [screenName]=\\\"'JOB WORK'\\\" [columns]=\\\"columns\\\" [fetchUrl]=\\\"fetchUrl\\\" [limit]=\\\"5\\\"\\n    [refreshRedTable]=\\\"refreshRedTable\\\" (event)=\\\"linkClicked($event)\\\">\\n  </app-smart-table>\\n</div>\\n<div class=\\\"modal fade\\\" role=\\\"dialog\\\" id=\\\"deleteModal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Delete</h4>\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n              <p>Are you sure you want to delete?</p>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n              <button type=\\\"button\\\" data-dismiss=\\\"modal\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n              <button type=\\\"button\\\" [disabled]=\\\"process =='processing'\\\" (click)=\\\"deleteRecord()\\\" class=\\\"actions-button btn btn-danger\\\">\\n                <span *ngIf=\\\"process !='processing'\\\">Delete</span>\\n                <span *ngIf=\\\"process == 'processing'\\\">Deleting<i class=\\\"fa fa-spinner fa-spin\\\"></i></span>\\n              </button>\\n          </div>\\n      </div>\\n\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9tYWludGVuYW5jZS9saXN0LWpvYi13b3JrL2xpc3Qtam9iLXdvcmsuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GetApiurl } from '../../../parameters';\nimport { MaintenanceService } from '../../maintenance/maintenance.service';\nimport { MetaService } from 'src/app/shared/services/meta.service';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-list-job-work',\n  templateUrl: './list-job-work.component.html',\n  styleUrls: ['./list-job-work.component.scss']\n})\nexport class ListJobWorkComponent implements OnInit {\n  public addButtonInfo: Object = { text: 'Add Job Work', url: '/maintenance/add-job-work' };\n  public fetchUrl: string = GetApiurl('maintenance/job-work');\n  columns: Array<any> = [\n  ];\n  refreshRedTable: any;\n  dataRow: any;\n  process: string;\n  usertype: any;\n  public modal_title: string;\n  public commonFilter: Object = {filterString: '', columnName: 'searchString', placeholder: 'Search by TruckNo, Vendor'};\n  constructor(\n    private router: Router,\n    public meta: MetaService,\n    private ms: MaintenanceService\n  ) {\n    this.usertype = this.meta.getSiteFromStorage().role;\n    console.log(' Usertype >>>  ', this.usertype);\n\n    if (this.usertype === 'ADMIN') {\n      this.columns = [\n        { title: 'Site', name: 'site', sort: false },\n        { title: 'Type', name: 'job_type', sort: false },\n        { title: 'Job No', name: 'job_number', sort: false },\n        { title: 'Job Date', name: 'job_date', sort: false },\n        { title: 'Truck No', name: 'truck_no', sort: false },\n        { title: 'Vendor', name: 'vendor', sort: false },\n        { title: 'User', name: 'user', sort: false },\n        { title: 'Actions', links: ['Edit', 'Delete'] }\n      ];\n    } else {\n      this.columns = [\n        { title: 'Site', name: 'site', sort: false },\n        { title: 'Type', name: 'job_type', sort: false },\n        { title: 'Job No', name: 'job_number', sort: false },\n        { title: 'Job Date', name: 'job_date', sort: false },\n        { title: 'Truck No', name: 'truck_no', sort: false },\n        { title: 'Vendor', name: 'vendor', sort: false },\n        { title: 'User', name: 'user', sort: false },\n        { title: 'Actions', links: ['Edit'] }\n      ];\n    }\n\n\n  }\n\n  ngOnInit() {\n  }\n  linkClicked(event: any): any {\n    const data = event.data;\n\n    // console.log('list material', data);\n\n    this.dataRow = data;\n    if (event.data.action === 'Edit') {\n      this.router.navigate([`/maintenance/job-work/${this.dataRow['row']['_id']}/edit`]);\n    }\n    if (data.action === 'Delete') {\n      $('#deleteModal').modal('show');\n    }\n  }\n\n  public deleteRecord() {\n    this.process = 'processing';\n    this.deleteProject(this.dataRow['row']['_id']);\n  }\n  public deleteProject(index: number) {\n    this.ms.deleteJobwork(index).subscribe(\n      ng2TableData => {\n        this.process = 'done';\n        $('#deleteModal').modal('hide');\n        this.refreshRedTable = { mode: 'delete', id: index };\n      }, // filter(row => row.id != index),\n      error => { console.log(error); }\n    );\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <app-smart-table [commonFilter]=\\\"commonFilter\\\" [addButtonInfo]=\\\"addButtonInfo\\\" [screenName]=\\\"'Job Work Master'\\\" [columns]=\\\"columns\\\" [fetchUrl]=\\\"fetchUrl\\\" [limit]=\\\"5\\\"\\n    [refreshRedTable]=\\\"refreshRedTable\\\" (event)=\\\"linkClicked($event)\\\">\\n  </app-smart-table>\\n</div>\\n<div class=\\\"modal fade\\\" role=\\\"dialog\\\" id=\\\"deleteModal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Delete Job Work Master</h4>\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n              <p>Are you sure you want to delete this Job Work Master?</p>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n              <button type=\\\"button\\\" data-dismiss=\\\"modal\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n              <button type=\\\"button\\\" [disabled]=\\\"process =='processing'\\\" (click)=\\\"deleteRecord()\\\" class=\\\"actions-button btn btn-danger\\\">\\n                <span *ngIf=\\\"process !='processing'\\\">Delete</span>\\n                <span *ngIf=\\\"process == 'processing'\\\">Deleting<i class=\\\"fa fa-spinner fa-spin\\\"></i></span>\\n              </button>\\n          </div>\\n      </div>\\n\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9tYWludGVuYW5jZS9saXN0LWpvYi13b3JrbWFzdGVyL2xpc3Qtam9iLXdvcmttYXN0ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GetApiurl } from '../../../parameters';\nimport { MaintenanceService } from '../maintenance.service';\nimport { MetaService } from 'src/app/shared/services/meta.service';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-list-job-workmaster',\n  templateUrl: './list-job-workmaster.component.html',\n  styleUrls: ['./list-job-workmaster.component.scss']\n})\nexport class ListJobWorkmasterComponent implements OnInit {\n\n  public addButtonInfo: Object = { text: 'Add Job-Work-Master', url: '/maintenance/add-job-workmaster' };\n  public fetchUrl: string = GetApiurl('maintenance/job-workmaster');\n  columns: Array<any> = [\n  ];\n  refreshRedTable: any;\n  dataRow: any;\n  usertype: any;\n  process: string;\n  public modal_title: string;\n  public commonFilter: Object = {filterString: '', columnName: 'searchString', placeholder: 'Search by Job Work Name'};\n  constructor(\n    private router: Router,\n    public meta: MetaService,\n    private ms: MaintenanceService\n  ) {\n    this.usertype = this.meta.getSiteFromStorage().role;\n    console.log(' Usertype >>>  ', this.usertype);\n\n    if (this.usertype === 'ADMIN') {\n      this.columns = [\n        { title: 'Name', name: 'jobworkname', sort: true },\n        { title: 'Actions', links: ['Edit', 'Delete'] }\n      ];\n    } else {\n      this.columns = [\n        { title: 'Name', name: 'jobworkname', sort: true },\n        { title: 'Actions', links: ['Edit'] }\n      ];\n    }\n\n  }\n\n  ngOnInit() {\n  }\n  linkClicked(event: any): any {\n    const data = event.data;\n    this.dataRow = data;\n    if (event.data.action === 'Edit') {\n      this.router.navigate([`/maintenance/job-workmaster/${this.dataRow['row']['_id']}/edit`]);\n    }\n    if (data.action === 'Delete') {\n      $('#deleteModal').modal('show');\n    }\n  }\n  public deleteRecord() {\n    this.process = 'processing';\n    this.deleteProject(this.dataRow['row']['_id']);\n  }\n  public deleteProject(index: number) {\n    this.ms.deleteJobworkmaster(index).subscribe(\n      ng2TableData => {\n        this.process = 'done';\n        $('#deleteModal').modal('hide');\n        this.refreshRedTable = { mode: 'delete', id: index };\n      }, // filter(row => row.id != index),\n      error => { console.log(error);\n      }\n    );\n  }\n\n\n}\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <ngb-tabset>\\r\\n      <ngb-tab>\\r\\n        <ng-template ngbTabTitle><b>Truck Maintenance</b></ng-template>\\r\\n        <ng-template ngbTabContent>\\r\\n          <p></p>\\r\\n          <h4>Pending Records</h4>\\r\\n          <table class=\\\"table mytable tableFixHead\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Sr No.</th>\\r\\n                <th>TA Name</th>\\r\\n                <th>Truck No</th>\\r\\n                <th>Particulars</th>\\r\\n                <th>TA Time</th>\\r\\n                <th>Assign To</th>\\r\\n                <th>Km Reading</th>\\r\\n                <th>Remarks</th>\\r\\n                <th>Actions</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngIf=\\\"flags.loadingTruckRecords\\\">\\r\\n                <td colspan=\\\"14\\\">\\r\\n                  <div class=\\\"showbox\\\">\\r\\n                    <div class=\\\"loader\\\">\\r\\n                      <svg class=\\\"circular\\\" viewBox=\\\"25 25 50 50\\\">\\r\\n                        <circle class=\\\"path\\\" cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"2\\\" stroke-miterlimit=\\\"10\\\" />\\r\\n                      </svg>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </td>\\r\\n              </tr>\\r\\n\\r\\n              <tr *ngFor=\\\"let td of truckData\\\">\\r\\n                <td>{{ td.srno }}</td>\\r\\n                <td>{{ td.taname }}</td>\\r\\n                <td>{{ td.truckno }}</td>\\r\\n                <td>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"td.particulars\\\" name=\\\"particular{{ td.srno }}\\\">\\r\\n                </td>\\r\\n                <td>{{ td.ta_time | date: \\\"dd/MM/yyyy HH:mm:ss\\\" }}</td>\\r\\n                <td><input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"td.assign_to\\\" name=\\\"assignTo{{ td.srno }}\\\"></td>\\r\\n                <td><input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"td.km_reading\\\" name=\\\"km_reading{{ td.srno }}\\\"></td>\\r\\n                <td><input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"td.remarks\\\" name=\\\"remarks{{ td.srno }}\\\"></td>\\r\\n                <td>\\r\\n                  <button class=\\\"btn btn-success\\\" (click)=\\\"acceptTruckRecord(td)\\\">Accept</button>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr *ngIf=\\\"flags.loadedTruckRecords && truckData.length === 0\\\">\\r\\n                <td align=\\\"center\\\" colspan=\\\"14\\\">No data available</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <p></p>\\r\\n          <hr>\\r\\n          <h4>Accepted Records</h4>\\r\\n          <table class=\\\"table mytable tableFixHead\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Sr No.</th>\\r\\n                <th>Truck No</th>\\r\\n                <th>Particulars </th>\\r\\n                <th>TA Time</th>\\r\\n                <th>Job Time</th>\\r\\n                <th>Hrs</th>\\r\\n                <th style=\\\"width: 15%;\\\">Status</th>\\r\\n                <th>Remarks</th>\\r\\n                <th>Actions</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngIf=\\\"flags.loadingAcceptedTruckRecords\\\">\\r\\n                <td colspan=\\\"14\\\">\\r\\n                  <div class=\\\"showbox\\\">\\r\\n                    <div class=\\\"loader\\\">\\r\\n                      <svg class=\\\"circular\\\" viewBox=\\\"25 25 50 50\\\">\\r\\n                        <circle class=\\\"path\\\" cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"2\\\" stroke-miterlimit=\\\"10\\\" />\\r\\n                      </svg>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr *ngFor=\\\"let td of truckAcceptedData\\\">\\r\\n                <td>{{ td.srno }}</td>\\r\\n                <td>{{ td.truckno }}</td>\\r\\n                <td>{{ td.particulars }}</td>\\r\\n                <td>{{ td.ta_time | date: \\\"dd/MM/yyyy HH:mm:ss\\\" }}</td>\\r\\n                <td>{{ td.job_time | date: \\\"dd/MM/yyyy HH:mm:ss\\\" }}</td>\\r\\n                <td>{{ td.countHrs.toFixed(2) }}</td>\\r\\n                <td>\\r\\n                  <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"td.status\\\" name=\\\"status{{td.srno}}\\\"> -->\\r\\n\\r\\n                  <select [(ngModel)]=\\\"td.status\\\" class=\\\"form-control\\\">\\r\\n                    <option value=\\\"\\\">Select Status</option>\\r\\n                    <option *ngFor=\\\"let s of statuses\\\"  value=\\\"{{ s.status }}\\\"> \\r\\n                      {{ s.status }}\\r\\n                    </option>\\r\\n                  </select>\\r\\n                </td>\\r\\n                <!-- <td>\\r\\n                  <div class=\\\"radio\\\">\\r\\n                    <label><input type=\\\"radio\\\" [(ngModel)]=\\\"td.status\\\" name=\\\"status{{td.srno}}\\\" value=\\\"Up\\\">Up</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"radio\\\">\\r\\n                    <label><input type=\\\"radio\\\" [(ngModel)]=\\\"td.status\\\" name=\\\"status{{td.srno}}\\\" value=\\\"Down\\\">Down</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"radio\\\">\\r\\n                    <label><input type=\\\"radio\\\" [(ngModel)]=\\\"td.status\\\" name=\\\"status{{td.srno}}\\\" value=\\\"No driver\\\">No</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"radio\\\">\\r\\n                    <label><input type=\\\"radio\\\" [(ngModel)]=\\\"td.status\\\" name=\\\"status{{td.srno}}\\\" value=\\\"Maintenance\\\">Maintenance</label>\\r\\n                  </div>\\r\\n                </td> -->\\r\\n                <td>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"td.remarks\\\" name=\\\"status{{ td.remarks }}\\\">\\r\\n                </td>\\r\\n                <td>\\r\\n                  <button class=\\\"btn btn-success\\\" (click)=\\\"updateTruckRecord(td)\\\">Update</button>&nbsp;&nbsp;\\r\\n                  <a [routerLink]=\\\"['/maintenance/job-list/', {srno: td.srno, truckno: td.truckno}]\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-warning\\\">Job Card</button></a><br><br>\\r\\n\\r\\n                  <a [routerLink]=\\\"['/maintenance/truck-history/', { truckno: td.truckno }]\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\">Truck History</button></a>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr *ngIf=\\\"flags.loadedAcceptedTruckRecords && truckAcceptedData.length === 0\\\">\\r\\n                <td align=\\\"center\\\" colspan=\\\"14\\\">No data available</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </ng-template>\\r\\n      </ngb-tab>\\r\\n      <ngb-tab>\\r\\n        <ng-template ngbTabTitle><b>Tyre Maintenance</b></ng-template>\\r\\n        <ng-template ngbTabContent>\\r\\n          <p></p>\\r\\n          <h4>Pending Records</h4>\\r\\n          <table class=\\\"table mytable tableFixHead\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Sr No.</th>\\r\\n                <th>TA Name</th>\\r\\n                <th>Truck No</th>\\r\\n                <th>Particulars </th>\\r\\n                <th>TA Time</th>\\r\\n                <th>Assign To</th>\\r\\n                <th>Km Reading</th>\\r\\n                <th>Remarks</th>\\r\\n                <th>Actions</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngIf=\\\"flags.loadingTyreRecords\\\">\\r\\n                <td colspan=\\\"14\\\">\\r\\n                  <div class=\\\"showbox\\\">\\r\\n                    <div class=\\\"loader\\\">\\r\\n                      <svg class=\\\"circular\\\" viewBox=\\\"25 25 50 50\\\">\\r\\n                        <circle class=\\\"path\\\" cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"2\\\" stroke-miterlimit=\\\"10\\\" />\\r\\n                      </svg>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr *ngFor=\\\"let td of tyreData\\\">\\r\\n                <td>{{ td.srno }}</td>\\r\\n                <td>{{ td.taname }}</td>\\r\\n                <td>{{ td.truckno }}</td>\\r\\n                <td><input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"td.particulars\\\" name=\\\"particular{{ td.srno }}\\\"></td>\\r\\n                <td>{{ td.ta_time | date: \\\"dd/MM/yyyy HH:mm:ss\\\" }}</td>\\r\\n                <td><input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"td.assign_to\\\" name=\\\"assignTo{{ td.srno }}\\\"></td>\\r\\n                <td><input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"td.km_reading\\\" name=\\\"km_reading{{ td.srno }}\\\"></td>\\r\\n                <td><input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"td.remarks\\\" name=\\\"remarks{{ td.srno }}\\\"></td>\\r\\n                <td>\\r\\n                  <button class=\\\"btn btn-success\\\" (click)=\\\"acceptTyreRecord(td)\\\">Accept</button>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr *ngIf=\\\"flags.loadedTyreRecords && tyreData.length === 0\\\">\\r\\n                <td align=\\\"center\\\" colspan=\\\"14\\\">No data available</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <p></p>\\r\\n          <hr>\\r\\n          <h4>Accepted Records</h4>\\r\\n          <table class=\\\"table mytable tableFixHead\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Sr No.</th>\\r\\n                <th>Truck No</th>\\r\\n                <th>Particulars </th>\\r\\n                <th>TA Time</th>\\r\\n                <th>Job Time</th>\\r\\n                <th>Hrs</th>\\r\\n                <th style=\\\"width: 15%;\\\">Status</th>\\r\\n                <th>Remarks</th>\\r\\n                <th>Actions</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngIf=\\\"flags.loadingAcceptedTyreRecords\\\">\\r\\n                <td colspan=\\\"14\\\">\\r\\n                  <div class=\\\"showbox\\\">\\r\\n                    <div class=\\\"loader\\\">\\r\\n                      <svg class=\\\"circular\\\" viewBox=\\\"25 25 50 50\\\">\\r\\n                        <circle class=\\\"path\\\" cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"2\\\" stroke-miterlimit=\\\"10\\\" />\\r\\n                      </svg>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr *ngFor=\\\"let td of tyreAcceptedData\\\">\\r\\n                <td>{{ td.srno }}</td>\\r\\n                <td>{{ td.truckno }}</td>\\r\\n                <td>{{ td.particulars }}</td>\\r\\n                <td>{{ td.ta_time | date: \\\"dd/MM/yyyy HH:mm:ss\\\" }}</td>\\r\\n                <td>{{ td.job_time | date: \\\"dd/MM/yyyy HH:mm:ss\\\" }}</td>\\r\\n                <td>{{ td.countHrs.toFixed(2) }}</td>\\r\\n                <td>\\r\\n                  <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"td.status\\\" name=\\\"status{{td.srno}}\\\"> -->\\r\\n\\r\\n                  <select [(ngModel)]=\\\"td.status\\\" class=\\\"form-control\\\">\\r\\n                    <option value=\\\"\\\">Select Status</option>\\r\\n                    <option *ngFor=\\\"let s of statuses\\\"  value=\\\"{{ s.status }}\\\"> \\r\\n                      {{ s.status }}\\r\\n                    </option>\\r\\n                  </select>\\r\\n                </td>\\r\\n                <!-- <td>\\r\\n                  <div class=\\\"radio\\\">\\r\\n                    <label><input type=\\\"radio\\\" [(ngModel)]=\\\"td.status\\\" name=\\\"status{{td.srno}}\\\" value=\\\"Up\\\">Up</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"radio\\\">\\r\\n                    <label><input type=\\\"radio\\\" [(ngModel)]=\\\"td.status\\\" name=\\\"status{{td.srno}}\\\" value=\\\"Down\\\">Down</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"radio\\\">\\r\\n                    <label><input type=\\\"radio\\\" [(ngModel)]=\\\"td.status\\\" name=\\\"status{{td.srno}}\\\" value=\\\"No driver\\\">No</label>\\r\\n                  </div>\\r\\n                  <div class=\\\"radio\\\">\\r\\n                    <label><input type=\\\"radio\\\" [(ngModel)]=\\\"td.status\\\" name=\\\"status{{td.srno}}\\\" value=\\\"Maintenance\\\">Maintenance</label>\\r\\n                  </div>\\r\\n                </td> -->\\r\\n                <td>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"td.remarks\\\" name=\\\"status{{ td.remarks }}\\\">\\r\\n                </td>\\r\\n                <td>\\r\\n                  <button class=\\\"btn btn-success\\\" (click)=\\\"updateTyreRecord(td)\\\">Update</button>&nbsp;&nbsp;\\r\\n                  <a [routerLink]=\\\"['/maintenance/job-list/', {srno: td.srno, truckno: td.truckno}]\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\">Job Card</button></a><br><br>\\r\\n\\r\\n                    <a [routerLink]=\\\"['/maintenance/truck-history/', { truckno: td.truckno }]\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-warning\\\">Truck History</button></a>\\r\\n                </td>                \\r\\n              </tr>\\r\\n              <tr *ngIf=\\\"flags.loadedAcceptedTyreRecords && tyreAcceptedData.length === 0\\\">\\r\\n                <td align=\\\"center\\\" colspan=\\\"14\\\">No data available</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </ng-template>\\r\\n      </ngb-tab>\\r\\n    </ngb-tabset>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9tYWludGVuYW5jZS9tYWludGVuYW5jZS1tYXN0ZXIvbWFpbnRlbmFuY2UtbWFzdGVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MaintenanceService } from 'src/app/shared/services/maintenance.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\ndeclare var moment:any\r\nimport * as momentTZ from 'moment-timezone';\r\n\r\n@Component({\r\n  selector: 'app-maintenance-master',\r\n  templateUrl: './maintenance-master.component.html',\r\n  styleUrls: ['./maintenance-master.component.scss']\r\n})\r\nexport class MaintenanceMasterComponent implements OnInit {\r\n\r\n  truckData = [];\r\n  truckAcceptedData = [];\r\n  tyreData = [];\r\n  tyreAcceptedData = [];\r\n\r\n  statuses = [\r\n    {status: 'Waiting for Spares'},\r\n    {status: 'Work in Progress'},\r\n    {status: 'Completed'},\r\n  ];\r\n\r\n  flags = {\r\n    loadingTruckRecords: true,\r\n    loadingAcceptedTruckRecords: true,\r\n    loadedTruckRecords: false,\r\n    loadedAcceptedTruckRecords: false,\r\n    loadingTyreRecords: true,\r\n    loadingAcceptedTyreRecords: true,\r\n    loadedTyreRecords: false,\r\n    loadedAcceptedTyreRecords: false,\r\n  };\r\n\r\n  constructor(\r\n    private maintenance: MaintenanceService,\r\n    private toastr: ToastrService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getTruckRecords();\r\n    this.getAcceptedTruckRecords();\r\n\r\n    this.getTyreRecords();\r\n    this.getAcceptedTyreRecords();\r\n  }\r\n\r\n  getTruckRecords() {\r\n    this.flags.loadingTruckRecords = true;\r\n    this.maintenance.getTruckRecords().subscribe((res: any) => {\r\n\r\n      res.result.forEach(r => {\r\n        r.editing = true;\r\n      });\r\n\r\n      this.truckData = res.result;\r\n      this.flags.loadingTruckRecords = false;\r\n      this.flags.loadedTruckRecords = true;\r\n    }, err => {\r\n      this.flags.loadingTruckRecords = false;\r\n      this.toastr.error('Something went wrong when loading Truck Maintenance Records.' , 'Error');\r\n    });\r\n  }\r\n\r\n  getAcceptedTruckRecords() {\r\n    this.flags.loadingAcceptedTruckRecords = true;\r\n    this.maintenance.getAcceptedTruckRecords().subscribe((res: any) => {\r\n\r\n      res.result.forEach(r => {\r\n        r.editing = true;\r\n        const now = moment(new Date()); // todays date\r\n        const end = r.job_time;\r\n        const duration = moment.duration(now.diff(end));\r\n        const hours = duration.asHours();\r\n        r.countHrs = hours;\r\n      });\r\n\r\n      console.log();\r\n      this.truckAcceptedData = res.result;\r\n      this.flags.loadingAcceptedTruckRecords = false;\r\n      this.flags.loadedAcceptedTruckRecords = true;\r\n    }, err => {\r\n      this.flags.loadingAcceptedTruckRecords = false;\r\n      this.toastr.error('Something went wrong when loading Accepted Truck Maintenance Records.' , 'Error');\r\n    });\r\n  }\r\n\r\n  getTyreRecords() {\r\n    this.flags.loadingTyreRecords = true;\r\n    this.maintenance.getTyreRecords().subscribe((res: any) => {\r\n\r\n      res.result.forEach(r => {\r\n        r.editing = true;\r\n      });\r\n\r\n      this.tyreData = res.result;\r\n      this.flags.loadingTyreRecords = false;\r\n      this.flags.loadedTyreRecords = true;\r\n    }, err => {\r\n      this.flags.loadingTyreRecords = false;\r\n      this.toastr.error('Something went wrong when loading Truck Maintenance Records.' , 'Error');\r\n    });\r\n  }\r\n\r\n  getAcceptedTyreRecords() {\r\n    this.flags.loadingAcceptedTyreRecords = true;\r\n    this.maintenance.getAcceptedTyreRecords().subscribe((res: any) => {\r\n\r\n      res.result.forEach(r => {\r\n        r.editing = true;\r\n        const now = moment(new Date()); // todays date\r\n        const end = r.job_time;\r\n        const duration = moment.duration(now.diff(end));\r\n        const hours = duration.asHours();\r\n        r.countHrs = hours;\r\n      });\r\n\r\n      this.tyreAcceptedData = res.result;\r\n      this.flags.loadingAcceptedTyreRecords = false;\r\n      this.flags.loadedAcceptedTyreRecords = true;\r\n    }, err => {\r\n      this.flags.loadingAcceptedTyreRecords = false;\r\n      this.toastr.error('Something went wrong when loading Accepted Truck Maintenance Records.' , 'Error');\r\n    });\r\n  }\r\n\r\n  /** Actions and edits code below */\r\n  acceptTruckRecord(td) {\r\n    const data = {\r\n      particulars: td.particulars,\r\n      assign_to: td.assign_to,\r\n      km_reading: td.km_reading,\r\n      remarks: td.remarks\r\n    };\r\n\r\n    this.maintenance.acceptTruckData(td.id, data).subscribe(res => {\r\n      this.getTruckRecords();\r\n      this.getAcceptedTruckRecords();\r\n    }, err => {\r\n      this.toastr.error('Something went wrong when accepting truck maintenance record.' , 'Error');\r\n    });\r\n  }\r\n\r\n  acceptTyreRecord(td) {\r\n    const data = {\r\n      particulars: td.particulars,\r\n      assign_to: td.assign_to,\r\n      km_reading: td.km_reading,\r\n      remarks: td.remarks\r\n    };\r\n\r\n    this.maintenance.acceptTyreData(td.id, data).subscribe(res => {\r\n      this.getTyreRecords();\r\n      this.getAcceptedTyreRecords();\r\n    }, err => {\r\n      this.toastr.error('Something went wrong when accepting tyre maintenance record.' , 'Error');\r\n    });\r\n  }\r\n\r\n  updateTruckRecord(td) {\r\n    const data = {\r\n      id: td.id,\r\n      status: td.status,\r\n      remarks: td.remarks\r\n    };\r\n\r\n    this.maintenance.updateAcceptedTruck(data).subscribe(res => {\r\n      this.getTyreRecords();\r\n      this.getAcceptedTyreRecords();\r\n    }, err => {\r\n      this.toastr.error('Something went wrong when accepting tyre maintenance record.' , 'Error');\r\n    });\r\n  }\r\n\r\n  updateTyreRecord(td) {\r\n    const data = {\r\n      id: td.id,\r\n      status: td.status,\r\n      remarks: td.remarks\r\n    };\r\n\r\n    this.maintenance.updateAcceptedTyre(data).subscribe(res => {\r\n      this.getTyreRecords();\r\n      this.getAcceptedTyreRecords();\r\n    }, err => {\r\n      this.toastr.error('Something went wrong when accepting tyre maintenance record.' , 'Error');\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MaintenanceMasterComponent } from './maintenance-master/maintenance-master.component';\r\nimport { VendorMasterComponent } from './vendor-master/vendor-master.component';\r\nimport { JobCardComponent } from './job-card/job-card.component';\r\nimport { JobListComponent } from './job-list/job-list.component';\r\nimport { TruckHistoryComponent } from './truck-history/truck-history.component';\r\n// Job-workmaster\r\nimport { AddJobWorkmasterComponent } from './add-job-workmaster/add-job-workmaster.component';\r\nimport { EditJobWorkmasterComponent } from './edit-job-workmaster/edit-job-workmaster.component';\r\nimport { ListJobWorkmasterComponent } from './list-job-workmaster/list-job-workmaster.component';\r\nimport { JobworkmasterReslover } from './jobworkmaster-reslover';\r\n// Job-work\r\nimport { AddJobWorkComponent } from './add-job-work/add-job-work.component';\r\nimport { EditJobWorkComponent } from './edit-job-work/edit-job-work.component';\r\nimport { ListJobWorkComponent } from './list-job-work/list-job-work.component';\r\nimport { JobworkReslover } from './jobwork-reslover';\r\n// dashbaord\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\n// engine type master\r\nimport { AddEngineTypemasterComponent } from './add-engine-typemaster/add-engine-typemaster.component';\r\nimport { EditEngineTypemasterComponent } from './edit-engine-typemaster/edit-engine-typemaster.component';\r\nimport { ListEngineTypemasterComponent } from './list-engine-typemaster/list-engine-typemaster.component';\r\nimport { EnginetypemasterReslover } from './enginetypemaster-reslover';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: 'maintenance-master', pathMatch: 'prefix' },\r\n    {path: 'maintenance-master', component: MaintenanceMasterComponent},\r\n    {path: 'vendor-master', component: VendorMasterComponent},\r\n    // job workmaster\r\n    {path: 'job-workmaster', component: ListJobWorkmasterComponent},\r\n    {path: 'job-workmaster/:id/edit', component: EditJobWorkmasterComponent, resolve: { jwm_details: JobworkmasterReslover }},\r\n    {path: 'add-job-workmaster', component: AddJobWorkmasterComponent},\r\n    // job work\r\n    {path: 'job-work', component: ListJobWorkComponent},\r\n    {path: 'job-work/:id/edit', component: EditJobWorkComponent, resolve: { jw_details: JobworkReslover }},\r\n    {path: 'add-job-work', component: AddJobWorkComponent},\r\n\r\n    {path: 'job-card', component: JobCardComponent},\r\n    {path: 'job-list', component: JobListComponent},\r\n    {path: 'truck-history', component: TruckHistoryComponent},\r\n    // dashboard\r\n    {path: 'dashboard', component: DashboardComponent},\r\n    // engine typemaster\r\n    {path: 'engine-typemaster', component: ListEngineTypemasterComponent},\r\n    {path: 'engine-typemaster/:id/edit', component: EditEngineTypemasterComponent, resolve: { etm_details: EnginetypemasterReslover }},\r\n    {path: 'add-engine-typemaster', component: AddEngineTypemasterComponent}\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class MaintenanceRoutingModule { }\r\n\r\n\r\n// ng g component layout/admin-privileges/components/PlantsRateList BilltyModule\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaintenanceMasterComponent } from './maintenance-master/maintenance-master.component';\r\nimport { MaintenanceRoutingModule } from './maintenance-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { Ng2AutoCompleteModule } from 'ng2-auto-complete';\r\nimport { VendorMasterComponent } from './vendor-master/vendor-master.component';\r\nimport { JobCardComponent } from './job-card/job-card.component';\r\nimport { JobListComponent } from './job-list/job-list.component';\r\nimport { VendorMasterEditComponent } from './vendor-master-edit/vendor-master-edit.component';\r\nimport { TruckHistoryComponent } from './truck-history/truck-history.component';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n// job workmaster\r\nimport { AddJobWorkmasterComponent } from './add-job-workmaster/add-job-workmaster.component';\r\nimport { EditJobWorkmasterComponent } from './edit-job-workmaster/edit-job-workmaster.component';\r\nimport { ListJobWorkmasterComponent } from './list-job-workmaster/list-job-workmaster.component';\r\nimport { JobworkmasterReslover } from './jobworkmaster-reslover';\r\n// job work\r\nimport { AddJobWorkComponent } from './add-job-work/add-job-work.component';\r\nimport { EditJobWorkComponent } from './edit-job-work/edit-job-work.component';\r\nimport { ListJobWorkComponent } from './list-job-work/list-job-work.component';\r\nimport { JobworkReslover } from './jobwork-reslover';\r\n// dashboard\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\n// engine type master\r\nimport { AddEngineTypemasterComponent } from './add-engine-typemaster/add-engine-typemaster.component';\r\nimport { EditEngineTypemasterComponent } from './edit-engine-typemaster/edit-engine-typemaster.component';\r\nimport { ListEngineTypemasterComponent } from './list-engine-typemaster/list-engine-typemaster.component';\r\nimport { EnginetypemasterReslover } from './enginetypemaster-reslover';\r\n@NgModule({\r\n  declarations: [\r\n    MaintenanceMasterComponent,\r\n    JobCardComponent,\r\n    JobListComponent,\r\n    VendorMasterComponent,\r\n    VendorMasterEditComponent,\r\n    TruckHistoryComponent,\r\n    // job workmaster\r\n    AddJobWorkmasterComponent,\r\n    EditJobWorkmasterComponent,\r\n    ListJobWorkmasterComponent,\r\n    // job work\r\n    AddJobWorkComponent,\r\n    EditJobWorkComponent,\r\n    ListJobWorkComponent,\r\n    // dashboard\r\n    DashboardComponent,\r\n    // engine type master\r\n    AddEngineTypemasterComponent,\r\n    EditEngineTypemasterComponent,\r\n    ListEngineTypemasterComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    CommonModule,\r\n    MaintenanceRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    Ng2AutoCompleteModule,\r\n  ],\r\n  entryComponents: [\r\n    VendorMasterEditComponent\r\n  ],\r\n  providers: [\r\n    JobworkmasterReslover,\r\n    JobworkReslover,\r\n    EnginetypemasterReslover\r\n  ]\r\n\r\n})\r\nexport class MaintenanceModule { }\r\n","import { Injectable } from '@angular/core';\nimport { ApiService } from 'src/app/shared/services/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MaintenanceService {\n\n  constructor(public api: ApiService) { }\n\n\n  // job-workmaster\n  crateJobworkmaster(data) {\n    return this.api.post('maintenance/job-workmaster', data);\n  }\n  getJobworkmaster(id) {\n    return this.api.get('maintenance/job-workmaster/' + id);\n  }\n  updatJobworkmaster(id, data) {\n    return this.api.put('maintenance/job-workmaster?id=' + id, data);\n  }\n\n  deleteJobworkmaster(id) {\n    return this.api.delete(`maintenance/job-workmaster/${id}`);\n  }\n\n  // job-work\n  crateJobwork(data) {\n    return this.api.post('maintenance/job-work', data);\n  }\n  getJobwork(id) {\n    return this.api.get('maintenance/job-work/' + id);\n  }\n  updatJobwork(id, data) {\n    return this.api.put('maintenance/job-work?id=' + id, data);\n  }\n\n  deleteJobwork(id) {\n    return this.api.delete(`maintenance/job-work/${id}`);\n  }\n\n  getJobNumberDetails(data) {\n    return this.api.post('maintenance/job-work/generate_job_number', data);\n\n  }\n\n  getVendorMasterList() {\n    return this.api.get('vendor_master/list');\n  }\n\n  getOverAllData() {\n    return this.api.get('maintenance/reminders/first_screen');\n  }\n\n  getDetails() {\n    return this.api.get('maintenance/reminders/second_screen');\n  }\n\n  getExpiredAllTrucksDetails() {\n    return this.api.get('maintenance/reminders/second_screen_expired');\n  }\n\n  updateAttachements(data) {\n    return this.api.put('maintenance/reminders/update', data);\n  }\n  // engine-typemaster\n  crateEtm(data) {\n    return this.api.post('maintenance/engine-typemaster', data);\n  }\n  getEtm(id) {\n    return this.api.get('maintenance/engine-typemaster/' + id);\n  }\n  updatEtm(id, data) {\n    return this.api.put('maintenance/engine-typemaster?id=' + id, data);\n  }\n\n  deleteEtm(id) {\n    return this.api.delete(`maintenance/engine-typemaster/${id}`);\n  }\n\n}\n","module.exports = \"\\r\\n\\r\\n<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      <strong>Truck History</strong>\\r\\n    </div>\\r\\n    <br>\\r\\n    <b>&nbsp;Truck NO : #{{ truckno }}</b>\\r\\n    <br>\\r\\n    <div class=\\\"animated fadeIn\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-body\\\">\\r\\n                  <!-- tableFixHead mytable -->\\r\\n                  <table class=\\\"table\\\">\\r\\n                      <thead>\\r\\n                        <tr>\\r\\n                          <th>Job No</th>\\r\\n                          <th width=\\\"15%\\\">Date</th>\\r\\n                          <th>Sr No</th>\\r\\n                          <th>KM Reading</th>\\r\\n                          <th>Work Be Done</th>\\r\\n                          <th>Remarks</th>\\r\\n                          <th>Qty</th>\\r\\n                          <th>Scrap Qty</th>\\r\\n                          <th>Next Due KM</th>\\r\\n                          <th>Rate</th>\\r\\n                          <th>GST</th>\\r\\n                          <th>Amount</th>\\r\\n                          <th>Vendor Name</th>\\r\\n                        \\r\\n                        </tr>\\r\\n                      </thead>\\r\\n                      <tbody>\\r\\n                        <tr *ngFor= \\\"let truck of truckHistory; let i = index\\\">\\r\\n                            <!-- <a [routerLink]=\\\"['/admin-privileges/plants-rate-multiple-destination', truck.site]\\\"> -->\\r\\n                          <td>{{truck.jobno ? truck.jobno : '--'}}</td>\\r\\n                          <td>{{truck.date ? truck.date : '--'}}</td>\\r\\n                          <td>{{truck.srno ? truck.srno : '--'}}</td>\\r\\n                          <td>{{truck.km_reading ? truck.km_reading : '--'}}</td>\\r\\n                          <td>{{truck.work_be_done ? truck.work_be_done : '--'}}</td>\\r\\n                          <td>{{truck.remarks ? truck.remarks : '--'}}</td>\\r\\n                          <td>{{truck.qty ? truck.qty : '--'}}</td>\\r\\n                          <td>{{truck.scrap_qty ? truck.scrap_qty : '--'}}</td>\\r\\n                          <td>{{truck.next_due_km ? truck.next_due_km : '--'}}</td>\\r\\n                          <td>{{truck.rate ? truck.rate : '--'}}</td>\\r\\n                          <td>{{truck.gst ? truck.gst : '--'}}</td>\\r\\n                          <td>{{truck.amount ? truck.amount : '--'}}</td>\\r\\n                          <td>{{truck.vendor_name ? truck.vendor_name : '--'}}</td>\\r\\n\\r\\n\\r\\n\\r\\n                          <!-- <td><button class=\\\"btn btn-primary\\\" (click)=\\\"edit(user)\\\"><i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i> Edit</button>&nbsp;</td>\\r\\n                          <td>\\r\\n                            <button class=\\\"btn btn-danger\\\" (click)=\\\"delete(user, i)\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i> Delete</button>\\r\\n                          </td> -->\\r\\n                        </tr>\\r\\n                      </tbody>\\r\\n                      <tbody>\\r\\n                          <tr>\\r\\n                              <td [colSpan]=10></td>\\r\\n                              <td><b>Total</b></td>\\r\\n                              <td>{{ total_amount ? total_amount : \\\"0\\\" }}</td>\\r\\n                          </tr>\\r\\n                      </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9tYWludGVuYW5jZS90cnVjay1oaXN0b3J5L3RydWNrLWhpc3RvcnkuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MaintenanceService } from 'src/app/shared/services/maintenance.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgbModal, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { routerTransition } from 'src/app/router.animations';\r\ndeclare var moment: any\r\nimport { Observable } from 'rxjs';\r\nimport * as momentTZ from 'moment-timezone';\r\n\r\n\r\n@Component({\r\n  selector: 'app-truck-history',\r\n  templateUrl: './truck-history.component.html',\r\n  styleUrls: ['./truck-history.component.scss']\r\n})\r\nexport class TruckHistoryComponent implements OnInit {\r\n\r\n  truckno:  number;\r\n  truckHistory: any = [];\r\n  total_amount:  number;\r\n\r\n  constructor(\r\n    private maintenance: MaintenanceService,\r\n    private toastr: ToastrService,\r\n    public activedRoute: ActivatedRoute,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.activedRoute.params.subscribe(params => {\r\n      this.truckno = params.truckno;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getTruckHistory();\r\n  }\r\n\r\n  getTruckHistory() {\r\n\r\n    this.maintenance.getTruckHistory(this.truckno).subscribe((res: any) => {\r\n      // this.truckHistory = res.result;\r\n      res.result.forEach(element => {\r\n        element.date = moment(element.date).format('YYYY-MM-DD');\r\n        this.truckHistory.push(element);\r\n      });\r\n      this.total_amount = res.total;\r\n      console.log('truckHistory  >>>', this.truckHistory);\r\n    }, err => {\r\n      this.toastr.error('Something went wrong when loading Truck Job Card History.' , 'Error');\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\">Vendor Master Edit</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.close('Cross click')\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div>\\r\\n  <form [formGroup]=\\\"editForm\\\">\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"required\\\">Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"required\\\">Address</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"required\\\">Location</label>\\r\\n            <input class=\\\"form-control\\\" ng2-auto-complete formControlName=\\\"location\\\" [source]=\\\"getLocation.bind(this)\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"required\\\">State</label>\\r\\n          <ng-select [items]=\\\"state_option\\\" placeholder=\\\"State\\\" bindLabel=\\\"statename\\\" bindValue=\\\"statename\\\"\\r\\n            formControlName=\\\"statename\\\">\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"required\\\">Vendor Type</label>\\r\\n            <input class=\\\"form-control\\\" ng2-auto-complete formControlName=\\\"vendor_type\\\" [source]=\\\"getVendorType.bind(this)\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"required\\\">Specialized in</label>\\r\\n            <input class=\\\"form-control\\\" ng2-auto-complete formControlName=\\\"specialized_in\\\" [source]=\\\"getSpecializedIn.bind(this)\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Mobile No</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"mobile_no\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Email</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Contact Person</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contact_person\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>GST No</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"gst_no\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Condition if Any</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"condition\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Remarks</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"remarks\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Ratings</label>\\r\\n            <br />\\r\\n            <ngb-rating [(rate)]=\\\"currentRate\\\"></ngb-rating>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" (click)=\\\"update()\\\" class=\\\"btn btn-success\\\">Update</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9tYWludGVuYW5jZS92ZW5kb3ItbWFzdGVyLWVkaXQvdmVuZG9yLW1hc3Rlci1lZGl0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NgbActiveModal, NgbRatingConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { MaintenanceService } from 'src/app/shared/services/maintenance.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { MetaService } from 'src/app/shared/services/meta.service';\r\n\r\n@Component({\r\n  selector: 'app-vendor-master-edit',\r\n  templateUrl: './vendor-master-edit.component.html',\r\n  styleUrls: ['./vendor-master-edit.component.scss']\r\n})\r\nexport class VendorMasterEditComponent implements OnInit {\r\n\r\n  @Input() data;\r\n\r\n  editForm: FormGroup;\r\n  public state_option: any;\r\n  vendor_types = [\r\n    {vendor_type: 'Supplier'},\r\n    {vendor_type: 'Mistri'}\r\n  ];\r\n  currentRate: number = 0;\r\n\r\n  constructor(\r\n    public activeModal: NgbActiveModal,\r\n    public fb: FormBuilder,\r\n    public maintenanceService: MaintenanceService,\r\n    public toastr: ToastrService,\r\n    private metaService: MetaService,\r\n    config: NgbRatingConfig\r\n  ) {\r\n    config.max = 5;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.editForm = this.fb.group({\r\n      name: [''],\r\n      address: [''],\r\n      location: [''],\r\n      vendor_type: [''],\r\n      specialized_in: [''],\r\n      mobile_no: [''],\r\n      email: [''],\r\n      contact_person: [''],\r\n      gst_no: [''],\r\n      condition: [''],\r\n      statename: [''],\r\n      remarks: ['']\r\n    });\r\n\r\n    // console.log(\">>>>this.data\", this.data);\r\n\r\n    this.editForm.controls['name'].setValue(this.data.name);\r\n    this.editForm.controls['address'].setValue(this.data.address);\r\n    this.editForm.controls['location'].setValue(this.data.location);\r\n    this.editForm.controls['vendor_type'].setValue(this.data.vendor_type);\r\n    this.editForm.controls['specialized_in'].setValue(this.data.specialized_in);\r\n    this.editForm.controls['mobile_no'].setValue(this.data.mobile_no);\r\n    this.editForm.controls['email'].setValue(this.data.email);\r\n    this.editForm.controls['contact_person'].setValue(this.data.contact_person);\r\n    this.editForm.controls['gst_no'].setValue(this.data.gst_no);\r\n    this.editForm.controls['condition'].setValue(this.data.condition);\r\n    this.editForm.controls['statename'].setValue(this.data.statename);\r\n    this.editForm.controls['remarks'].setValue(this.data.remarks);\r\n    this.currentRate = this.data.rating;\r\n\r\n    this.getOptions();\r\n\r\n  }\r\n\r\n  private getOptions() {\r\n\r\n    this.metaService.getStateList().subscribe(trackInfo => {\r\n      this.state_option = trackInfo['result'];\r\n      console.log('>>>>StateIndia', trackInfo['result']);\r\n\r\n    });\r\n  }\r\n\r\n  getSpecializedIn = (keyword: any): Observable<any[]> => {\r\n    if (keyword) {\r\n      return this.maintenanceService.getSpecializedIn(keyword).map((res: any) => {\r\n        // console.log(\">>>>res\", res);\r\n        return res.result;\r\n      });\r\n    } else {\r\n      return Observable.of([]);\r\n    }\r\n  }\r\n\r\n  getLocation = (keyword: any): Observable<any[]> => {\r\n    if (keyword) {\r\n      return this.maintenanceService.getLocations(keyword).map((res: any) => {\r\n        // console.log(\">>>>res\", res);\r\n        return res.result;\r\n      });\r\n    } else {\r\n      return Observable.of([]);\r\n    }\r\n  }\r\n\r\n  getVendorType = (keyword: any): Observable<any[]> => {\r\n    if (keyword) {\r\n      return this.maintenanceService.getVendorType(keyword).map((res: any) => {\r\n        // console.log(\">>>>res\", res);\r\n        return res.result;\r\n      });\r\n    } else {\r\n      return Observable.of([]);\r\n    }\r\n  }\r\n\r\n\r\n  update() {\r\n    const getFromData = this.editForm.value;\r\n    getFromData.rating = this.currentRate;\r\n    getFromData._id = this.data._id;\r\n\r\n    console.log('FromData >>>>', getFromData);\r\n    this.maintenanceService.updateVendorMaster(getFromData).subscribe(res => {\r\n      this.activeModal.close({result: 'success'});\r\n      this.toastr.success('Vendor Master updated successfully.');\r\n    }, err => {\r\n      this.activeModal.close({result: 'success'});\r\n      console.log('err   >>>', err);\r\n      this.toastr.error('Something went wrong when adding!');\r\n    });\r\n}\r\n\r\n}\r\n\r\n","module.exports = \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <strong>Vendor Master</strong>\\r\\n  </div>\\r\\n  <form [formGroup]=\\\"addForm\\\">\\r\\n\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"required\\\" >Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"required\\\" >Address</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"required\\\">Location</label>\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            ng2-auto-complete\\r\\n            formControlName=\\\"location\\\"\\r\\n            [source]=\\\"getLocation.bind(this)\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"required\\\">State</label>\\r\\n          <ng-select [items]=\\\"state_option\\\" placeholder=\\\"State\\\" bindLabel=\\\"statename\\\" bindValue=\\\"statename\\\"\\r\\n            formControlName=\\\"statename\\\">\\r\\n          </ng-select>\\r\\n        </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"required\\\">Vendor Type</label>\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            ng2-auto-complete\\r\\n            formControlName=\\\"vendor_type\\\"\\r\\n            [source]=\\\"getVendorType.bind(this)\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"required\\\">Specialized in</label>\\r\\n            <input\\r\\n            class=\\\"form-control\\\"\\r\\n            ng2-auto-complete\\r\\n            formControlName=\\\"specialized_in\\\"\\r\\n            [source]=\\\"getSpecializedIn.bind(this)\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"required\\\">Mobile No</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"mobile_no\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Email</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Contact Person</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"contact_person\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>GST No</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"gst_no\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Condition if Any</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"condition\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Remarks</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"remarks\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Ratings</label>\\r\\n            <br>\\r\\n            <ngb-rating [(rate)]=\\\"currentRate\\\"></ngb-rating>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!addForm.valid || process == 'saving'\\\" class=\\\"btn btn-success\\\">Save</button>\\r\\n    </div> -->\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button class=\\\"btn btn-success float-right\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!addForm.valid || process == 'saving'\\\" type=\\\"button\\\">\\r\\n        Save <i *ngIf=\\\"process == 'saving'\\\" class=\\\"fa fa-spinner fa-spin\\\"></i>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <strong>Vendor Master List</strong>\\r\\n    \\r\\n  </div>\\r\\n  <!-- formControlName=\\\"vendor_name\\\" -->\\r\\n  <br>\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-7\\\">\\r\\n      </div>\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n        <label>&nbsp;Search Vendor :</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n        <input [(ngModel)]=\\\"text_filter\\\" class=\\\"form-control\\\" \\r\\n        (input)=\\\"filterVendorNameData()\\\" name=\\\"search\\\" placeholder=\\\"Search Vendor Name\\\">\\r\\n      </div>\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"card-body\\\">\\r\\n    <table class=\\\"table tableFixHead mytable\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>Name</th>\\r\\n          <th>State</th>\\r\\n          <th>Vendor Type</th>\\r\\n          <th>Mobile No.</th>\\r\\n          <th>Email</th>\\r\\n          <th>Actions</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let list of filteredData; let i = index\\\">\\r\\n          <td>{{list.name ? list.name : '--'}}</td>\\r\\n          <td>{{list.statename ? list.statename : '--'}}</td>\\r\\n          <td>{{list.vendor_type ? list.vendor_type : '--'}}</td>\\r\\n          <td>{{ list.mobile_no ? list.mobile_no : '--' }}</td>\\r\\n          <td>{{ list.email ? list.email : '--' }}</td>\\r\\n          <td>\\r\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"edit(list)\\\">Edit</button>&nbsp;&nbsp;\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"vendor_master_list.length === 0\\\">\\r\\n          <td colspan=\\\"12\\\">No data found yet!</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n            \\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9tYWludGVuYW5jZS92ZW5kb3ItbWFzdGVyL3ZlbmRvci1tYXN0ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { MaintenanceService } from 'src/app/shared/services/maintenance.service';\r\nimport { NgbModal, NgbDateStruct, NgbRatingConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { routerTransition } from 'src/app/router.animations';\r\nimport { Observable } from 'rxjs';\r\nimport { VendorMasterEditComponent } from '../vendor-master-edit/vendor-master-edit.component';\r\nimport { MetaService } from 'src/app/shared/services/meta.service';\r\n\r\n  // <button class=\"btn btn-danger\" (click)=\"deleteVendor(list)\">Delete</button>\r\n\r\n@Component({\r\n  selector: 'app-vendor-master',\r\n  templateUrl: './vendor-master.component.html',\r\n  styleUrls: ['./vendor-master.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\n\r\n\r\nexport class VendorMasterComponent implements OnInit {\r\n\r\n  addForm: FormGroup;\r\n  public process: string;\r\n  public state_option: any;\r\n  vendor_types = [\r\n    {vendor_type: 'Supplier'},\r\n    {vendor_type: 'Mistri'}\r\n  ];\r\n\r\n  currentRate = 0;\r\n  vendor_master_list = [];\r\n  filterKeys: string[] = ['name'];\r\n  filteredData = [];\r\n  text_filter = '';\r\n\r\n  constructor(\r\n    public maintenanceService: MaintenanceService,\r\n    private formBuilder: FormBuilder,\r\n    public toastr: ToastrService,\r\n    private modalService: NgbModal,\r\n    private metaService: MetaService,\r\n    config: NgbRatingConfig,\r\n  ) {\r\n    config.max = 5;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.addForm = this.formBuilder.group({\r\n      name: [''],\r\n      address: [''],\r\n      location: [''],\r\n      vendor_type: [''],\r\n      specialized_in: [''],\r\n      mobile_no: [''],\r\n      email: [''],\r\n      contact_person: [''],\r\n      gst_no: [''],\r\n      condition: [''],\r\n      statename: [''],\r\n      remarks: ['']\r\n    });\r\n\r\n    this.getOptions();\r\n  }\r\n\r\n  private getOptions() {\r\n\r\n    this.maintenanceService.getVendorMasterList().subscribe((res: any) => {\r\n      console.log('>>>>res', res);\r\n      this.vendor_master_list = res.result;\r\n      this.filterVendorNameData();\r\n    }, err => {\r\n      console.log('err   >>>', err);\r\n    });\r\n\r\n    this.metaService.getStateList().subscribe(trackInfo => {\r\n      this.state_option = trackInfo['result'];\r\n      console.log('>>>>StateIndia', trackInfo['result']);\r\n\r\n    });\r\n  }\r\n\r\n  edit(record) {\r\n    console.log('edit>>>>>', record);\r\n    const modalRef = this.modalService.open(VendorMasterEditComponent);\r\n    modalRef.componentInstance.data = record;\r\n\r\n    modalRef.result.then((result) => {\r\n      if (result) {\r\n        this.getOptions();\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteVendor(data) {\r\n    const conf = confirm('Are you sure you want to delete this vendor ?');\r\n\r\n    if (conf === true) {\r\n      this.maintenanceService.deleteVendor(data._id).subscribe((res: any) => {\r\n        this.toastr.success('Vendor Master deleted successfully.');\r\n        this.getOptions();\r\n      }, err => {\r\n        console.log('err   >>>', err);\r\n        this.toastr.error('Something went wrong when deleting vendor!');\r\n      });\r\n    }\r\n  }\r\n\r\n  getSpecializedIn = (keyword: any): Observable<any[]> => {\r\n    if (keyword) {\r\n      return this.maintenanceService.getSpecializedIn(keyword).map((res: any) => {\r\n        console.log('>>>>res', res);\r\n        return res.result;\r\n      });\r\n    } else {\r\n      return Observable.of([]);\r\n    }\r\n  }\r\n\r\n  getLocation = (keyword: any): Observable<any[]> => {\r\n    if (keyword) {\r\n      return this.maintenanceService.getLocations(keyword).map((res: any) => {\r\n        console.log('>>>>res', res);\r\n        return res.result;\r\n      });\r\n    } else {\r\n      return Observable.of([]);\r\n    }\r\n  }\r\n\r\n  getVendorType = (keyword: any): Observable<any[]> => {\r\n    if (keyword) {\r\n      return this.maintenanceService.getVendorType(keyword).map((res: any) => {\r\n        console.log('>>>>res', res);\r\n        return res.result;\r\n      });\r\n    } else {\r\n      return Observable.of([]);\r\n    }\r\n  }\r\n\r\n  // Search query for work to be done List\r\n  // vendorName = (keyword: any): Observable<any[]> => {\r\n  //   if (keyword) {\r\n  //     return  this.maintenanceService.getVendorNameList(keyword)\r\n  //       .map((res: any) => {\r\n  //         return res;\r\n  //       });\r\n  //   } else {\r\n  //     return Observable.of([]);\r\n  //   }\r\n  // }\r\n\r\n\r\n  filterVendorNameData(): void {\r\n    if (this.text_filter !== '') {\r\n      this.filteredData = this.vendor_master_list.filter(obj =>\r\n        this.filterKeys.some(propertyName =>\r\n          obj[propertyName].toString().toLowerCase().includes(this.text_filter.toLowerCase())));\r\n    } else {\r\n      this.filteredData = this.vendor_master_list;\r\n    }\r\n  }\r\n\r\n\r\n  submit() {\r\n    const getFromData = this.addForm.value;\r\n    getFromData.rating = this.currentRate;\r\n\r\n    console.log('FromData >>>>', getFromData);\r\n    this.maintenanceService.addVendorMasterData(getFromData).subscribe(res => {\r\n      this.addForm.reset();\r\n      this.getOptions();\r\n      this.toastr.success('Vendor Master Added successfully.');\r\n    }, err => {\r\n      console.log('err   >>>', err);\r\n      this.toastr.error('Something went wrong when adding!');\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}