{"version":3,"sources":["webpack:///./src/app/layout/accounts/accounts-routing.module.ts","webpack:///./src/app/layout/accounts/accounts.component.html","webpack:///./src/app/layout/accounts/accounts.component.scss","webpack:///./src/app/layout/accounts/accounts.component.ts","webpack:///./src/app/layout/accounts/accounts.module.ts","webpack:///./src/app/layout/accounts/accounts.service.ts","webpack:///./src/app/layout/accounts/components/account-transaction/account-transaction.component.html","webpack:///./src/app/layout/accounts/components/account-transaction/account-transaction.component.scss","webpack:///./src/app/layout/accounts/components/account-transaction/account-transaction.component.ts","webpack:///./src/app/layout/accounts/components/accountsdataentry-reslover.ts","webpack:///./src/app/layout/accounts/components/add-accounts-dataentry/add-accounts-dataentry.component.html","webpack:///./src/app/layout/accounts/components/add-accounts-dataentry/add-accounts-dataentry.component.scss","webpack:///./src/app/layout/accounts/components/add-accounts-dataentry/add-accounts-dataentry.component.ts","webpack:///./src/app/layout/accounts/components/edit-accounts-dataentry/edit-accounts-dataentry.component.html","webpack:///./src/app/layout/accounts/components/edit-accounts-dataentry/edit-accounts-dataentry.component.scss","webpack:///./src/app/layout/accounts/components/edit-accounts-dataentry/edit-accounts-dataentry.component.ts","webpack:///./src/app/layout/accounts/components/list-accounts-dataentry/list-accounts-dataentry.component.html","webpack:///./src/app/layout/accounts/components/list-accounts-dataentry/list-accounts-dataentry.component.scss","webpack:///./src/app/layout/accounts/components/list-accounts-dataentry/list-accounts-dataentry.component.ts","webpack:///./src/app/layout/accounts/components/monthly-outstanding/monthly-outstanding.component.html","webpack:///./src/app/layout/accounts/components/monthly-outstanding/monthly-outstanding.component.scss","webpack:///./src/app/layout/accounts/components/monthly-outstanding/monthly-outstanding.component.ts","webpack:///./src/app/layout/accounts/components/trial-balance/trial-balance.component.html","webpack:///./src/app/layout/accounts/components/trial-balance/trial-balance.component.scss","webpack:///./src/app/layout/accounts/components/trial-balance/trial-balance.component.ts","webpack:///./src/app/shared/services/accounts.service.ts"],"names":[],"mappings":"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","file":"accounts-accounts-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AccountsComponent } from './accounts.component';\r\nimport { TrialBalanceComponent } from './components/trial-balance/trial-balance.component';\r\nimport { MonthlyOutstandingComponent } from './components/monthly-outstanding/monthly-outstanding.component';\r\nimport { AuthGuardService } from 'src/app/shared/services/auth-guard.service';\r\nimport { AccountTransactionComponent } from './components/account-transaction/account-transaction.component';\r\n\r\nimport { AddAccountsDataentryComponent } from './components/add-accounts-dataentry/add-accounts-dataentry.component';\r\nimport { EditAccountsDataentryComponent } from './components/edit-accounts-dataentry/edit-accounts-dataentry.component';\r\nimport { ListAccountsDataentryComponent } from './components/list-accounts-dataentry/list-accounts-dataentry.component';\r\nimport { AccountsdataentryReslover } from './components/accountsdataentry-reslover';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AccountsComponent,\r\n    children: [\r\n      { path: '', redirectTo: 'trial-balance', pathMatch: 'prefix' },\r\n      { path: 'trial-balance', component: TrialBalanceComponent },\r\n      { path: 'monthly-outstanding', component: MonthlyOutstandingComponent },\r\n      { path: 'account-transactions', component: AccountTransactionComponent },\r\n      // Broker Master\r\n      {path: 'accounts-dataentry', component: ListAccountsDataentryComponent},\r\n      {path: 'accounts-dataentry/:id/edit', component: EditAccountsDataentryComponent,  resolve: { ade_details: AccountsdataentryReslover }},\r\n      {path: 'add-accounts-dataentry', component: AddAccountsDataentryComponent},\r\n\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountsRoutingModule {}\r\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hY2NvdW50cy9hY2NvdW50cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-accounts',\r\n  templateUrl: './accounts.component.html',\r\n  styleUrls: ['./accounts.component.scss']\r\n})\r\nexport class AccountsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AccountsComponent } from './accounts.component';\r\nimport { TrialBalanceComponent } from './components/trial-balance/trial-balance.component';\r\nimport { MonthlyOutstandingComponent } from './components/monthly-outstanding/monthly-outstanding.component';\r\nimport { AccountsRoutingModule } from './accounts-routing.module';\r\nimport { PageHeaderModule } from 'src/app/shared';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AccountsService } from './accounts.service';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { AccountTransactionComponent } from './components/account-transaction/account-transaction.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { AddAccountsDataentryComponent } from './components/add-accounts-dataentry/add-accounts-dataentry.component';\r\nimport { EditAccountsDataentryComponent } from './components/edit-accounts-dataentry/edit-accounts-dataentry.component';\r\nimport { ListAccountsDataentryComponent } from './components/list-accounts-dataentry/list-accounts-dataentry.component';\r\nimport { AccountsdataentryReslover } from './components/accountsdataentry-reslover';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccountsComponent,\r\n    TrialBalanceComponent,\r\n    MonthlyOutstandingComponent,\r\n    AccountTransactionComponent,\r\n    AddAccountsDataentryComponent,\r\n    EditAccountsDataentryComponent,\r\n    ListAccountsDataentryComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    CommonModule,\r\n    AccountsRoutingModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    PageHeaderModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [\r\n    AccountsService,\r\n    AccountsdataentryReslover\r\n  ]\r\n})\r\nexport class AccountsModule { }\r\n","import { Injectable } from '@angular/core';\nimport { ApiService } from 'src/app/shared/services/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountsService {\n\n  constructor(public api: ApiService) { }\n\n    // Accounts-Dataentry\n    addAde(data) {\n      return this.api.post('accounts/accounts-dataentry', data);\n    }\n    getAde(id) {\n      return this.api.get('accounts/accounts-dataentry/' + id);\n    }\n\n    updatAde(id, data) {\n      return this.api.put('accounts/accounts-dataentry?id=' + id, data);\n    }\n    deleteAde(id) {\n      return this.api.delete(`accounts/accounts-dataentry/${id}`);\n    }\n\n    getAdeNumberDetails(data) {\n      return this.api.post('accounts/accounts-dataentry/generate_ade_number', data);\n    }\n  \n}\n","module.exports = \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <strong>Account Transactions</strong>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"save(addForm.valid, addForm.value)\\\">\\r\\n      <div class=\\\" form-group row\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Site*</label>\\r\\n            <select formControlName=\\\"site_name\\\" class=\\\"form-control\\\" >\\r\\n              <option *ngFor=\\\"let s of sites\\\" value=\\\"{{ s.branch_name }}\\\">\\r\\n                {{ s.branch_name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Voucher Type*</label>\\r\\n            <select formControlName=\\\"voucher_type\\\" class=\\\"form-control\\\" required>\\r\\n              <option value=\\\"\\\">--Select Voucher Type--</option>\\r\\n              <option *ngFor=\\\"let v of voucher_types\\\" value=\\\"{{ v.v_name }}\\\">\\r\\n                {{ v.v_name }}\\r\\n              </option>\\r\\n            </select>\\r\\n            <span class=\\\"text-danger\\\" *ngIf=\\\"(addForm.controls['voucher_type'].dirty || submitted) && addForm.controls['voucher_type'].hasError('required')\\\">Voucher type is required.</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Voucher No*</label>\\r\\n            <input type=\\\"number\\\" formControlName=\\\"voucher_no\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div> -->\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Date*</label>\\r\\n            <div class=\\\"input-group datepicker-input\\\">\\r\\n              <input\\r\\n                class=\\\"form-control\\\"\\r\\n                placeholder=\\\"dd/mm/yyyy\\\"\\r\\n                name=\\\"dp\\\"\\r\\n                formControlName=\\\"date\\\"\\r\\n                ngbDatepicker\\r\\n                #d=\\\"ngbDatepicker\\\"\\r\\n              />\\r\\n              <div class=\\\"input-group-append\\\">\\r\\n                <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\r\\n                  <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span class=\\\"text-danger\\\" *ngIf=\\\"( addForm.controls['date'].dirty || submitted) && addForm.controls['date'].hasError('required')\\\">Date is required.</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Account Head</label>\\r\\n            <select formControlName=\\\"account_head\\\" class=\\\"form-control\\\">\\r\\n              <option value=\\\"\\\">--Select Account Head--</option>\\r\\n              <option value=\\\"\\\"></option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Payment Type*</label>\\r\\n            <select formControlName=\\\"payment_type\\\" class=\\\"form-control\\\" required>\\r\\n              <option value=\\\"\\\">--Select Payment Type--</option>\\r\\n              <option *ngFor=\\\"let p of payment_types\\\" value=\\\"{{ p.p_name }}\\\">\\r\\n                {{ p.p_name }}\\r\\n              </option>\\r\\n            </select>\\r\\n            <span class=\\\"text-danger\\\" *ngIf=\\\"( addForm.controls['payment_type'].dirty || submitted) && addForm.controls['payment_type'].hasError('required')\\\">Payment type is required.</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Against</label>\\r\\n            <select formControlName=\\\"against\\\" class=\\\"form-control\\\" required>\\r\\n              <option value=\\\"\\\">--Select Against--</option>\\r\\n              <option *ngFor=\\\"let a of againsts\\\" value=\\\"{{ a.a_name }}\\\">\\r\\n                {{ a.a_name }}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Account Name*</label>\\r\\n            <select formControlName=\\\"account_name\\\" class=\\\"form-control\\\" required>\\r\\n                <option value=\\\"\\\">--Select Account Name--</option>\\r\\n              <option *ngFor=\\\"let a of accounts\\\" value=\\\"{{ a.accountname }}\\\">\\r\\n                {{ a.accountname }}\\r\\n              </option>\\r\\n            </select>\\r\\n            <span class=\\\"text-danger\\\" *ngIf=\\\"( addForm.controls['account_name'].dirty || submitted) && addForm.controls['account_name'].hasError('required')\\\">Account name is required.</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Debit</label>\\r\\n            <input type=\\\"number\\\" formControlName=\\\"debit\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Credit</label>\\r\\n            <input type=\\\"number\\\" formControlName=\\\"credit\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Naration*</label>\\r\\n            <textarea formControlName=\\\"naration\\\" class=\\\"form-control\\\" required></textarea>\\r\\n            <span class=\\\"text-danger\\\" *ngIf=\\\"( addForm.controls['naration'].dirty || submitted) && addForm.controls['naration'].hasError('required')\\\">Naration is required.</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <button type=\\\"submit\\\" style=\\\"margin-right: 10px\\\" class=\\\"btn btn-sm btn-success\\\">\\r\\n        <i class=\\\"fa fa-get-pocket\\\"></i> save\\r\\n      </button>\\r\\n      <button type=\\\"reset\\\" style=\\\"margin-right: 10px\\\" class=\\\"btn btn-sm btn-warning\\\" (click)=\\\"reset()\\\">\\r\\n        <i class=\\\"fa fa-refresh\\\"></i> Reset\\r\\n      </button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\" >\\r\\n    <div class=\\\"col-lg\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\"><i class=\\\"fa fa-align-justify\\\"></i> Prepared By Administrator</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <!-- <ngb-pagination\\r\\n            [(page)]=\\\"pagination.currenPage\\\"\\r\\n            [pageSize]=\\\"pagination.pageSize\\\"\\r\\n            [collectionSize]=\\\"pagination.total\\\"\\r\\n            [maxSize]=\\\"pagination.maxSize\\\"\\r\\n            (pageChange)=\\\"fetchReport()\\\"\\r\\n          ></ngb-pagination>-->\\r\\n          <form [formGroup]=\\\"editForm\\\">\\r\\n            <table class=\\\"table tableFixHead mytable\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>Date</th>\\r\\n                  <th class=\\\"cell-align\\\">Site</th>\\r\\n                  <th class=\\\"cell-align\\\">Voucher Type</th>\\r\\n                  <th class=\\\"cell-align\\\">Voucher No.</th>\\r\\n                  <th class=\\\"cell-align\\\">Payment Type</th>\\r\\n                  <th class=\\\"cell-align\\\">Naration</th>\\r\\n                  <th class=\\\"cell-align\\\">Username</th>\\r\\n                  <th align=\\\"center\\\">Actions</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngIf=\\\"loading\\\">\\r\\n                  <td colspan=\\\"10\\\">\\r\\n                    <div class=\\\"showbox\\\">\\r\\n                      <div class=\\\"loader\\\">\\r\\n                        <svg class=\\\"circular\\\" viewBox=\\\"25 25 50 50\\\">\\r\\n                          <circle class=\\\"path\\\" cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"2\\\" stroke-miterlimit=\\\"10\\\" />\\r\\n                        </svg>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr *ngFor=\\\"let t of transactions; let i = index\\\">\\r\\n                  <td class=\\\"cell-align\\\">{{ t.tdate }}</td>\\r\\n\\r\\n                  <!-- <td *ngIf=\\\"t.editing\\\">\\r\\n                    <input type=\\\"text\\\">\\r\\n                  </td> -->\\r\\n\\r\\n                  <td class=\\\"cell-align\\\">{{ t.site ? t.site : '--' }}</td>\\r\\n                  \\r\\n                  <td *ngIf=\\\"!t.editing\\\" class=\\\"cell-align\\\">{{ t.voucher_type ? t.voucher_type : '--' }}</td>\\r\\n                  \\r\\n                  <td *ngIf=\\\"t.editing\\\" class=\\\"cell-align\\\">\\r\\n                    <select formControlName=\\\"voucher_type\\\" class=\\\"form-control\\\">\\r\\n                      <option *ngFor=\\\"let v of voucher_types\\\" value=\\\"{{v.v_name}}\\\">{{v.v_name}}</option>\\r\\n                    </select>\\r\\n                  </td>\\r\\n                  \\r\\n                  <td class=\\\"cell-align\\\">{{ t.voucher_no ? t.voucher_no : '--' }}</td>\\r\\n                  <td *ngIf=\\\"!t.editing\\\" class=\\\"cell-align\\\">{{ t.payment_type ? t.payment_type : '--' }}</td>\\r\\n\\r\\n                  <td *ngIf=\\\"t.editing\\\">\\r\\n                    <select formControlName=\\\"payment_type\\\" class=\\\"form-control\\\">\\r\\n                      <option *ngFor=\\\"let p of payment_types\\\" value=\\\"{{p.p_name}}\\\">{{p.p_name}}</option>\\r\\n                    </select>\\r\\n                  </td>\\r\\n\\r\\n                  <td *ngIf=\\\"!t.editing\\\" class=\\\"cell-align\\\">{{ t.naration ? t.naration : '--' }}</td>\\r\\n\\r\\n                  <td *ngIf=\\\"t.editing\\\">\\r\\n                    <textarea class=\\\"form-control\\\" formControlName=\\\"naration\\\"></textarea>\\r\\n                  </td>\\r\\n    \\r\\n                  <td class=\\\"cell-align\\\">{{ t.user ? t.user : '--' }}</td>\\r\\n                  <td>\\r\\n                    <button (click)=\\\"edit(t)\\\" class=\\\"btn btn-primary\\\">Edit</button>&nbsp;&nbsp;\\r\\n                    <button *ngIf=\\\"t.editing\\\" (click)=\\\"cancel(t)\\\" class=\\\"btn btn-warning\\\">Cancel</button>&nbsp;&nbsp;\\r\\n                    <button *ngIf=\\\"t.editing\\\" (click)=\\\"update(t, editForm.value)\\\" class=\\\"btn btn-success\\\">Update</button>&nbsp;&nbsp;\\r\\n                    <button (click)=\\\"delete(t, i)\\\" class=\\\"btn btn-danger\\\">Delete</button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr *ngIf=\\\"loaded && transactions.length === 0\\\">\\r\\n                    <td align=\\\"center\\\" colspan=\\\"7\\\">No data available</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </form>\\r\\n          <!-- <ngb-pagination\\r\\n            [(page)]=\\\"pagination.currenPage\\\"\\r\\n            [pageSize]=\\\"pagination.pageSize\\\"\\r\\n            [collectionSize]=\\\"pagination.total\\\"\\r\\n            [maxSize]=\\\"pagination.maxSize\\\"\\r\\n            (pageChange)=\\\"fetchReport()\\\"\\r\\n          ></ngb-pagination>-->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hY2NvdW50cy9jb21wb25lbnRzL2FjY291bnQtdHJhbnNhY3Rpb24vYWNjb3VudC10cmFuc2FjdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MetaService } from 'src/app/shared/services/meta.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AccountsService } from 'src/app/shared/services/accounts.service';\r\nimport * as momentTZ from 'moment-timezone';\r\n\r\n@Component({\r\n  selector: 'app-account-transaction',\r\n  templateUrl: './account-transaction.component.html',\r\n  styleUrls: ['./account-transaction.component.scss']\r\n})\r\nexport class AccountTransactionComponent implements OnInit {\r\n\r\n  addForm: FormGroup;\r\n  editForm: FormGroup;\r\n  usertype: any;\r\n  site_name: any;\r\n  submitted = false;\r\n  sites = [];\r\n  accounts = [];\r\n  transactions = [];\r\n  loading = false;\r\n  loaded = true;\r\n\r\n  voucher_types = [\r\n    { v_name: 'Receipt' },\r\n    { v_name: 'Payment' },\r\n    { v_name: 'Contra' },\r\n    { v_name: 'Journal' },\r\n    { v_name: 'Debit Note' },\r\n    { v_name: 'Credit Note' }\r\n  ];\r\n\r\n  payment_types = [\r\n    { p_name: 'Bank to Bank' },\r\n    { p_name: 'Cash' },\r\n    { p_name: 'Cheque' },\r\n    { p_name: 'Credit' },\r\n    { p_name: 'Imps' },\r\n    { p_name: 'Internal Transfer' },\r\n    { p_name: 'Neft' },\r\n    { p_name: 'Rtgs' }\r\n  ];\r\n\r\n  againsts = [\r\n    { a_name: 'DOCUMENT' },\r\n    { a_name: 'EMI' },\r\n    { a_name: 'INVESTMENT' },\r\n    { a_name: 'MAINTENANCE' },\r\n    { a_name: 'SALARY' },\r\n    { a_name: 'SITE ADVANCE' },\r\n    { a_name: 'TYRE' }\r\n  ];\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    public meta: MetaService,\r\n    public toastr: ToastrService,\r\n    public accountService: AccountsService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n\r\n    this.usertype = this.meta.getSiteFromStorage().role;\r\n    this.site_name = this.meta.getSiteFromStorage().site;\r\n\r\n    this.addForm = this.fb.group({\r\n      site_name: ['', Validators.required],\r\n      voucher_type: ['', Validators.required],\r\n      voucher_no: [''],\r\n      date: ['', Validators.required],\r\n      account_head: [''],\r\n      payment_type: ['', Validators.required],\r\n      against: [''],\r\n      account_name: ['', Validators.required],\r\n      debit: [''],\r\n      credit: [''],\r\n      naration: ['', Validators.required]\r\n    });\r\n\r\n    this.editForm = this.fb.group({\r\n      site_name: [''],\r\n      voucher_type: [''],\r\n      date: [''],\r\n      account_head: [''],\r\n      payment_type: [''],\r\n      against: [''],\r\n      account_name: [''],\r\n      debit: [''],\r\n      credit: [''],\r\n      naration: ['']\r\n    });\r\n\r\n    this.getSites();\r\n    this.getAccountName();\r\n    this.getTransactions();\r\n  }\r\n\r\n  getSites() {\r\n    this.meta.getSites().subscribe(\r\n      (res: any) => {\r\n        this.sites = res;\r\n        if (this.usertype === 'ADMIN') {\r\n          this.addForm.controls['site_name'].setValue(this.sites[0].branch_name);\r\n        } else {\r\n          this.addForm.controls['site_name'].setValue(this.site_name);\r\n        }\r\n      },\r\n      err => {}\r\n    );\r\n  }\r\n\r\n  getTransactions() {\r\n    this.loading = true;\r\n    this.loaded = false;\r\n    this.accountService.getTransactions().subscribe((res: any) => {\r\n      this.loading = false;\r\n      this.loaded = true;\r\n\r\n      res.result.forEach(element => {\r\n        element.tdate = momentTZ(element.placedtime).tz('Asia/Calcutta').format('DD/MM/YYYY HH:mm:ss');\r\n        element.editing = false;\r\n      });\r\n\r\n      this.transactions = res.result;\r\n    }, err => {\r\n      this.loading = false;\r\n      this.loaded = true;\r\n    });\r\n  }\r\n\r\n  getAccountName() {\r\n    this.meta.getAccounts().subscribe((res: any) => {\r\n      this.accounts = res;\r\n      console.log('>>>>res', res);\r\n    }, err => {\r\n      console.log('>>>>err', err);\r\n    });\r\n  }\r\n\r\n  save(isValid, formValue) {\r\n    this.submitted = true;\r\n    if (isValid) {\r\n\r\n      const date = formValue.date.year + '-' + formValue.date.month +  '-' +  formValue.date.day;\r\n\r\n      let debit: number;\r\n      let credit: number;\r\n\r\n      if (formValue.debit) {\r\n        debit = formValue.debit;\r\n      } else {\r\n        debit = 0;\r\n      }\r\n\r\n      if (formValue.credit) {\r\n        credit = formValue.credit;\r\n      } else {\r\n        credit = 0;\r\n      }\r\n\r\n      const obj = {\r\n        'site': formValue.site_name,\r\n        'voucher_type': formValue.voucher_type,\r\n        'tdate': date,\r\n        'account_head': formValue.account_head,\r\n        'payment_type': formValue.payment_type,\r\n        'against': formValue.against,\r\n        'account_name': formValue.account_name,\r\n        'debit': formValue.debit,\r\n        'credit': formValue.credit,\r\n        'naration': formValue.naration\r\n        // 'voucher_no': formValue.voucher_no\r\n      };\r\n\r\n      this.accountService.addTransaction(obj).subscribe((res: any) => {\r\n        this.getTransactions();\r\n        this.addForm.reset();\r\n        this.submitted = false;\r\n        this.toastr.success('Tranaction added successfully.');\r\n        this.addForm.controls['account_name'].setValue(undefined);\r\n      }, err => {\r\n        this.toastr.success('Something went wrong.');\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.addForm.reset();\r\n    this.submitted = false;\r\n  }\r\n\r\n  edit(data) {\r\n    data.editing = true;\r\n    this.editForm.controls['voucher_type'].setValue(data.voucher_type);\r\n    this.editForm.controls['payment_type'].setValue(data.payment_type);\r\n    this.editForm.controls['naration'].setValue(data.naration);\r\n  }\r\n\r\n  cancel(data) {\r\n    data.editing = false;\r\n  }\r\n\r\n  update(data, formValue) {\r\n\r\n    const obj = {\r\n      'payment_type': formValue.payment_type,\r\n      'voucher_type': formValue.voucher_type,\r\n      'naration': formValue.naration\r\n    };\r\n\r\n    this.accountService.updateTransaction(data._id, obj).subscribe((res: any) => {\r\n      this.toastr.success('Tranaction updated successfully.');\r\n      data.editing = false;\r\n      data.payment_type = formValue.payment_type;\r\n      data.voucher_type = formValue.voucher_type;\r\n      data.naration = formValue.naration;\r\n    }, err => {\r\n      data.editing = false;\r\n      this.toastr.success('Something went wrong.');\r\n    });\r\n\r\n  }\r\n\r\n  delete(data, index) {\r\n\r\n    const conf = confirm('Are you sure you want to delete this transaction?');\r\n\r\n    if (conf === true) {\r\n      this.accountService.deleteTransaction(data._id).subscribe((res: any) => {\r\n        this.toastr.success('Tranaction deleted successfully.');\r\n        this.transactions.splice(index, 1);\r\n      }, err => {\r\n        this.toastr.success('Something went wrong.');\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AccountsService } from '../accounts.service';\r\n\r\n@Injectable()\r\nexport class AccountsdataentryReslover implements Resolve<any> {\r\n    constructor(private as: AccountsService) { }\r\n\r\n    resolve(route: ActivatedRouteSnapshot) {\r\n        return this.as.getAde(route.paramMap.get('id'));\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\n  <form [formGroup]=\\\"adeForm\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Accounts Data Entry</div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"form-group row\\\">\\n\\n          <!-- <div class=\\\"col-lg-3 col-md-3\\\"> -->\\n          <div class=\\\"col-md-3\\\">\\n            <label class=\\\"required\\\">Site</label>\\n          <ng-select [items]=\\\"siteOptions\\\" placeholder=\\\"Type and search site\\\" bindLabel=\\\"branch_name\\\" bindValue=\\\"branch_name\\\"\\n            formControlName=\\\"site\\\">\\n          </ng-select>\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <label class=\\\"required\\\">Voucher type</label>\\n          <select class=\\\"form-control\\\" formControlName=\\\"ade_type\\\" (change)=\\\"generateAdeNumber()\\\">\\n            <option value=\\\"\\\">Select type</option>\\n            <option value=\\\"Receipt\\\">Receipt</option>\\n            <option value=\\\"Payment\\\">Payment</option>\\n            <option value=\\\"Contra\\\">Contra</option>\\n            <option value=\\\"Journal\\\">Journal</option>\\n            <option value=\\\"Debit Note\\\">Debit Note</option>\\n            <option value=\\\"Credit Note\\\">Credit Note</option>\\n          </select>\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <label class=\\\"required\\\">Voucher no</label>\\n          <input disabled type=\\\"text\\\" formControlName=\\\"ade_number\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <label class=\\\"required\\\">Voucher date</label>\\n          <div class=\\\"input-group datepicker-input\\\">\\n            <input\\n              class=\\\"form-control\\\"\\n              placeholder=\\\"dd-mm-yyyy\\\"\\n              name=\\\"dp2\\\"\\n              formControlName=\\\"ade_date\\\"\\n              ngbDatepicker\\n              #d2=\\\"ngbDatepicker\\\"\\n            />\\n            <div class=\\\"input-group-append\\\">\\n              <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d2.toggle()\\\" type=\\\"button\\\">\\n                <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <!-- <div class=\\\"col-md-3\\\">\\n          <label class=\\\"required\\\">Voucher date</label>\\n          <div class=\\\"input-group datepicker-input\\\">\\n            <input\\n              class=\\\"form-control\\\"\\n              placeholder=\\\"dd-mm-yyyy\\\"\\n              name=\\\"dp2\\\"\\n              formControlName=\\\"ade_date\\\"\\n              ngbDatepicker\\n              #d2=\\\"ngbDatepicker\\\"\\n            />\\n            <div class=\\\"input-group-append\\\">\\n              <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d2.toggle()\\\" type=\\\"button\\\">\\n                <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n              </button>\\n            </div>\\n          </div>\\n        </div> -->\\n\\n        <div class=\\\"col-md-3\\\">\\n          <label class=\\\"required\\\">Payment type</label>\\n          <select class=\\\"form-control\\\" formControlName=\\\"payment_type\\\">\\n            <option value=\\\"\\\">Select type</option>\\n            <option value=\\\"Bank to Bank\\\">Bank to Bank</option>\\n            <option value=\\\"Cash\\\">Cash</option>\\n            <option value=\\\"Cheque\\\">Cheque</option>\\n            <option value=\\\"Credit\\\">Credit</option>\\n            <option value=\\\"Imps\\\">Imps</option>\\n            <option value=\\\"Internal Transfer\\\">Internal Transfer</option>\\n            <option value=\\\"Neft\\\">Neft</option>\\n            <option value=\\\"Rtgs\\\">Rtgs</option>\\n          </select>\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <label class=\\\"required\\\">Against</label>\\n          <select class=\\\"form-control\\\" formControlName=\\\"against\\\">\\n            <option value=\\\"\\\">Select type</option>\\n            <option value=\\\"Document\\\">Document</option>\\n            <option value=\\\"Investment\\\">Investment</option>\\n            <option value=\\\"Maintenance\\\">Maintenance</option>\\n            <option value=\\\"Salary\\\">Salary</option>\\n            <option value=\\\"Site Advance\\\">Site Advance</option>\\n            <option value=\\\"Tyre\\\">Tyre</option>\\n          </select>\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <label class=\\\"required\\\">Department</label>\\n          <ng-select [items]=\\\"dept_option\\\" placeholder=\\\"Type and search Department\\\" bindLabel=\\\"deptname\\\" bindValue=\\\"deptname\\\"\\n            formControlName=\\\"department\\\">\\n          </ng-select>\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <label class=\\\"required\\\">Debit Account Name</label>\\n          <ng-select [items]=\\\"draccname_option\\\" placeholder=\\\"Type and search Account\\\" bindLabel=\\\"accountname\\\" bindValue=\\\"accountname\\\"\\n            formControlName=\\\"draccount_name\\\">\\n          </ng-select>\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <label class=\\\"required\\\">Credit Account Name</label>\\n          <ng-select [items]=\\\"craccname_option\\\" placeholder=\\\"Type and search Account\\\" bindLabel=\\\"accountname\\\" bindValue=\\\"accountname\\\"\\n            formControlName=\\\"craccount_name\\\">\\n          </ng-select>\\n        </div>\\n\\n        <div class=\\\"col-lg-3 col-md-3\\\">\\n          <label class=\\\"required\\\">Amount</label>\\n          <input type=\\\"number\\\" formControlName=\\\"amount\\\" class=\\\"form-control\\\" placeholder=\\\"Amount\\\">\\n        </div>\\n\\n        <div class=\\\"col-lg-6 col-md-6\\\">\\n          <label>Remarks</label>\\n          <input type=\\\"text\\\" formControlName=\\\"remarks\\\" class=\\\"form-control\\\" placeholder=\\\"Remarks\\\">\\n        </div>\\n\\n      </div>\\n\\n      </div>\\n      <div class=\\\"card-footer\\\">\\n        <button class=\\\"btn btn-success float-right\\\" (click)=\\\"save()\\\" [disabled]=\\\"!adeForm.valid || process == 'saving'\\\" type=\\\"button\\\">\\n          Save <i *ngIf=\\\"process == 'saving'\\\" class=\\\"fa fa-spinner fa-spin\\\"></i>\\n        </button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hY2NvdW50cy9jb21wb25lbnRzL2FkZC1hY2NvdW50cy1kYXRhZW50cnkvYWRkLWFjY291bnRzLWRhdGFlbnRyeS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\nimport { MetaService } from 'src/app/shared/services/meta.service';\nimport { Router } from '@angular/router';\nimport { AccountsService } from '../../accounts.service';\ndeclare var moment: any;\n\n\n@Component({\n  selector: 'app-add-accounts-dataentry',\n  templateUrl: './add-accounts-dataentry.component.html',\n  styleUrls: ['./add-accounts-dataentry.component.scss']\n})\nexport class AddAccountsDataentryComponent implements OnInit {\n  public adeForm: any;\n  public process: string;\n  public siteOptions: any;\n  public dept_option: any;\n  public draccname_option: any;\n  public craccname_option: any;\n  site_name: any;\n  usertype: any;\n  loading = false;\n  // minDate;\n  public currentDate = new Date();\n  constructor(\n    private fb: FormBuilder,\n    private metaService: MetaService,\n    private as: AccountsService,\n    private router: Router,\n    private calendar: NgbCalendar\n  ) {\n    this.usertype = this.metaService.getSiteFromStorage().role;\n    this.site_name = this.metaService.getSiteFromStorage().site;\n    // const current = new Date();\n    // this.minDate = {\n    //   year: current.getFullYear(),\n    //   month: current.getMonth() + 1,\n    //   day: current.getDate()\n    // };\n  }\n\n  ngOnInit() {\n    // this.bsConfig = Object.assign({},\n    //   { containerClass: 'theme-blue', 'rangeInputFormat': 'MMMM Do YYYY', minDate: new Date(), 'showWeekNumbers': false });\n    this.buildForm();\n    this.adeForm.controls['ade_date'].setValue(this.calendar.getToday());\n    this.getOptions();\n    this.getSites();\n  }\n\n  public buildForm(): void {\n    this.adeForm = this.fb.group(\n      {\n        'site': ['', [Validators.required]],\n        'ade_type': ['', [Validators.required]],\n        'ade_number': ['', [Validators.required]],\n        // 'ade_date': [{year: new Date().getFullYear(), month: new Date().getMonth() + 1, day: new Date().getDate()}],\n        'ade_date': [new Date()],\n        'payment_type': ['', [Validators.required]],\n        'against': ['', [Validators.required]],\n        'department': ['', [Validators.required]],\n        'draccount_name': ['', [Validators.required]],\n        'craccount_name': ['', [Validators.required]],\n        'amount': [0, [Validators.required]],\n        'remarks': ['']\n      }\n    );\n  }\n\n\n  public save() {\n\n    console.log('Accounts Data Save', this.adeForm.value);\n\n    // let ade_date;\n    // if (this.adeForm.controls['ade_date'].value) {\n    //   const dt = this.adeForm.controls['ade_date'].value.year + '-' +\n    //     this.adeForm.controls['ade_date'].value.month + '-' +\n    //     this.adeForm.controls['ade_date'].value.day;\n    //   ade_date = moment(dt, 'YYYY-MM-DD').format();\n    //   console.log(ade_date);\n    // } else {\n    //   ade_date = moment().format();\n    // }\n\n    let ade_date;\n    if (this.adeForm.controls['ade_date'].value) {\n      const dt = this.adeForm.controls['ade_date'].value.year + '-' +\n        this.adeForm.controls['ade_date'].value.month + '-' +\n        this.adeForm.controls['ade_date'].value.day;\n      ade_date = new Date(this.adeForm.controls['ade_date'].value.year, this.adeForm.controls['ade_date'].value.month - 1, this.adeForm.controls['ade_date'].value.day,23,59,59);\n      console.log(ade_date);\n    } else {\n      ade_date = moment().format();\n      ade_date = new Date(ade_date.getFullYear(),ade_date.getMonth(),ade_date.getDay(),23,59,59);\n    }\n\n    this.process = 'saving';\n    let data = this.adeForm.value;\n    data.ade_date = ade_date;\n    this.as.addAde(this.adeForm.value).subscribe(mrInfo => {\n      this.process = 'done';\n      this.router.navigate(['/accounts/accounts-dataentry']);\n    }, error => { this.process = 'done'; console.log(error);\n  });\n  }\n\n  getSites() {\n    this.loading = true;\n    this.metaService.getSites().subscribe((res: any) => {\n        this.loading = false;\n        this.siteOptions = res;\n        if (this.usertype === 'ADMIN') {\n          this.adeForm.controls['site'].setValue(this.siteOptions[0].branch_name);\n        } else {\n          this.adeForm.controls['site'].setValue(this.site_name);\n        }\n      },\n      err => {\n        this.loading = false;\n      }\n    );\n  }\n\n  private getOptions() {\n    this.metaService.getDeptList().subscribe(trackInfo => {\n      this.dept_option = trackInfo['result'];\n    });\n  }\n\n  public generateAdeNumber() {\n    const ade_type = this.adeForm.controls.ade_type.value;\n    const site = this.adeForm.controls.site.value;\n\n    if (site && ade_type) {\n      const matchCond = { site: site, ade_type: ade_type };\n      console.log('mathCond >>' , matchCond );\n      this.as.getAdeNumberDetails(matchCond).subscribe(mrInfo => {\n        this.adeForm.controls.ade_number.setValue(mrInfo['count'] + 1);\n      }, error => { console.log(error);\n      });\n    }\n\n    console.log(' ade_type >>>>>', ade_type);\n\n    this.metaService.getDraccountList(ade_type).subscribe(trackInfo => {\n      this.draccname_option = trackInfo['result'];\n    });\n\n    this.metaService.getCraccountList(ade_type).subscribe(trackInfo => {\n      this.craccname_option = trackInfo['result'];\n    });\n\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <form [formGroup]=\\\"adeForm\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">Edit Accounts Data Entry</div>\\n      <div class=\\\"card-body\\\">\\n\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-3\\\">\\n            <label class=\\\"required\\\">Site</label>\\n          <ng-select [items]=\\\"siteOptions\\\" placeholder=\\\"Type and search site\\\" bindLabel=\\\"branch_name\\\" bindValue=\\\"branch_name\\\"\\n            formControlName=\\\"site\\\">\\n          </ng-select>\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <label class=\\\"required\\\">Voucher type</label>\\n          <select class=\\\"form-control\\\" formControlName=\\\"ade_type\\\">\\n            <option value=\\\"\\\">Select type</option>\\n            <option value=\\\"Receipt\\\">Receipt</option>\\n            <option value=\\\"Payment\\\">Payment</option>\\n            <option value=\\\"Contra\\\">Contra</option>\\n            <option value=\\\"Journal\\\">Journal</option>\\n            <option value=\\\"Debit Note\\\">Debit Note</option>\\n            <option value=\\\"Credit Note\\\">Credit Note</option>\\n          </select>\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <label class=\\\"required\\\">Voucher no</label>\\n          <input disabled type=\\\"text\\\" formControlName=\\\"ade_number\\\" class=\\\"form-control\\\" placeholder=\\\"\\\">\\n        </div>\\n\\n        <!-- <div class=\\\"col-md-3\\\">\\n          <label class=\\\"required\\\">Voucher date</label>\\n          <div class=\\\"input-group datepicker-input\\\">\\n            <input\\n              class=\\\"form-control\\\"\\n              placeholder=\\\"dd-mm-yyyy\\\"\\n              name=\\\"dp2\\\"\\n              formControlName=\\\"ade_date\\\"\\n              ngbDatepicker\\n              #d2=\\\"ngbDatepicker\\\"\\n              [minDate]=\\\"minDate\\\"\\n              required\\n            />\\n            <div class=\\\"input-group-append\\\">\\n              <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d2.toggle()\\\" type=\\\"button\\\">\\n                <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n              </button>\\n            </div>\\n          </div>\\n        </div> -->\\n\\n       <div class=\\\"col-md-3\\\">\\n          <label class=\\\"required\\\">Voucher date</label>\\n          <div class=\\\"input-group datepicker-input\\\">\\n            <input\\n              class=\\\"form-control\\\"\\n              placeholder=\\\"dd-mm-yyyy\\\"\\n              name=\\\"dp2\\\"\\n              formControlName=\\\"ade_date\\\"\\n              ngbDatepicker\\n              #d2=\\\"ngbDatepicker\\\"\\n            />\\n            <div class=\\\"input-group-append\\\">\\n              <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d2.toggle()\\\" type=\\\"button\\\">\\n                <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <label class=\\\"required\\\">Payment type</label>\\n          <select class=\\\"form-control\\\" formControlName=\\\"payment_type\\\">\\n            <option value=\\\"\\\">Select type</option>\\n            <option value=\\\"Bank to Bank\\\">Bank to Bank</option>\\n            <option value=\\\"Cash\\\">Cash</option>\\n            <option value=\\\"Cheque\\\">Cheque</option>\\n            <option value=\\\"Credit\\\">Credit</option>\\n            <option value=\\\"Imps\\\">Imps</option>\\n            <option value=\\\"Internal Transfer\\\">Internal Transfer</option>\\n            <option value=\\\"Neft\\\">Neft</option>\\n            <option value=\\\"Rtgs\\\">Rtgs</option>\\n          </select>\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <label class=\\\"required\\\">Against</label>\\n          <select class=\\\"form-control\\\" formControlName=\\\"against\\\">\\n            <option value=\\\"\\\">Select type</option>\\n            <option value=\\\"Document\\\">Document</option>\\n            <option value=\\\"Investment\\\">Investment</option>\\n            <option value=\\\"Maintenance\\\">Maintenance</option>\\n            <option value=\\\"Salary\\\">Salary</option>\\n            <option value=\\\"Site Advance\\\">Site Advance</option>\\n            <option value=\\\"Tyre\\\">Tyre</option>\\n          </select>\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <label class=\\\"required\\\">Department</label>\\n          <ng-select [items]=\\\"dept_option\\\" placeholder=\\\"Type and search Department\\\" bindLabel=\\\"deptname\\\" bindValue=\\\"deptname\\\"\\n            formControlName=\\\"department\\\">\\n          </ng-select>\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <label class=\\\"required\\\">Debit Account Name</label>\\n          <ng-select [items]=\\\"draccname_option\\\" placeholder=\\\"Type and search Account\\\" bindLabel=\\\"accountname\\\" bindValue=\\\"accountname\\\"\\n            formControlName=\\\"draccount_name\\\">\\n          </ng-select>\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <label class=\\\"required\\\">Credit Account Name</label>\\n          <ng-select [items]=\\\"craccname_option\\\" placeholder=\\\"Type and search Account\\\" bindLabel=\\\"accountname\\\" bindValue=\\\"accountname\\\"\\n            formControlName=\\\"craccount_name\\\">\\n          </ng-select>\\n        </div>\\n\\n        <div class=\\\"col-lg-3 col-md-3\\\">\\n          <label class=\\\"required\\\">Amount</label>\\n          <input type=\\\"number\\\" formControlName=\\\"amount\\\" class=\\\"form-control\\\" placeholder=\\\"Amount\\\">\\n        </div>\\n\\n        <div class=\\\"col-lg-6 col-md-6\\\">\\n          <label>Remarks</label>\\n          <input type=\\\"text\\\" formControlName=\\\"remarks\\\" class=\\\"form-control\\\" placeholder=\\\"Remarks\\\">\\n        </div>\\n\\n\\n        </div>\\n\\n      </div>\\n      <div class=\\\"card-footer\\\">\\n        <button class=\\\"btn btn-success float-right\\\" (click)=\\\"save()\\\" [disabled]=\\\"!adeForm.valid || process == 'saving'\\\" type=\\\"button\\\">\\n          Save <i *ngIf=\\\"process == 'saving'\\\" class=\\\"fa fa-spinner fa-spin\\\"></i>\\n        </button>\\n      </div>\\n    </div>\\n\\n  </form>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hY2NvdW50cy9jb21wb25lbnRzL2VkaXQtYWNjb3VudHMtZGF0YWVudHJ5L2VkaXQtYWNjb3VudHMtZGF0YWVudHJ5LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\n// import { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\nimport { MetaService } from 'src/app/shared/services/meta.service';\nimport { MaintenanceService } from 'src/app/shared/services/maintenance.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AccountsService } from '../../accounts.service';\ndeclare var moment: any;\n\n@Component({\n  selector: 'app-edit-accounts-dataentry',\n  templateUrl: './edit-accounts-dataentry.component.html',\n  styleUrls: ['./edit-accounts-dataentry.component.scss']\n})\nexport class EditAccountsDataentryComponent implements OnInit {\n  public adeForm: any;\n  public process: string;\n  // public bsConfig: Partial<BsDatepickerConfig>;\n  public siteOptions: any;\n  public dept_option: any;\n  public draccname_option: any;\n  public craccname_option: any;\n  site_name: any;\n  usertype: any;\n  loading = false;\n  // minDate;\n  public currentDate = new Date();\n  public adeDetails: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private metaService: MetaService,\n    private ms: MaintenanceService,\n    private as: AccountsService,\n    private router: Router,\n    private aroute: ActivatedRoute,\n    private calendar: NgbCalendar\n  ) {\n    this.usertype = this.metaService.getSiteFromStorage().role;\n    this.site_name = this.metaService.getSiteFromStorage().site;\n    // const current = new Date();\n    // this.minDate = {\n    //   year: current.getFullYear(),\n    //   month: current.getMonth() + 1,\n    //   day: current.getDate()\n    // };\n\n  }\n\n  ngOnInit() {\n\n    this.adeDetails = this.aroute.snapshot.data['ade_details'];\n    this.buildForm();\n    this.getOptions();\n  }\n  public buildForm(): void {\n    this.adeForm = this.fb.group(\n      {\n        'site': [this.adeDetails.site],\n        'ade_type': [this.adeDetails.ade_type],\n        'ade_number': [this.adeDetails.ade_number],\n        'ade_date': [{year: new Date(this.adeDetails.ade_date).getFullYear(), month: new Date(this.adeDetails.ade_date).getMonth() + 1, day: new Date(this.adeDetails.ade_date).getDate()}],\n        'payment_type': [this.adeDetails.payment_type],\n        'against': [this.adeDetails.against],\n        'department': [this.adeDetails.department],\n        'draccount_name': [this.adeDetails.draccount_name],\n        'craccount_name': [this.adeDetails.craccount_name],\n        'amount': [this.adeDetails.amount],\n        'remarks': [this.adeDetails.remarks]\n      }\n    );\n  }\n\n  public save() {\n\n    // let ade_date;\n    // if (this.adeForm.controls['ade_date'].value) {\n    //   const dt = this.adeForm.controls['ade_date'].value.year + '-' +\n    //     this.adeForm.controls['ade_date'].value.month + '-' +\n    //     this.adeForm.controls['ade_date'].value.day;\n    //   ade_date = moment(dt, 'YYYY-MM-DD').format();\n    //   console.log(ade_date);\n    // } else {\n    //   ade_date = moment().format();\n    // }\n\n    let ade_date;\n    if (this.adeForm.controls['ade_date'].value) {\n      const dt = this.adeForm.controls['ade_date'].value.year + '-' +\n        this.adeForm.controls['ade_date'].value.month + '-' +\n        this.adeForm.controls['ade_date'].value.day;\n      ade_date = new Date(this.adeForm.controls['ade_date'].value.year, this.adeForm.controls['ade_date'].value.month - 1, this.adeForm.controls['ade_date'].value.day,23,59,59);\n      console.log(ade_date);\n    } else {\n      ade_date = moment().format();\n      ade_date = new Date(ade_date.getFullYear(),ade_date.getMonth(),ade_date.getDay(),23,59,59);\n    }\n\n    this.process = 'saving';\n    let data = this.adeForm.value;\n    data.ade_date = ade_date;\n\n    this.as.updatAde(this.adeDetails['_id'], this.adeForm.value).subscribe(mrInfo => {\n      this.process = 'done';\n      this.router.navigate(['/accounts/accounts-dataentry']);\n    }, error => { this.process = 'done'; console.log(error);\n  });\n  }\n  getSites() {\n    this.loading = true;\n    this.metaService.getSites().subscribe((res: any) => {\n        this.loading = false;\n        this.siteOptions = res;\n        if (this.usertype === 'ADMIN') {\n          this.adeForm.controls['site'].setValue(this.siteOptions[0].branch_name);\n        } else {\n          this.adeForm.controls['site'].setValue(this.site_name);\n        }\n      },\n      err => {\n        this.loading = false;\n      }\n    );\n  }\n\n  private getOptions() {\n    this.metaService.getDeptList().subscribe(trackInfo => {\n      this.dept_option = trackInfo['result'];\n    });\n\n  }\n\n}\n\n","module.exports = \"<div class=\\\"container\\\">\\n  <app-smart-table [commonFilter]=\\\"commonFilter\\\" [addButtonInfo]=\\\"addButtonInfo\\\" [screenName]=\\\"'Accounts Data Entry'\\\" [columns]=\\\"columns\\\" [fetchUrl]=\\\"fetchUrl\\\" [limit]=\\\"5\\\"\\n    [refreshRedTable]=\\\"refreshRedTable\\\" (event)=\\\"linkClicked($event)\\\">\\n  </app-smart-table>\\n</div>\\n<div class=\\\"modal fade\\\" role=\\\"dialog\\\" id=\\\"deleteModal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">Delete</h4>\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n              <p>Are you sure you want to delete?</p>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n              <button type=\\\"button\\\" data-dismiss=\\\"modal\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n              <button type=\\\"button\\\" [disabled]=\\\"process =='processing'\\\" (click)=\\\"deleteRecord()\\\" class=\\\"actions-button btn btn-danger\\\">\\n                <span *ngIf=\\\"process !='processing'\\\">Delete</span>\\n                <span *ngIf=\\\"process == 'processing'\\\">Deleting<i class=\\\"fa fa-spinner fa-spin\\\"></i></span>\\n              </button>\\n          </div>\\n      </div>\\n\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hY2NvdW50cy9jb21wb25lbnRzL2xpc3QtYWNjb3VudHMtZGF0YWVudHJ5L2xpc3QtYWNjb3VudHMtZGF0YWVudHJ5LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GetApiurl } from '../../../../parameters';\nimport { AccountsService } from '../../accounts.service';\nimport { MetaService } from 'src/app/shared/services/meta.service';\ndeclare var moment:any\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-list-accounts-dataentry',\n  templateUrl: './list-accounts-dataentry.component.html',\n  styleUrls: ['./list-accounts-dataentry.component.scss']\n})\nexport class ListAccountsDataentryComponent implements OnInit {\n\n  public addButtonInfo: Object = { text: 'Add Accounts Data Entry', url: '/accounts/add-accounts-dataentry' };\n  public fetchUrl: string = GetApiurl('accounts/accounts-dataentry');\n  columns: Array<any> = [\n  ];\n  refreshRedTable: any;\n  dataRow: any;\n  usertype: any;\n  process: string;\n  public modal_title: string;\n  public commonFilter: Object = {filterString: '', columnName: 'searchString', placeholder: 'Search by Accountname / User Name'};\n  constructor(\n    private router: Router,\n    public meta: MetaService,\n    private as: AccountsService\n  ) {\n    this.usertype = this.meta.getSiteFromStorage().role;\n    console.log(' Usertype >>>  ', this.usertype);\n    if (this.usertype === 'ADMIN') {\n      this.columns = [\n        { title: 'Site', name: 'site', sort: true },\n        { title: 'Type', name: 'ade_type', sort: true },\n        { title: 'Vouch.No', name: 'ade_number', sort: true },\n        { title: 'Vouch Date', name: 'ade_date', dateFormat: 'fullDate', sort: false },\n        { title: 'Dr_name', name: 'draccount_name', sort: true },\n        { title: 'Cr_name', name: 'craccount_name', sort: true },\n        { title: 'Amount', name: 'amount', sort: false },\n        { title: 'User', name: 'user', sort: true },\n        { title: 'Actions', links: ['Edit', 'Delete'] }\n      ];\n    } else {\n      this.columns = [\n        { title: 'Site', name: 'site', sort: true },\n        { title: 'Type', name: 'ade_type', sort: true },\n        { title: 'Vouch.No', name: 'ade_number', sort: true },\n        { title: 'Vouch Date', name: 'ade_date', dateFormat: 'fullDate', sort: false },\n        { title: 'Dr_name', name: 'draccount_name', sort: true },\n        { title: 'Cr_name', name: 'craccount_name', sort: true },\n        { title: 'Amount', name: 'amount', sort: false },\n        { title: 'User', name: 'user', sort: true },\n        { title: 'Actions', links: ['Edit'] }\n      ];\n    }\n\n  }\n\n  ngOnInit() {\n  }\n  linkClicked(event: any): any {\n    const data = event.data;\n    this.dataRow = data;\n    if (event.data.action === 'Edit') {\n      this.router.navigate([`/accounts/accounts-dataentry/${this.dataRow['row']['_id']}/edit`]);\n    }\n    if (data.action === 'Delete') {\n      $('#deleteModal').modal('show');\n    }\n  }\n  public deleteRecord() {\n    this.process = 'processing';\n    this.deleteProject(this.dataRow['row']['_id']);\n  }\n  public deleteProject(index: number) {\n    this.as.deleteAde(index).subscribe(\n      ng2TableData => {\n        this.process = 'done';\n        $('#deleteModal').modal('hide');\n        this.refreshRedTable = { mode: 'delete', id: index };\n      }, // filter(row => row.id != index),\n      error => { console.log(error);\n      }\n    );\n  }\n\n\n}\n","module.exports = \"<div [@routerTransition]>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-md-12 col-sm-12 col-xl-12 col-lg-12 min-height\\\">\\r\\n      <form [formGroup]=\\\"filterForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <h4><i class=\\\"fa fa-book\\\"></i> Monthly Outstanding</h4>\\r\\n            <hr />\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Select Sites</label>\\r\\n              <select formControlName=\\\"site_name\\\" class=\\\"form-control\\\" required>\\r\\n                <option value=\\\"\\\">All</option>\\r\\n                <option *ngFor=\\\"let s of sites\\\" value=\\\"{{ s.branch_name }}\\\">\\r\\n                  {{ s.branch_name }}\\r\\n                </option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Select Type</label>\\r\\n              <select formControlName=\\\"type\\\" class=\\\"form-control\\\">\\r\\n                <option value=\\\"\\\">--Select--</option>\\r\\n                <option *ngFor=\\\"let t of types\\\" value=\\\"{{ t.value }}\\\">\\r\\n                  {{ t.type_name }}\\r\\n                </option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>As on Date</label>\\r\\n              <div class=\\\"input-group datepicker-input\\\">\\r\\n                <input\\r\\n                  class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"dd/mm/yyyy\\\"\\r\\n                  name=\\\"dp\\\"\\r\\n                  formControlName=\\\"start_date\\\"\\r\\n                  ngbDatepicker\\r\\n                  #d=\\\"ngbDatepicker\\\"\\r\\n                />\\r\\n                <div class=\\\"input-group-append\\\">\\r\\n                  <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\r\\n                    <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-md-4 wrapper-right\\\">\\r\\n            <button (click)=\\\"fetchReport()\\\" class=\\\"btn btn-primary\\\">\\r\\n              <i class=\\\"fa fa-get-pocket\\\" aria-hidden=\\\"true\\\"></i> Fetch\\r\\n            </button>&nbsp;\\r\\n            <button (click)=\\\"resetFilters()\\\" class=\\\"btn btn-warning\\\"><i class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\"></i> Reset </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n      <hr />\\r\\n\\r\\n      <!-- <ngb-pagination\\r\\n          [(page)]=\\\"pagination.currenPage\\\"\\r\\n          [pageSize]=\\\"pagination.pageSize\\\"\\r\\n          [collectionSize]=\\\"pagination.total\\\"\\r\\n          [maxSize]=\\\"pagination.maxSize\\\"\\r\\n          (pageChange)=\\\"fetchReport()\\\"\\r\\n        ></ngb-pagination>-->\\r\\n      <table class=\\\"table table-hover table-striped table-bordered table-condensed \\\">\\r\\n         <!-- mytable tableFixHead -->\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Account name</th>\\r\\n            <th class=\\\"cell-align\\\">Dr.</th>\\r\\n            <th class=\\\"cell-align\\\">Cr.</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n\\r\\n        <tbody>\\r\\n          <tr *ngIf=\\\"loading\\\">\\r\\n            <td colspan=\\\"10\\\">\\r\\n              <div class=\\\"showbox\\\">\\r\\n                <div class=\\\"loader\\\">\\r\\n                  <svg class=\\\"circular\\\" viewBox=\\\"25 25 50 50\\\">\\r\\n                    <circle class=\\\"path\\\" cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"2\\\" stroke-miterlimit=\\\"10\\\" />\\r\\n                  </svg>\\r\\n                </div>\\r\\n              </div>\\r\\n            </td>\\r\\n          </tr>\\r\\n\\r\\n          <tr *ngFor=\\\"let m of monthlyData\\\">\\r\\n            <td>{{ m.account_name ? m.account_name : '--' }}</td>\\r\\n            <td class=\\\"cell-align\\\">{{ (m.dr ? m.dr : 0 ) | number : '1.2-2' }}</td>\\r\\n            <td class=\\\"cell-align\\\">{{ (m.cr ? m.cr : 0)  | number : '1.2-2' }}</td>\\r\\n          </tr>\\r\\n\\r\\n          <tr *ngIf=\\\"monthlyData.length > 0\\\">\\r\\n              <td align=\\\"left\\\" colspan=\\\"1\\\">TOTAL</td>\\r\\n              <td align=\\\"right\\\">{{totalDr | number : '1.2-2'}}</td>\\r\\n              <td align=\\\"right\\\">{{totalCr | number : '1.2-2'}}</td>\\r\\n          </tr>\\r\\n          <tr *ngIf=\\\" loaded && monthlyData.length === 0\\\">\\r\\n            <td align=\\\"center\\\" colspan=\\\"4\\\">No data available</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n      <!-- <ngb-pagination\\r\\n          [(page)]=\\\"pagination.currenPage\\\"\\r\\n          [pageSize]=\\\"pagination.pageSize\\\"\\r\\n          [collectionSize]=\\\"pagination.total\\\"\\r\\n          [maxSize]=\\\"pagination.maxSize\\\"\\r\\n          (pageChange)=\\\"fetchReport()\\\"\\r\\n        ></ngb-pagination> -->\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hY2NvdW50cy9jb21wb25lbnRzL21vbnRobHktb3V0c3RhbmRpbmcvbW9udGhseS1vdXRzdGFuZGluZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AccountsService } from 'src/app/shared/services/accounts.service';\r\nimport { routerTransition } from 'src/app/router.animations';\r\nimport { MetaService } from 'src/app/shared/services/meta.service';\r\nimport { NgbDateStruct, NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-monthly-outstanding',\r\n  templateUrl: './monthly-outstanding.component.html',\r\n  styleUrls: ['./monthly-outstanding.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class MonthlyOutstandingComponent implements OnInit {\r\n\r\n    sites;\r\n    monthlyData = [];\r\n    filterForm: FormGroup;\r\n    loading = false;\r\n\r\n    types = [\r\n        { type_name: 'All', value: '' },\r\n        { type_name: 'Sundry Debtors', value: 'Sundry Debtors' },\r\n        { type_name: 'Sundry Creditors', value: 'Sundry Creditors' },\r\n    ];\r\n\r\n    filters = {\r\n        site_name: '',\r\n        start_date: '',\r\n        // end_date: '',\r\n        category: '',\r\n        page: 0\r\n    };\r\n    pagination = {total: 0, currenPage: 1, pageSize: 50, maxSize: 10};\r\n    totalDr = 0;\r\n    totalCr = 0;\r\n    loaded = true;\r\n    site_name: any;\r\n    usertype: any;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        public toastr: ToastrService,\r\n        public accountService: AccountsService,\r\n        private calendar: NgbCalendar,\r\n        public meta: MetaService\r\n    ) {\r\n\r\n        this.usertype = this.meta.getSiteFromStorage().role;\r\n        this.site_name = this.meta.getSiteFromStorage().site;\r\n\r\n        this.filterForm = this.formBuilder.group({\r\n            site_name: ['', Validators.required],\r\n            start_date: [''],\r\n            // end_date: [''],\r\n            type: ['']\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n      this.filterForm.controls['start_date'].setValue(this.calendar.getToday());\r\n        this.getSites();\r\n    }\r\n\r\n    // getSites() {\r\n    //     this.meta.getSites().subscribe((res: any) => {\r\n    //         this.sites = res;\r\n    //         if (this.usertype === 'ADMIN') {\r\n    //             this.filterForm.controls['site_name'].setValue(this.sites[0].branch_name);\r\n    //         } else {\r\n    //             this.filterForm.controls['site_name'].setValue(this.site_name);\r\n    //         }\r\n    //     }, err => {\r\n\r\n    //     });\r\n    // }\r\n\r\n    getSites() {\r\n      this.meta.getSites().subscribe((res: any) => {\r\n          this.sites = res;\r\n          if (this.usertype === 'ADMIN') {\r\n              this.filterForm.controls['site_name'].setValue('');\r\n          } else {\r\n              this.filterForm.controls['site_name'].setValue(this.site_name);\r\n          }\r\n      }, err => {\r\n\r\n      });\r\n  }\r\n\r\n\r\n    resetFilters() {\r\n        this.filterForm.get('start_date').setValue('');\r\n        // this.filterForm.get('end_date').setValue('');\r\n        this.filters = {\r\n            site_name: '',\r\n            start_date: '',\r\n            // end_date: '',\r\n            category: '',\r\n            page: 0\r\n        };\r\n        this.fetchReport();\r\n    }\r\n\r\n\r\n    fetchReport() {\r\n        let startDt = '';\r\n        // let endDt = '';\r\n\r\n        if (this.filterForm.controls['site_name'].value) {\r\n            this.filters.site_name = this.filterForm.controls['site_name'].value;\r\n        } else {\r\n            this.filters.site_name = '';\r\n        }\r\n\r\n        if (this.filterForm.controls['type'].value) {\r\n            this.filters.category = this.filterForm.controls['type'].value;\r\n        } else {\r\n            this.filters.category = '';\r\n        }\r\n\r\n        if (this.filterForm.controls['start_date'].value) {\r\n            startDt = this.filterForm.controls['start_date'].value.year + '-' +\r\n                this.filterForm.controls['start_date'].value.month + '-' +\r\n                this.filterForm.controls['start_date'].value.day;\r\n        } else {\r\n            startDt = '';\r\n        }\r\n\r\n        // if (this.filterForm.controls['end_date'].value) {\r\n        //     endDt = this.filterForm.controls['end_date'].value.year + '-' +\r\n        //         this.filterForm.controls['end_date'].value.month + '-' +\r\n        //         (this.filterForm.controls['end_date'].value.day);\r\n        // } else {\r\n        //     endDt = '';\r\n        // }\r\n\r\n        this.filters.page = this.pagination.currenPage;\r\n\r\n        this.filters.start_date = startDt;\r\n        // this.filters.end_date = endDt;\r\n\r\n        this.loading = true;\r\n        this.loaded = false;\r\n        this.monthlyData = [];\r\n        this.accountService.getMonthlyOutstanding(this.filters).subscribe((res: any) => {\r\n            this.loading = false;\r\n            this.loaded = true;\r\n            this.totalDr = 0 ;\r\n            this.totalCr = 0 ;\r\n            res.result.forEach(element => {\r\n                this.totalDr = this.totalDr + element.dr;\r\n                this.totalCr = this.totalCr + element.cr;\r\n            });\r\n            this.monthlyData = res.result;\r\n            // this.pagination.total = res.total;\r\n        }, err => {\r\n            this.loaded = true;\r\n            this.loading = false;\r\n        });\r\n\r\n    }\r\n\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-md-12 col-sm-12 col-xl-12 col-lg-12 min-height\\\">\\r\\n      <form [formGroup]=\\\"filterForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <h4><i class=\\\"fa fa-book\\\"></i> Trial Balance</h4>\\r\\n            <hr />\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Select Sites</label>\\r\\n              <select formControlName=\\\"site_name\\\" class=\\\"form-control\\\" required>\\r\\n                <option value=\\\"\\\">All</option>\\r\\n                <option *ngFor=\\\"let s of sites\\\" value=\\\"{{ s.branch_name }}\\\">\\r\\n                  {{ s.branch_name }}\\r\\n                </option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>As On Date</label>\\r\\n              <div class=\\\"input-group datepicker-input\\\">\\r\\n                <input\\r\\n                  class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"dd/mm/yyyy\\\"\\r\\n                  name=\\\"dp\\\"\\r\\n                  formControlName=\\\"start_date\\\"\\r\\n                  ngbDatepicker\\r\\n                  #d=\\\"ngbDatepicker\\\"\\r\\n                />\\r\\n                <div class=\\\"input-group-append\\\">\\r\\n                  <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\">\\r\\n                    <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-4 wrapper-right\\\">\\r\\n            <button (click)=\\\"fetchReport()\\\" class=\\\"btn btn-primary\\\">\\r\\n              <i class=\\\"fa fa-get-pocket\\\" aria-hidden=\\\"true\\\"></i> Fetch\\r\\n            </button>&nbsp;\\r\\n            <button (click)=\\\"resetFilters()\\\" class=\\\"btn btn-warning\\\"><i class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\"></i> Reset </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n      <hr />\\r\\n      <!-- <ngb-pagination\\r\\n          [(page)]=\\\"pagination.currenPage\\\"\\r\\n          [pageSize]=\\\"pagination.pageSize\\\"\\r\\n          [collectionSize]=\\\"pagination.total\\\"\\r\\n          [maxSize]=\\\"pagination.maxSize\\\"\\r\\n          (pageChange)=\\\"fetchReport()\\\"\\r\\n        ></ngb-pagination>-->\\r\\n\\r\\n      <table class=\\\"table table-hover table-striped table-bordered table-condensed\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Account name</th>\\r\\n            <th class=\\\"cell-align\\\">Dr.</th>\\r\\n            <th class=\\\"cell-align\\\">Cr.</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n        <tr *ngIf=\\\"loading\\\">\\r\\n            <td colspan=\\\"10\\\">\\r\\n              <div class=\\\"showbox\\\">\\r\\n                <div class=\\\"loader\\\">\\r\\n                  <svg class=\\\"circular\\\" viewBox=\\\"25 25 50 50\\\">\\r\\n                    <circle class=\\\"path\\\" cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"2\\\" stroke-miterlimit=\\\"10\\\" />\\r\\n                  </svg>\\r\\n                </div>\\r\\n              </div>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr *ngFor=\\\"let balance of trialBalances\\\">\\r\\n            <td>{{ balance.account_name ? balance.account_name : '--' }}</td>\\r\\n            <td class=\\\"cell-align\\\">{{ (balance.dr ? balance.dr : 0 ) | number : '1.2-2' }}</td>\\r\\n            <td class=\\\"cell-align\\\">{{ (balance.cr ? balance.cr : 0)  | number : '1.2-2' }}</td>\\r\\n          </tr>\\r\\n          <tr *ngIf=\\\"trialBalances.length > 0\\\">\\r\\n            <td align=\\\"right\\\" colspan=\\\"1\\\">Total</td>\\r\\n            <td align=\\\"right\\\">{{totalDr | number : '1.2-2'}}</td>\\r\\n            <td align=\\\"right\\\">{{totalCr | number : '1.2-2'}}</td>\\r\\n          </tr>\\r\\n          <tr *ngIf=\\\" loaded && trialBalances.length === 0\\\">\\r\\n            <td align=\\\"center\\\" colspan=\\\"1\\\">No data available</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n      <!-- <ngb-pagination\\r\\n          [(page)]=\\\"pagination.currenPage\\\"\\r\\n          [pageSize]=\\\"pagination.pageSize\\\"\\r\\n          [collectionSize]=\\\"pagination.total\\\"\\r\\n          [maxSize]=\\\"pagination.maxSize\\\"\\r\\n          (pageChange)=\\\"fetchReport()\\\"\\r\\n        ></ngb-pagination> -->\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hY2NvdW50cy9jb21wb25lbnRzL3RyaWFsLWJhbGFuY2UvdHJpYWwtYmFsYW5jZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AccountsService } from 'src/app/shared/services/accounts.service';\r\nimport { routerTransition } from 'src/app/router.animations';\r\nimport { MetaService } from 'src/app/shared/services/meta.service';\r\nimport { NgbDateStruct, NgbCalendar } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-trial-balance',\r\n  templateUrl: './trial-balance.component.html',\r\n  styleUrls: ['./trial-balance.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class TrialBalanceComponent implements OnInit {\r\n\r\n    sites;\r\n    trialBalances = [];\r\n    filterForm: FormGroup;\r\n    loading = false;\r\n    filters = {\r\n        site_name: '',\r\n        start_date: '',\r\n        // end_date: '',\r\n        page: 0\r\n    };\r\n    pagination = {total: 0, currenPage: 1, pageSize: 50, maxSize: 10};\r\n    totalDr = 0;\r\n    totalCr = 0;\r\n    loaded = true;\r\n    site_name: any;\r\n    usertype: any;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        public toastr: ToastrService,\r\n        public accountService: AccountsService,\r\n        private calendar: NgbCalendar,\r\n        public meta: MetaService\r\n    ) {\r\n\r\n        this.usertype = this.meta.getSiteFromStorage().role;\r\n        this.site_name = this.meta.getSiteFromStorage().site;\r\n\r\n        this.filterForm = this.formBuilder.group({\r\n            site_name: ['', Validators.required],\r\n            start_date: [''],\r\n            // end_date: ['']\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n      this.filterForm.controls['start_date'].setValue(this.calendar.getToday());\r\n        this.getSites();\r\n        // this.fetchReport();\r\n    }\r\n\r\n\r\n    getSites() {\r\n        this.meta.getSites().subscribe((res: any) => {\r\n            this.sites = res;\r\n            if (this.usertype === 'ADMIN') {\r\n                this.filterForm.controls['site_name'].setValue('');\r\n            } else {\r\n                this.filterForm.controls['site_name'].setValue(this.site_name);\r\n            }\r\n        }, err => {\r\n\r\n        });\r\n    }\r\n\r\n    resetFilters() {\r\n        this.filterForm.get('start_date').setValue('');\r\n        this.filterForm.get('end_date').setValue('');\r\n        this.filters = {\r\n            site_name: '',\r\n            start_date: '',\r\n            // end_date: '',\r\n            page: 0\r\n        };\r\n        this.fetchReport();\r\n    }\r\n\r\n    fetchReport() {\r\n\r\n        let startDt = '';\r\n        // let endDt = '';\r\n\r\n        if (this.filterForm.controls['site_name'].value) {\r\n            this.filters.site_name = this.filterForm.controls['site_name'].value;\r\n        } else {\r\n            this.filters.site_name = '';\r\n        }\r\n\r\n        if (this.filterForm.controls['start_date'].value) {\r\n            startDt = this.filterForm.controls['start_date'].value.year + '-' +\r\n                this.filterForm.controls['start_date'].value.month + '-' +\r\n                this.filterForm.controls['start_date'].value.day;\r\n        } else {\r\n            startDt = '';\r\n        }\r\n\r\n        // if (this.filterForm.controls['end_date'].value) {\r\n        //     endDt = this.filterForm.controls['end_date'].value.year + '-' +\r\n        //         this.filterForm.controls['end_date'].value.month + '-' +\r\n        //         (this.filterForm.controls['end_date'].value.day);\r\n        // } else {\r\n        //     endDt = '';\r\n        // }\r\n\r\n        this.filters.page = this.pagination.currenPage;\r\n\r\n        this.filters.start_date = startDt;\r\n        // this.filters.end_date = endDt;\r\n\r\n        this.loading = true;\r\n        this.loaded = false;\r\n        this.trialBalances = [];\r\n\r\n        console.log('', this.filters);\r\n\r\n        this.accountService.getTrialBalance(this.filters).subscribe((res: any) => {\r\n            this.loading = false;\r\n            this.loaded = true;\r\n            console.log(' trialBalances >>>', res.result);\r\n            this.totalDr = 0 ;\r\n            this.totalCr = 0 ;\r\n\r\n            res.result.forEach(element => {\r\n                this.totalDr = this.totalDr + element.dr;\r\n                this.totalCr = this.totalCr + element.cr;\r\n            });\r\n\r\n            this.trialBalances = res.result;\r\n            // this.pagination.total = res.total;\r\n        }, err => {\r\n            this.loaded = true;\r\n            this.loading = false;\r\n        });\r\n\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountsService {\r\n\r\n  constructor(public api: ApiService) { }\r\n\r\n\r\n  getTrialBalance(filters) {\r\n    // return this.api.get('reports/site_trial_balance', filters);\r\n    // return this.api.get('reports/trial_balance_check', filters);\r\n    // return this.api.get('reports/trial_balance', filters);\r\n    // return this.api.get('reports/trial_balance_new', filters);\r\n    return this.api.get('reports/trialbalance_new', filters);\r\n  }\r\n\r\n  getMonthlyOutstanding(filters) {\r\n    return this.api.get('reports/site_monthly_outstanding', filters);\r\n  }\r\n\r\n  getBalanceStock(filters) {\r\n    return this.api.get('reports/site_balance_stock', filters);\r\n  }\r\n\r\n  addTransaction(data) {\r\n    return this.api.post('accounts_transaction/create', data);\r\n  }\r\n\r\n  deleteTransaction(id) {\r\n    return this.api.delete('accounts_transaction/delete?id=' +  id);\r\n  }\r\n\r\n  getTransactions() {\r\n    return this.api.get('accounts_transaction/list');\r\n  }\r\n\r\n  updateTransaction(id, data) {\r\n    return this.api.put('accounts_transaction/update?id=' + id, data);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}