{"version":3,"sources":["webpack:///./src/app/layout/analysis-report/analysis-report.component.html","webpack:///./src/app/layout/analysis-report/analysis-report.component.scss","webpack:///./src/app/layout/analysis-report/analysis-report.component.ts","webpack:///./src/app/layout/analysis-report/analysis-report.module.ts","webpack:///./src/app/layout/analysis-report/analysis-report.routing.module.ts","webpack:///./src/app/layout/analysis-report/ega-report/ega-report.component.html","webpack:///./src/app/layout/analysis-report/ega-report/ega-report.component.scss","webpack:///./src/app/layout/analysis-report/ega-report/ega-report.component.ts","webpack:///./src/app/layout/analysis-report/monthly-balance-chart/monthly-balance-chart.component.html","webpack:///./src/app/layout/analysis-report/monthly-balance-chart/monthly-balance-chart.component.scss","webpack:///./src/app/layout/analysis-report/monthly-balance-chart/monthly-balance-chart.component.ts","webpack:///./src/app/layout/analysis-report/under-performance-truck-report/under-performance-truck-report.component.html","webpack:///./src/app/layout/analysis-report/under-performance-truck-report/under-performance-truck-report.component.scss","webpack:///./src/app/layout/analysis-report/under-performance-truck-report/under-performance-truck-report.component.ts"],"names":[],"mappings":"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","file":"analysis-report-analysis-report-module.js","sourcesContent":["module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hbmFseXNpcy1yZXBvcnQvYW5hbHlzaXMtcmVwb3J0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-analysis-report',\n  templateUrl: './analysis-report.component.html',\n  styleUrls: ['./analysis-report.component.scss']\n})\nexport class AnalysisReportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule, NgbTimeAdapter } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { EgaReportComponent } from './ega-report/ega-report.component';\r\nimport { AnalysisReportsRoutingModule } from './analysis-report.routing.module';\r\nimport { AnalysisReportComponent } from './analysis-report.component';\r\nimport { UnderPerformanceTruckReportComponent } from './under-performance-truck-report/under-performance-truck-report.component';\r\nimport { MonthlyBalanceChartComponent } from './monthly-balance-chart/monthly-balance-chart.component';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { Ng2AutoCompleteModule } from 'ng2-auto-complete';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EgaReportComponent,\r\n    AnalysisReportComponent,\r\n    UnderPerformanceTruckReportComponent,\r\n    MonthlyBalanceChartComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AnalysisReportsRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    Ng2AutoCompleteModule,\r\n    ChartsModule\r\n  ]\r\n})\r\nexport class AnalysisReportsModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EgaReportComponent } from './ega-report/ega-report.component';\r\nimport { AnalysisReportComponent } from './analysis-report.component';\r\nimport { UnderPerformanceTruckReportComponent } from './under-performance-truck-report/under-performance-truck-report.component';\r\nimport { MonthlyBalanceChartComponent } from './monthly-balance-chart/monthly-balance-chart.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AnalysisReportComponent,\r\n    children: [\r\n      {path: '', redirectTo: 'ega-report', pathMatch: 'prefix' },\r\n      {path: 'ega-report', component: EgaReportComponent},\r\n      {path: 'under-performance-truck-report', component: UnderPerformanceTruckReportComponent},\r\n      {path: 'monthly-balance-chart', component: MonthlyBalanceChartComponent}\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AnalysisReportsRoutingModule { }\r\n","module.exports = \"<div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col col-md-12 col-sm-12 col-xl-12 col-lg-12 min-height\\\">\\n      <form [formGroup]=\\\"filterForm\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <h4><i class=\\\"fa fa-book\\\"></i> EGA Report</h4>\\n            <hr />\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Month</label>\\n              <select formControlName=\\\"month\\\" class=\\\"form-control\\\">\\n                <option value=\\\"01\\\">Jan</option>\\n                <option value=\\\"02\\\">Feb</option>\\n                <option value=\\\"03\\\">March</option>\\n                <option value=\\\"04\\\">April</option>\\n                <option value=\\\"05\\\">May</option>\\n                <option value=\\\"06\\\">June</option>\\n                <option value=\\\"07\\\">July</option>\\n                <option value=\\\"08\\\">August</option>\\n                <option value=\\\"09\\\">September</option>\\n                <option value=\\\"10\\\">October</option>\\n                <option value=\\\"11\\\">November</option>\\n                <option value=\\\"12\\\">December</option> \\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Year</label>\\n              <select formControlName=\\\"year\\\" class=\\\"form-control\\\">\\n              <option value=\\\"2018\\\">2018</option>\\n              <option value=\\\"2019\\\">2019</option>\\n              <option value=\\\"2020\\\">2020</option>\\n\\n            </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Select Sites</label>\\n              <select formControlName=\\\"site_name\\\" class=\\\"form-control\\\">\\n                  <option value=\\\"\\\">All</option>\\n                <option *ngFor=\\\"let s of sites\\\" value=\\\"{{ s.branch_name }}\\\">\\n                  {{ s.branch_name }}\\n                </option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-4 wrapper-right\\\">\\n            <button (click)=\\\"fetchEgaReport()\\\" class=\\\"btn btn-primary\\\" >\\n              <i class=\\\"fa fa-get-pocket\\\" aria-hidden=\\\"true\\\"></i> Fetch\\n            </button>&nbsp;\\n            <button (click)=\\\"resetFilters()\\\" class=\\\"btn btn-warning\\\"><i class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\"></i> Reset </button>\\n          </div>\\n        </div>\\n        <p>Notes :   Report set on balance. Excellent > 20 %.   Good 15 to 20%. Average less tha 15%</p>\\n      </form>\\n      <hr />\\n      <!-- <ngb-pagination\\n          [(page)]=\\\"pagination.currenPage\\\"\\n          [pageSize]=\\\"pagination.pageSize\\\"\\n          [collectionSize]=\\\"pagination.total\\\"\\n          [maxSize]=\\\"pagination.maxSize\\\"\\n          (pageChange)=\\\"fetchReport()\\\"\\n        ></ngb-pagination>\\n        <p><strong>Total:</strong> {{ pagination.total }}<br /><strong>Records per page:</strong> {{ pagination.pageSize }}</p> -->\\n        <div class=\\\"btn-group btn-group-toggle\\\" style=\\\"float: right;margin-bottom: 10px;\\\" ngbRadioGroup name=\\\"radioBasic\\\">\\n          <!-- <label class=\\\"btn-primary\\\" ngbButtonLabel>\\n            <input type=\\\"radio\\\" ngbButton  (click)=\\\"doFilter('all')\\\" [checked]=\\\"model.all\\\" [value]=\\\"all\\\"> All\\n          </label> -->\\n          <label class=\\\"btn-primary\\\" ngbButtonLabel>\\n            <input type=\\\"radio\\\" ngbButton  (click)=\\\"doFilter('exc')\\\"  value=\\\"exc\\\"> Excellent\\n          </label>\\n          <label class=\\\"btn-primary\\\" ngbButtonLabel>\\n            <input type=\\\"radio\\\" ngbButton  (click)=\\\"doFilter('good')\\\"  value=\\\"good\\\"> Good\\n          </label>\\n          <label class=\\\"btn-primary\\\" ngbButtonLabel>\\n            <input type=\\\"radio\\\" ngbButton  (click)=\\\"doFilter('avg')\\\" value=\\\"avg\\\"> Average\\n          </label>\\n        </div>\\n        <br/>\\n        <div style=\\\"width:100%;overflow-x: auto;\\\" >\\n        <table class=\\\"table table-hover table-striped table-bordered table-condensed zui-table\\\">\\n        <thead>\\n          <tr>\\n            <th>Sites</th>\\n            <th>Destination</th>\\n            <th>Trips</th>\\n            <th>Kms Run.</th>\\n            <th>Balance</th>\\n            <th>Cost Per KM</th>\\n            <th>Value</th>\\n          </tr>\\n        </thead>\\n\\n        <tbody>\\n          <tr *ngIf=\\\"loading\\\">\\n            <td colspan=\\\"7\\\">\\n              <div class=\\\"showbox\\\">\\n                <div class=\\\"loader\\\">\\n                  <svg class=\\\"circular\\\" viewBox=\\\"25 25 50 50\\\">\\n                    <circle class=\\\"path\\\" cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"2\\\" stroke-miterlimit=\\\"10\\\" />\\n                  </svg>\\n                </div>\\n              </div>\\n            </td>\\n          </tr>\\n          <tr *ngFor=\\\"let report of dataFilter\\\">\\n            <td >{{ report._id.site }}</td>\\n            <td>{{ report._id.to }}</td>\\n            <td class=\\\"cell-align\\\">{{ report.trips }}</td>\\n            <td class=\\\"cell-align\\\">{{ report.km }}</td>\\n            <td class=\\\"cell-align\\\">{{ report.balance}}</td>\\n            <td class=\\\"cell-align\\\">{{ report.costPerkM}}</td>\\n            <td class=\\\"cell-align\\\">{{ report.value}}</td>\\n\\n          </tr>\\n          \\n          <tr *ngIf=\\\"loaded && dataFilter?.length === 0\\\">\\n            <td align=\\\"center\\\" colspan=\\\"7\\\">No data available</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n      <!-- <ngb-pagination\\n          [(page)]=\\\"pagination.currenPage\\\"\\n          [pageSize]=\\\"pagination.pageSize\\\"\\n          [collectionSize]=\\\"pagination.total\\\"\\n          [maxSize]=\\\"pagination.maxSize\\\"\\n          (pageChange)=\\\"fetchReport()\\\"\\n        ></ngb-pagination> -->\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"tbody {\\n  display: block;\\n  height: 350px;\\n  overflow: auto; }\\n\\nthead, tbody tr {\\n  display: table;\\n  width: 1200px;\\n  table-layout: fixed;\\n  /* even columns width , fix width of table too*/ }\\n\\nthead {\\n  width: 1200px;\\n  overflow: auto;\\n  /* scrollbar is average 1em/16px width, remove it from thead width */ }\\n\\ntable {\\n  width: 1200px;\\n  overflow: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FuYWx5c2lzLXJlcG9ydC9lZ2EtcmVwb3J0L0Q6XFx0ZXN0aW5nX2ZvbGRlclxcdGhpcnVcXGZyb250ZW5kXFx0ZF9mcm9udGVuZC9zcmNcXGFwcFxcbGF5b3V0XFxhbmFseXNpcy1yZXBvcnRcXGVnYS1yZXBvcnRcXGVnYS1yZXBvcnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxjQUFhO0VBQ2IsYUFBWTtFQUNaLGNBQWEsRUFBQTs7QUFFakI7RUFDSSxjQUFhO0VBQ2IsYUFBWTtFQUNaLG1CQUFrQjtFQUFDLCtDQUFBLEVBQWdEOztBQUV2RTtFQUNJLGFBQWE7RUFDYixjQUFhO0VBQ2Isb0VBQUEsRUFBcUU7O0FBRXpFO0VBQ0ksYUFBWTtFQUNaLGNBQWEsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hbmFseXNpcy1yZXBvcnQvZWdhLXJlcG9ydC9lZ2EtcmVwb3J0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG50Ym9keSB7XG4gICAgZGlzcGxheTpibG9jaztcbiAgICBoZWlnaHQ6MzUwcHg7XG4gICAgb3ZlcmZsb3c6YXV0bztcbn1cbnRoZWFkLCB0Ym9keSB0ciB7XG4gICAgZGlzcGxheTp0YWJsZTtcbiAgICB3aWR0aDoxMjAwcHg7XG4gICAgdGFibGUtbGF5b3V0OmZpeGVkOy8qIGV2ZW4gY29sdW1ucyB3aWR0aCAsIGZpeCB3aWR0aCBvZiB0YWJsZSB0b28qL1xufVxudGhlYWQge1xuICAgIHdpZHRoOiAxMjAwcHg7XG4gICAgb3ZlcmZsb3c6YXV0bztcbiAgICAvKiBzY3JvbGxiYXIgaXMgYXZlcmFnZSAxZW0vMTZweCB3aWR0aCwgcmVtb3ZlIGl0IGZyb20gdGhlYWQgd2lkdGggKi9cbn1cbnRhYmxlIHtcbiAgICB3aWR0aDoxMjAwcHg7XG4gICAgb3ZlcmZsb3c6YXV0bztcblxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { ApiService } from 'src/app/shared/services/api.service';\nimport { MetaService } from 'src/app/shared/services/meta.service';\nimport { ReportsService } from 'src/app/shared/services/reports.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-ega-report',\n  templateUrl: './ega-report.component.html',\n  styleUrls: ['./ega-report.component.scss']\n})\nexport class EgaReportComponent implements OnInit {\n  model = 'avg';\n  sites;\n  // accounts = [];\n  filterForm: FormGroup;\n  loading = false;\n  loaded = true;\n  data;\n  dataFilter;\n  usertype: any;\n  filters = {\n      site: '',\n      year:'',\n      month:''\n  };\n\n  doFilter(value){\n    this.model = value;\n    this.apply();\n  }\n\n  apply(){\n    var dataFilter = []\n    if(this.model=='exc'){\n      this.data.forEach(report => {\n          if(report.value=='Excellent'){\n            dataFilter.push(report);\n          }\n      });\n    } else if(this.model=='good'){\n      this.data.forEach(report => {\n        if(report.value=='Good'){\n          dataFilter.push(report);\n        }\n      });\n    } else if(this.model=='avg'){\n      this.data.forEach(report => {\n        if(report.value=='Average'){\n          dataFilter.push(report);\n        }\n      });\n    } else if(this.model=='all'){\n      dataFilter = this.data;\n    }\n    this.dataFilter = dataFilter;\n  }\n\n  resetFilters(){\n    this.filterForm.setValue({\n      site: '',\n      year:'',\n      month:''\n  })\n  }\n\n  fetchEgaReport(){\n    this.model = 'all'\n    this.loading = true;\n    this.filters.site = this.filterForm.value.site_name;\n    this.filters.year = this.filterForm.value.year ?this.filterForm.value.year : new Date().getFullYear();\n    this.filters.month = this.filterForm.value.month ?this.filterForm.value.month : new Date().getMonth();\n    this.data = [];\n    this.dataFilter = [];\n    this.reportService.getEgaReport(this.filters).subscribe(res=>{\n      this.data = res;\n      this.model = 'avg'\n     this.apply();\n      this.loading = false;\n    })\n  }\n\n  constructor( public api: ApiService,\n    public meta: MetaService,\n    private formBuilder: FormBuilder,\n    public reportService: ReportsService,\n    public toastr: ToastrService) {\n      this.usertype = this.meta.getSiteFromStorage().role;\n\n      this.filterForm = this.formBuilder.group({\n        site_name: [''],\n        year: [''],\n        month: ['']\n    });\n\n    this.getSites();\n\n     }\n\n  ngOnInit() {\n    \n  }\n\n  getSites() {\n    this.meta.getSites().subscribe((res: any) => {\n        this.sites = res;\n        if (this.usertype === 'ADMIN') {\n            this.filterForm.controls['site_name'].setValue('');\n        } else {\n            this.filterForm.controls['site_name'].setValue('');\n        }\n    }, err => {\n\n    });\n}\n\n}\n","module.exports = \"<div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col col-md-12 col-sm-12 col-xl-12 col-lg-12 min-height\\\">\\n      <form [formGroup]=\\\"filterForm\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <h4><i class=\\\"fa fa-book\\\"></i> Monthly Balance Chart</h4>\\n            <hr />\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Year</label>\\n              <select formControlName=\\\"year\\\" class=\\\"form-control\\\">\\n              <option value=\\\"2018\\\">2018</option>\\n              <option value=\\\"2019\\\">2019</option>\\n              <option value=\\\"2020\\\">2020</option>\\n            </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Select Sites</label>\\n              <select formControlName=\\\"site\\\" class=\\\"form-control\\\">\\n                  <option value=\\\"\\\">All</option>\\n                <option *ngFor=\\\"let s of sites\\\" value=\\\"{{ s.branch_name }}\\\">\\n                  {{ s.branch_name }}\\n                </option>\\n              </select>\\n            </div>\\n          </div>\\n          \\n\\n          <div class=\\\"col-md-4\\\">\\n            <div class=\\\"form-group\\\" style=\\\"margin-top:30px;\\\">\\n\\n            <button (click)=\\\"fetchReport()\\\" class=\\\"btn btn-primary\\\" >\\n              <i class=\\\"fa fa-get-pocket\\\" aria-hidden=\\\"true\\\"></i> Fetch\\n            </button>&nbsp;\\n            <button (click)=\\\"resetFilters()\\\" class=\\\"btn btn-warning\\\"><i class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\"></i> Reset </button>\\n          </div></div>\\n        </div>\\n      </form>\\n      <hr />\\n      <div style=\\\"width:100%;height:400px !important;overflow: auto;\\\" >\\n\\n      <canvas *ngIf=\\\"barChartData?.length\\\" baseChart \\n    [datasets]=\\\"barChartData\\\"\\n    [labels]=\\\"barChartLabels\\\"\\n    [options]=\\\"barChartOptions\\\"\\n    [legend]=\\\"barChartLegend\\\"\\n    [chartType]=\\\"barChartType\\\">\\n  </canvas>\\n  </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hbmFseXNpcy1yZXBvcnQvbW9udGhseS1iYWxhbmNlLWNoYXJ0L21vbnRobHktYmFsYW5jZS1jaGFydC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { ApiService } from 'src/app/shared/services/api.service';\nimport { MetaService } from 'src/app/shared/services/meta.service';\nimport { ReportsService } from 'src/app/shared/services/reports.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\n\n@Component({\n  selector: 'app-monthly-balance-chart',\n  templateUrl: './monthly-balance-chart.component.html',\n  styleUrls: ['./monthly-balance-chart.component.scss']\n})\nexport class MonthlyBalanceChartComponent implements OnInit {\n\n  resetFilters(){\n    this.filterForm.setValue({\n      site: '',\n      year:'',\n  })\n  }\n\n  public barChartOptions: ChartOptions = {\n    responsive: true,\n  };\n  public barChartLabels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul','Aug','Sep','Oct','Nov','Dec'];\n  public barChartType: ChartType = 'bar';\n  public barChartLegend = true;\n/*   public defaultXAxis = [0,0,0,0,0,0,0,0,0,0,0,0]\n */\n    public barChartData: ChartDataSets[] = [\n      /* { data: [65, 59, 80, 81, 56, 55, 40,80, 81, 56,65, 59], label: 'Series A', stack: 'a' },\n      { data: [28, 48, 40, 19, 86, 27, 90,40, 19, 86,28, 48], label: 'Series B', stack: 'a' } */\n    ];\n\n\n  model = 'all';\n  sites;\n  // accounts = [];\n  filterForm: FormGroup;\n  loading = false;\n  loaded = true;\n  data;\n  dataFilter;\n  usertype: any;\n  filters = {\n      site: '',\n      year:'',\n  };\n\n  fetchReport(){\n    this.barChartData = [];\n    this.filters.year = this.filterForm.value.year ? this.filterForm.value.year  : new Date().getFullYear();\n    this.filters.site = this.filterForm.value.site;\n    this.reportService.getMonthlyBalanceReport(this.filters).subscribe(res=>{\n      this.data = res;\n        var map = new Map();\n        this.data.forEach(record => {\n          if(!map.get(record['_id']['site'])){\n            map.set(record['_id']['site'],[]);\n          }\n          let d = {};\n          d['month'] = record['_id']['month']\n          d['balance']= record['balance']\n          map.get(record['_id']['site']).push(d);\n        });\n        if(map.size>0){\n          this.processForChart(map);\n        } else {\n          this.barChartData.push({ data: [0,0,0,0,0,0,0,0,0,0,0,0], label: 'No Data', stack: 'a' })\n        }\n\n    })\n  }\n\n  processForChart(map){\n      map.forEach((value: boolean, key: string) => {\n        var stack = { data: [0,0,0,0,0,0,0,0,0,0,0,0], label: key, stack: 'a' }\n          var entValues = map.get(key);\n          console.log(entValues)\n          entValues.forEach(entValue => {\n            stack.data[parseInt(entValue['month'])-1] = parseInt(entValue['balance'])\n          });\n          console.log(stack);\n          this.barChartData.push(stack);\n      });\n  }\n\n  constructor( public api: ApiService,\n    public meta: MetaService,\n    private formBuilder: FormBuilder,\n    public reportService: ReportsService,\n    public toastr: ToastrService) {\n      this.usertype = this.meta.getSiteFromStorage().role;\n\n      this.filterForm = this.formBuilder.group({\n        site: [''],\n        year: ['']\n    });\n\n    this.getSites();\n\n     }\n\n  ngOnInit() {\n    \n  }\n\n  getSites() {\n    this.meta.getSites().subscribe((res: any) => {\n        this.sites = res;\n        if (this.usertype === 'ADMIN') {\n            this.filterForm.controls['site_name'].setValue('');\n        } else {\n            this.filterForm.controls['site_name'].setValue('');\n        }\n    }, err => {\n\n    });\n}\n\n}\n","module.exports = \"<div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col col-md-12 col-sm-12 col-xl-12 col-lg-12 min-height\\\">\\n      <form [formGroup]=\\\"filterForm\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <h4><i class=\\\"fa fa-book\\\"></i> Under Performance Truck Report</h4>\\n            <hr />\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Month</label>\\n              <select formControlName=\\\"month\\\" class=\\\"form-control\\\">\\n                <option value=\\\"01\\\">Jan</option>\\n                <option value=\\\"02\\\">Feb</option>\\n                <option value=\\\"03\\\">March</option>\\n                <option value=\\\"04\\\">April</option>\\n                <option value=\\\"05\\\">May</option>\\n                <option value=\\\"06\\\">June</option>\\n                <option value=\\\"07\\\">July</option>\\n                <option value=\\\"08\\\">August</option>\\n                <option value=\\\"09\\\">September</option>\\n                <option value=\\\"10\\\">October</option>\\n                <option value=\\\"11\\\">November</option>\\n                <option value=\\\"12\\\">December</option> \\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Year</label>\\n              <select formControlName=\\\"year\\\" class=\\\"form-control\\\">\\n              <option value=\\\"2018\\\">2018</option>\\n              <option value=\\\"2019\\\">2019</option>\\n              <option value=\\\"2020\\\">2020</option>\\n\\n            </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Select Tyres</label>\\n              <select formControlName=\\\"tyre\\\" class=\\\"form-control\\\">\\n                  <option value=\\\"6\\\">6</option>\\n                  <option value=\\\"10\\\">10</option>\\n                  <option value=\\\"12\\\">12</option>\\n                  <option value=\\\"14\\\">14</option>\\n                  <option value=\\\"16\\\">16</option>\\n                  <option value=\\\"18\\\">18</option>\\n\\n              </select>\\n            </div>\\n          </div>\\n          \\n\\n          <div class=\\\"col-md-4 wrapper-right\\\">\\n            <button (click)=\\\"fetchReport()\\\" class=\\\"btn btn-primary\\\" >\\n              <i class=\\\"fa fa-get-pocket\\\" aria-hidden=\\\"true\\\"></i> Fetch\\n            </button>&nbsp;\\n            <button (click)=\\\"resetFilters()\\\" class=\\\"btn btn-warning\\\"><i class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\"></i> Reset </button>\\n          </div>\\n        </div>\\n      </form>\\n      <hr />\\n      {{dataFilter?.length}}\\n      <!-- <ngb-pagination\\n          [(page)]=\\\"pagination.currenPage\\\"\\n          [pageSize]=\\\"pagination.pageSize\\\"\\n          [collectionSize]=\\\"pagination.total\\\"\\n          [maxSize]=\\\"pagination.maxSize\\\"\\n          (pageChange)=\\\"fetchReport()\\\"\\n        ></ngb-pagination>\\n        <p><strong>Total:</strong> {{ pagination.total }}<br /><strong>Records per page:</strong> {{ pagination.pageSize }}</p> -->\\n        <div class=\\\"btn-group btn-group-toggle\\\" style=\\\"float: right;margin-bottom: 10px;\\\" ngbRadioGroup name=\\\"radioBasic\\\">\\n         <!--  <label class=\\\"btn-primary\\\" ngbButtonLabel>\\n            <input type=\\\"radio\\\" ngbButton  (click)=\\\"doFilter('all')\\\" [checked]=\\\"model.all\\\" [value]=\\\"all\\\"> All\\n          </label> -->\\n          <label class=\\\"btn-primary\\\" ngbButtonLabel>\\n            <input type=\\\"radio\\\" ngbButton  (click)=\\\"doFilter('up')\\\"  value=\\\"up\\\"> Under Performance\\n          </label>\\n          <label class=\\\"btn-primary\\\" ngbButtonLabel>\\n            <input type=\\\"radio\\\" ngbButton  (click)=\\\"doFilter('exc')\\\" value=\\\"exc\\\"> Excellent\\n          </label>\\n        </div>\\n        <div style=\\\"width:100%;overflow-x: auto;\\\" >\\n\\n        <table class=\\\"table table-hover table-striped table-bordered table-condensed\\\">\\n        <thead>\\n          <tr>\\n            <th>Truck No</th>\\n            <th>Trips</th>\\n            <th>Tyres</th>\\n            <th>Kms Run.</th>\\n            <th>Freight</th>\\n            <th>Road Expense</th>\\n            <th>Diesel Expense</th>\\n            <th>Balance</th>\\n            <th>Target</th>\\n            <th>Maintenance</th>\\n            <th>Value</th>\\n\\n          </tr>\\n        </thead>\\n\\n        <tbody>\\n          <tr *ngIf=\\\"loading\\\">\\n            <td colspan=\\\"9\\\">\\n              <div class=\\\"showbox\\\">\\n                <div class=\\\"loader\\\">\\n                  <svg class=\\\"circular\\\" viewBox=\\\"25 25 50 50\\\">\\n                    <circle class=\\\"path\\\" cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"2\\\" stroke-miterlimit=\\\"10\\\" />\\n                  </svg>\\n                </div>\\n              </div>\\n            </td>\\n          </tr>\\n          <tr *ngFor=\\\"let report of dataFilter\\\">\\n            <td>{{ report._id.truckno }}</td>\\n            <td class=\\\"cell-align\\\">{{ report.trips }}</td>\\n            <td>{{ report._id.tyre }}</td>\\n            <td class=\\\"cell-align\\\">{{ report.km }}</td>\\n            <td class=\\\"cell-align\\\">{{ report.earning }}</td>\\n            <td class=\\\"cell-align\\\">{{ report.expenses}}</td>\\n            <td class=\\\"cell-align\\\">{{ report.dieselamount}}</td>\\n            <td class=\\\"cell-align\\\">{{ report.balance}}</td>\\n            <td class=\\\"cell-align\\\">{{ report.target}}</td>\\n            <td class=\\\"cell-align\\\">{{ report.maintenance}}</td>\\n            <td class=\\\"cell-align\\\">{{ report.value}}</td>\\n\\n          </tr>\\n          \\n          <tr *ngIf=\\\"loaded && dataFilter?.length === 0\\\">\\n            <td align=\\\"center\\\" colspan=\\\"6\\\">No data available</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      </div>\\n      <!-- <ngb-pagination\\n          [(page)]=\\\"pagination.currenPage\\\"\\n          [pageSize]=\\\"pagination.pageSize\\\"\\n          [collectionSize]=\\\"pagination.total\\\"\\n          [maxSize]=\\\"pagination.maxSize\\\"\\n          (pageChange)=\\\"fetchReport()\\\"\\n        ></ngb-pagination> -->\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"tbody {\\n  display: block;\\n  height: 350px;\\n  overflow: auto; }\\n\\nthead, tbody tr {\\n  display: table;\\n  width: 1200px;\\n  table-layout: fixed;\\n  /* even columns width , fix width of table too*/ }\\n\\nthead {\\n  width: 1200px;\\n  overflow: auto;\\n  /* scrollbar is average 1em/16px width, remove it from thead width */ }\\n\\ntable {\\n  width: 1200px;\\n  overflow: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L2FuYWx5c2lzLXJlcG9ydC91bmRlci1wZXJmb3JtYW5jZS10cnVjay1yZXBvcnQvRDpcXHRlc3RpbmdfZm9sZGVyXFx0aGlydVxcZnJvbnRlbmRcXHRkX2Zyb250ZW5kL3NyY1xcYXBwXFxsYXlvdXRcXGFuYWx5c2lzLXJlcG9ydFxcdW5kZXItcGVyZm9ybWFuY2UtdHJ1Y2stcmVwb3J0XFx1bmRlci1wZXJmb3JtYW5jZS10cnVjay1yZXBvcnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxjQUFhO0VBQ2IsYUFBWTtFQUNaLGNBQWEsRUFBQTs7QUFFakI7RUFDSSxjQUFhO0VBQ2IsYUFBWTtFQUNaLG1CQUFrQjtFQUFDLCtDQUFBLEVBQWdEOztBQUV2RTtFQUNJLGFBQWE7RUFDYixjQUFhO0VBQ2Isb0VBQUEsRUFBcUU7O0FBRXpFO0VBQ0ksYUFBWTtFQUNaLGNBQWEsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9hbmFseXNpcy1yZXBvcnQvdW5kZXItcGVyZm9ybWFuY2UtdHJ1Y2stcmVwb3J0L3VuZGVyLXBlcmZvcm1hbmNlLXRydWNrLXJlcG9ydC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxudGJvZHkge1xuICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgaGVpZ2h0OjM1MHB4O1xuICAgIG92ZXJmbG93OmF1dG87XG59XG50aGVhZCwgdGJvZHkgdHIge1xuICAgIGRpc3BsYXk6dGFibGU7XG4gICAgd2lkdGg6MTIwMHB4O1xuICAgIHRhYmxlLWxheW91dDpmaXhlZDsvKiBldmVuIGNvbHVtbnMgd2lkdGggLCBmaXggd2lkdGggb2YgdGFibGUgdG9vKi9cbn1cbnRoZWFkIHtcbiAgICB3aWR0aDogMTIwMHB4O1xuICAgIG92ZXJmbG93OmF1dG87XG4gICAgLyogc2Nyb2xsYmFyIGlzIGF2ZXJhZ2UgMWVtLzE2cHggd2lkdGgsIHJlbW92ZSBpdCBmcm9tIHRoZWFkIHdpZHRoICovXG59XG50YWJsZSB7XG4gICAgd2lkdGg6MTIwMHB4O1xuICAgIG92ZXJmbG93OmF1dG87XG5cbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MetaService } from 'src/app/shared/services/meta.service';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { ApiService } from 'src/app/shared/services/api.service';\nimport { ReportsService } from 'src/app/shared/services/reports.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-under-performance-truck-report',\n  templateUrl: './under-performance-truck-report.component.html',\n  styleUrls: ['./under-performance-truck-report.component.scss']\n})\nexport class UnderPerformanceTruckReportComponent implements OnInit {\n  model = 'all'\n  filterForm: FormGroup;\n  loading = false;\n  loaded = true;\n  data;\n  dataFilter;\n  usertype: any;\n  filters = {\n      tyre: '',\n      year:'',\n      month:''\n  };\n\n  resetFilters(){\n    this.filterForm.setValue({\n      tyre: '',\n      year:'',\n      month:''\n  })\n  }\n\n  constructor( public api: ApiService,\n    public meta: MetaService,\n    private formBuilder: FormBuilder,\n    public reportService: ReportsService,\n    public toastr: ToastrService) {\n      this.usertype = this.meta.getSiteFromStorage().role;\n\n      this.filterForm = this.formBuilder.group({\n        tyre: [''],\n        year: [''],\n        month: ['']\n    });\n\n\n     }\n\n     doFilter(value){\n       this.model = value\n       this.dataFilter = [];\n       if(value=='all'){\n         this.dataFilter = this.data\n       } else if(value=='up'){\n         var df = [];\n         this.data.forEach(r => {\n            if(r.value==\"Under Performance\"){\n              df.push(r);\n            }\n         });\n         this.dataFilter = df\n       } else if(value=='exc'){\n        var df = [];\n        this.data.forEach(r => {\n           if(r.value==\"Excellent\"){\n             df.push(r);\n           }\n        });\n        this.dataFilter = df\n      }\n     }\n\n\n     fetchReport(){\n       this.model = 'all'\n      this.loading = true;\n      this.filters.tyre = this.filterForm.value.tyre;\n      this.filters.year = this.filterForm.value.year ?this.filterForm.value.year : new Date().getFullYear();\n      this.filters.month = this.filterForm.value.month ?this.filterForm.value.month : new Date().getMonth();\n      this.data = [];\n      this.dataFilter = [];\n      this.reportService.getUnderPerformanceTruckReport(this.filters).subscribe(res=>{\n        this.data = res;\n        this.dataFilter = res;\n        this.loading = false;\n      })\n     }\n\n  ngOnInit() {\n    \n  }\n\n}\n"],"sourceRoot":""}